{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/AnimaAnimus.js"],"names":["require","Opal","modules","$rb_minus","lhs","rhs","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$hash2","hash2","$truthy","truthy","$base","$parent_nesting","concat","$super","$Table_from_i18n$1","$Table_initialize$2","$Table_roll$3","$Table_choice$4","$$prototype","times","sides","name","items","defs","$$from_i18n","key","locale","table","$t","$new","$$arity","def","$$initialize","type","m","$freeze","$match","$raise","$to_i","$$roll","bcdice","value","$roll_sum","$choice","$$choice","index","$rb_times","$rb_plus","$send","send","$RangeTable$1","$RangeTable_initialize$3","$RangeTable_fetch$4","$RangeTable_roll$6","$RangeTable_store$7","$RangeTable_coerce_to_int_range$11","$RangeTable_assert_min_sum_is_covered$12","$RangeTable_assert_max_sum_is_covered$13","$RangeTable_assert_no_gap_or_overlap_in_ranges$14","num_of_dice","num_of_sides","formatter","const_set","$$s","$alias_method","$$2","result","$name","$sum","$content","$attr_reader","dice_roll_method","$iter","$$p","$ret_or_1","$store","$$fetch","$$5","item","i","$range","randomizer","values","sum","$writer","$roll_barabara","$fetch","to_a","$private","$$store","$$8","$$9","$$10","items_with_range","sorted_items","r","c","$coerce_to_int_range","_","$min","$assert_min_sum_is_covered","$assert_max_sum_is_covered","$assert_no_gap_or_overlap_in_ranges","range","content","$$coerce_to_int_range","x","$case","$ret_or_2","$begin","$end","$class","$$assert_min_sum_is_covered","min_sum","$first","$$assert_max_sum_is_covered","max_sum","$last","$$assert_no_gap_or_overlap_in_ranges","$$15","i1","i2","r1","r2","max1","next_of_max1","$max","$eval$1","expr","$kwargs","round_type","$$is_hash","ArgumentError","$$smap","$eval","get_singleton_class","$rb_le","$rb_gt","$require","$AnimaAnimus_eval_game_system_specific_command$1","$AnimaAnimus_check_action$2","$$eval_game_system_specific_command","command","$check_action","$last_match","$roll_tables","$$check_action","match_data","$$3","dice_cnt","target","dice_arr","dice_str","suc_cnt","has_critical","$debug","$join","$register_prefix","$keys"],"mappings":"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","file":"default~AnimaAnimus~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/dice_table/table\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'DiceTable');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Table');\n\n        var $nesting = [self].concat($parent_nesting), $Table_from_i18n$1, $Table_initialize$2, $Table_roll$3, $Table_choice$4;\n\n        self.$$prototype.times = self.$$prototype.sides = self.$$prototype.name = self.$$prototype.items = nil;\n        \n        Opal.defs(self, '$from_i18n', $Table_from_i18n$1 = function $$from_i18n(key, locale) {\n          var self = this, table = nil;\n\n          \n          table = $$($nesting, 'I18n').$t(key, $hash2([\"locale\"], {\"locale\": locale}));\n          return self.$new(table['$[]'](\"name\"), table['$[]'](\"type\"), table['$[]'](\"items\"));\n        }, $Table_from_i18n$1.$$arity = 2);\n        \n        Opal.def(self, '$initialize', $Table_initialize$2 = function $$initialize(name, type, items) {\n          var self = this, m = nil;\n\n          \n          self.name = name;\n          self.items = items.$freeze();\n          m = /(\\d+)D(\\d+)/i.$match(type);\n          if ($truthy(m)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"Unexpected table type: \" + (type))\n          };\n          self.times = m['$[]'](1).$to_i();\n          return (self.sides = m['$[]'](2).$to_i());\n        }, $Table_initialize$2.$$arity = 3);\n        \n        Opal.def(self, '$roll', $Table_roll$3 = function $$roll(bcdice) {\n          var self = this, value = nil;\n\n          \n          value = bcdice.$roll_sum(self.times, self.sides);\n          return self.$choice(value);\n        }, $Table_roll$3.$$arity = 1);\n        return (Opal.def(self, '$choice', $Table_choice$4 = function $$choice(value) {\n          var self = this, index = nil;\n\n          \n          index = $rb_minus(value, self.times);\n          return $$($nesting, 'RollResult').$new(self.name, value, self.items['$[]'](index));\n        }, $Table_choice$4.$$arity = 1), nil) && 'choice';\n      })($nesting[0], null, $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/dice_table/range_table\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'DiceTable');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'RangeTable');\n\n        var $nesting = [self].concat($parent_nesting), $RangeTable$1, $RangeTable_initialize$3, $RangeTable_fetch$4, $RangeTable_roll$6, $RangeTable_store$7, $RangeTable_coerce_to_int_range$11, $RangeTable_assert_min_sum_is_covered$12, $RangeTable_assert_max_sum_is_covered$13, $RangeTable_assert_no_gap_or_overlap_in_ranges$14;\n\n        self.$$prototype.name = self.$$prototype.items = self.$$prototype.num_of_dice = self.$$prototype.num_of_sides = self.$$prototype.formatter = nil;\n        \n        Opal.const_set($nesting[0], 'RollResult', $send($$($nesting, 'Struct'), 'new', [\"sum\", \"values\", \"content\", \"formatted\"], ($RangeTable$1 = function(){var self = $RangeTable$1.$$s == null ? this : $RangeTable$1.$$s;\n\n        return self.$alias_method(\"to_s\", \"formatted\")}, $RangeTable$1.$$s = self, $RangeTable$1.$$arity = 0, $RangeTable$1)));\n        Opal.const_set($nesting[0], 'Item', $$($nesting, 'Struct').$new(\"range\", \"content\"));\n        Opal.const_set($nesting[0], 'DICE_ROLL_METHOD_RE', /^(\\d+)D(\\d+)$/i.$freeze());\n        Opal.const_set($nesting[0], 'DEFAULT_FORMATTER', $send(self, 'lambda', [], ($$2 = function(table, result){var self = $$2.$$s == null ? this : $$2.$$s;\n\n        \n          \n          if (table == null) {\n            table = nil;\n          };\n          \n          if (result == null) {\n            result = nil;\n          };\n          return \"\" + (table.$name()) + \"(\" + (result.$sum()) + \") ＞ \" + (result.$content());}, $$2.$$s = self, $$2.$$arity = 2, $$2)));\n        self.$attr_reader(\"name\");\n        self.$attr_reader(\"num_of_dice\");\n        self.$attr_reader(\"num_of_sides\");\n        \n        Opal.def(self, '$initialize', $RangeTable_initialize$3 = function $$initialize(name, dice_roll_method, items) {\n          var $iter = $RangeTable_initialize$3.$$p, formatter = $iter || nil, self = this, $ret_or_1 = nil, m = nil;\n\n          if ($iter) $RangeTable_initialize$3.$$p = null;\n          \n          \n          if ($iter) $RangeTable_initialize$3.$$p = null;;\n          self.name = name.$freeze();\n          self.formatter = (function() {if ($truthy(($ret_or_1 = formatter))) {\n            return $ret_or_1\n          } else {\n            return $$($nesting, 'DEFAULT_FORMATTER')\n          }; return nil; })();\n          m = $$($nesting, 'DICE_ROLL_METHOD_RE').$match(dice_roll_method);\n          if ($truthy(m)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + (self.name) + \": invalid dice roll method: \" + (dice_roll_method))\n          };\n          self.num_of_dice = m['$[]'](1).$to_i();\n          self.num_of_sides = m['$[]'](2).$to_i();\n          return self.$store(items);\n        }, $RangeTable_initialize$3.$$arity = 3);\n        \n        Opal.def(self, '$fetch', $RangeTable_fetch$4 = function $$fetch(value) {\n          var $$5, self = this, item = nil;\n\n          \n          item = $send(self.items, 'find', [], ($$5 = function(i){var self = $$5.$$s == null ? this : $$5.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return i.$range()['$include?'](value);}, $$5.$$s = self, $$5.$$arity = 1, $$5));\n          if ($truthy(item)) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": value is out of range: \" + (value))\n          };\n          return item;\n        }, $RangeTable_fetch$4.$$arity = 1);\n        \n        Opal.def(self, '$roll', $RangeTable_roll$6 = function $$roll(randomizer) {\n          var self = this, values = nil, sum = nil, result = nil, $writer = nil;\n\n          \n          values = randomizer.$roll_barabara(self.num_of_dice, self.num_of_sides);\n          sum = values.$sum();\n          result = $$($nesting, 'RollResult').$new(sum, values, self.$fetch(sum).$content());\n          \n          $writer = [self.formatter['$[]'](self, result)];\n          $send(result, 'formatted=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return result;\n        }, $RangeTable_roll$6.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$store', $RangeTable_store$7 = function $$store(items) {\n          var $$8, $$9, $$10, self = this, items_with_range = nil, sorted_items = nil;\n\n          \n          items_with_range = $send(items, 'map', [], ($$8 = function(r, c){var self = $$8.$$s == null ? this : $$8.$$s;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            if (c == null) {\n              c = nil;\n            };\n            return [self.$coerce_to_int_range(r), c];}, $$8.$$s = self, $$8.$$arity = 2, $$8));\n          sorted_items = $send(items_with_range, 'sort_by', [], ($$9 = function(r, _){var self = $$9.$$s == null ? this : $$9.$$s;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            if (_ == null) {\n              _ = nil;\n            };\n            return r.$min();}, $$9.$$s = self, $$9.$$arity = 2, $$9));\n          self.$assert_min_sum_is_covered(sorted_items);\n          self.$assert_max_sum_is_covered(sorted_items);\n          self.$assert_no_gap_or_overlap_in_ranges(sorted_items);\n          self.items = $send(sorted_items, 'map', [], ($$10 = function(range, content){var self = $$10.$$s == null ? this : $$10.$$s;\n\n          \n            \n            if (range == null) {\n              range = nil;\n            };\n            \n            if (content == null) {\n              content = nil;\n            };\n            return $$($nesting, 'Item').$new(range, content.$freeze()).$freeze();}, $$10.$$s = self, $$10.$$arity = 2, $$10)).$freeze();\n          return self;\n        }, $RangeTable_store$7.$$arity = 1);\n        \n        Opal.def(self, '$coerce_to_int_range', $RangeTable_coerce_to_int_range$11 = function $$coerce_to_int_range(x) {\n          var self = this, $case = nil, $ret_or_2 = nil;\n\n          \n          $case = x;\n          if ($$($nesting, 'Integer')['$===']($case)) {return $$($nesting, 'Range').$new(x, x)}\n          else if ($$($nesting, 'Range')['$===']($case)) {if ($truthy((function() {if ($truthy(($ret_or_2 = x.$begin()['$is_a?']($$($nesting, 'Integer'))))) {\n            return x.$end()['$is_a?']($$($nesting, 'Integer'))\n          } else {\n            return $ret_or_2\n          }; return nil; })())) {\n            return x}};\n          return self.$raise($$($nesting, 'TypeError'), \"\" + (self.name) + \": \" + (x) + \" (\" + (x.$class()) + \") must be an Integer or a Range with Integers \");\n        }, $RangeTable_coerce_to_int_range$11.$$arity = 1);\n        \n        Opal.def(self, '$assert_min_sum_is_covered', $RangeTable_assert_min_sum_is_covered$12 = function $$assert_min_sum_is_covered(sorted_items) {\n          var self = this, min_sum = nil, range = nil;\n\n          \n          min_sum = self.num_of_dice;\n          range = sorted_items.$first()['$[]'](0);\n          if ($truthy(range['$include?'](min_sum))) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": min value (\" + (min_sum) + \") is not covered: \" + (range))\n          };\n          return self;\n        }, $RangeTable_assert_min_sum_is_covered$12.$$arity = 1);\n        \n        Opal.def(self, '$assert_max_sum_is_covered', $RangeTable_assert_max_sum_is_covered$13 = function $$assert_max_sum_is_covered(sorted_items) {\n          var self = this, max_sum = nil, range = nil;\n\n          \n          max_sum = $rb_times(self.num_of_dice, self.num_of_sides);\n          range = sorted_items.$last()['$[]'](0);\n          if ($truthy(range['$include?'](max_sum))) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": max value (\" + (max_sum) + \") is not covered: \" + (range))\n          };\n          return self;\n        }, $RangeTable_assert_max_sum_is_covered$13.$$arity = 1);\n        return (Opal.def(self, '$assert_no_gap_or_overlap_in_ranges', $RangeTable_assert_no_gap_or_overlap_in_ranges$14 = function $$assert_no_gap_or_overlap_in_ranges(sorted_items) {\n          var $$15, self = this;\n\n          \n          $send(sorted_items, 'each_cons', [2], ($$15 = function(i1, i2){var self = $$15.$$s == null ? this : $$15.$$s, r1 = nil, r2 = nil, max1 = nil, next_of_max1 = nil;\n            if (self.name == null) self.name = nil;\n\n          \n            \n            if (i1 == null) {\n              i1 = nil;\n            };\n            \n            if (i2 == null) {\n              i2 = nil;\n            };\n            r1 = i1['$[]'](0);\n            r2 = i2['$[]'](0);\n            max1 = r1.$max();\n            next_of_max1 = $rb_plus(max1, 1);\n            if ($truthy(r2['$include?'](max1))) {\n              self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": Range overlap: \" + (r1) + \" and \" + (r2))};\n            if ($truthy(r2['$include?'](next_of_max1))) {\n              return nil\n            } else {\n              return self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": Range gap: \" + (r1) + \" and \" + (r2))\n            };}, $$15.$$s = self, $$15.$$arity = 2, $$15));\n          return self;\n        }, $RangeTable_assert_no_gap_or_overlap_in_ranges$14.$$arity = 1), nil) && 'assert_no_gap_or_overlap_in_ranges';\n      })($nesting[0], null, $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/arithmetic_evaluator\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'ArithmeticEvaluator');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $eval$1;\n\n        return (Opal.def(self, '$eval', $eval$1 = function(expr, $kwargs) {\n          var round_type, self = this, $ret_or_1 = nil;\n\n          \n          \n          if ($kwargs == null) {\n            $kwargs = $hash2([], {});\n          } else if (!$kwargs.$$is_hash) {\n            throw Opal.ArgumentError.$new('expected kwargs');\n          };\n          \n          round_type = $kwargs.$$smap[\"round_type\"];\n          if (round_type == null) {\n            round_type = $$$($$($nesting, 'RoundType'), 'FLOOR')\n          };\n          if ($truthy(expr)) {\n          } else {\n            return 0\n          };\n          if ($truthy(($ret_or_1 = $$($nesting, 'Arithmetic').$eval(expr, round_type)))) {\n            return $ret_or_1\n          } else {\n            return 0\n          };\n        }, $eval$1.$$arity = -2), nil) && 'eval'\n      })(Opal.get_singleton_class(self), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2, $range = Opal.range;\n\n  \n  self.$require(\"bcdice/dice_table/table\");\n  self.$require(\"bcdice/dice_table/range_table\");\n  self.$require(\"bcdice/arithmetic_evaluator\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'AnimaAnimus');\n\n        var $nesting = [self].concat($parent_nesting), $AnimaAnimus_eval_game_system_specific_command$1, $AnimaAnimus_check_action$2;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"AnimaAnimus\");\n        Opal.const_set($nesting[0], 'NAME', \"アニマアニムス\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"あにまあにむす\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・行為判定(xAN<=y±z)\\n\" + \"　十面ダイスをx個振って判定します。達成値が算出されます(クリティカル発生時は2増加)。\\n\" + \"　x：振るダイスの数。魂魄値や攻撃値。\\n\" + \"　y：成功値。\\n\" + \"　z：成功値への補正。省略可能。\\n\" + \"　(例) 2AN<=3+1 5AN<=7\\n\" + \"・各種表\\n\" + \"　情報収集表　IGT/喪失表　LT\\n\");\n        \n        Opal.def(self, '$eval_game_system_specific_command', $AnimaAnimus_eval_game_system_specific_command$1 = function $$eval_game_system_specific_command(command) {\n          var self = this, $case = nil;\n\n          return (function() {$case = command;\n          if (/(\\d+)AN<=(\\d+([+\\-]\\d+)*)/i['$===']($case)) {return self.$check_action($$($nesting, 'Regexp').$last_match())}\n          else {return self.$roll_tables(command, $$($nesting, 'TABLES'))}})()\n        }, $AnimaAnimus_eval_game_system_specific_command$1.$$arity = 1);\n        \n        Opal.def(self, '$check_action', $AnimaAnimus_check_action$2 = function $$check_action(match_data) {\n          var $$3, self = this, dice_cnt = nil, target = nil, dice_arr = nil, dice_str = nil, suc_cnt = nil, has_critical = nil, result = nil;\n\n          \n          dice_cnt = $$($nesting, 'ArithmeticEvaluator').$eval(match_data['$[]'](1));\n          target = $$($nesting, 'ArithmeticEvaluator').$eval(match_data['$[]'](2));\n          self.$debug(\"dice_cnt\", dice_cnt);\n          self.$debug(\"target\", target);\n          dice_arr = self.randomizer.$roll_barabara(dice_cnt, 10);\n          dice_str = dice_arr.$join(\",\");\n          suc_cnt = $send(dice_arr, 'count', [], ($$3 = function(x){var self = $$3.$$s == null ? this : $$3.$$s;\n\n          \n            \n            if (x == null) {\n              x = nil;\n            };\n            return $rb_le(x, target);}, $$3.$$s = self, $$3.$$arity = 1, $$3));\n          has_critical = dice_arr['$include?'](1);\n          result = (function() {if ($truthy(has_critical)) {\n            return $rb_plus(suc_cnt, 2)\n          } else {\n            return suc_cnt\n          }; return nil; })();\n          return \"\" + \"(\" + (dice_cnt) + \"B10<=\" + (target) + \") ＞ \" + (dice_str) + \" ＞ \" + ((function() {if ($truthy($rb_gt(result, 0))) {\n            return \"成功\"\n          } else {\n            return \"失敗\"\n          }; return nil; })()) + \"(達成値:\" + (result) + \")\" + ((function() {if ($truthy(has_critical)) {\n            return \" (クリティカル発生)\"\n          } else {\n            return \"\"\n          }; return nil; })());\n        }, $AnimaAnimus_check_action$2.$$arity = 1);\n        Opal.const_set($nesting[0], 'TABLES', $hash2([\"IGT\", \"LT\"], {\"IGT\": $$$($$($nesting, 'DiceTable'), 'Table').$new(\"情報収集表\", \"1d10\", [\"ストリートファイト/<格闘>/「俺に勝てたら教えてやるよ」情報を知る魂願者から勝負を挑まれた。生き延びるためにもこの勝負、負けるわけにはいかない。\", \"追跡！/<追跡／逃走>/有益な情報を持っている人間を見つけたが、こちらの顔を見るなり逃げ出した。どうにかして捕まえなくてはならない。\", \"脅し/<威圧>/ならず者たちが集まるバーにやってきた。裏社会に生きる彼らを脅せば有益な情報が手に入るはずだ。\", \"インターネット/<コンピュータ>/SNSやニュースなど、インターネット上の情報を調査する。デマには騙されないようにしなくては。\", \"瀕死の情報提供者/<医学>/情報を知る人物がいると聞いてやってきたら、その人物が瀕死の重傷を負っていた。なんとかして蘇生させなくては。\", \"潜入捜査/<隠密>/敵対する魂願者たちのグループに潜り込んでの調査活動。リスクは高いが、有益な情報が手に入る確率は高い。\", \"情報交換/<交渉>/友好的な関係にある魂願者との情報交換。うまく話を聞き出すことができるとよいが。\", \"魔宴の情報屋/<調達>/魔宴の情報屋に接触して情報を聞き出すことにした。一筋縄ではいかない相手らしいが、はたして……？\", \"違法調査/<犯罪>/法に触れるやり方で情報を集めることにした。ハッキング、窃盗、恐喝、どんな手段を選ぼうか。\", \"聞き込み/<自我>/街ゆく人びとに聞き込みを行なう。地道な活動こそが目標にたどり着くための最短の方法だ。\"]), \"LT\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"喪失表\", \"1d10\", [[$range(1, 2, false), \"存在/存在が希薄になり、知り合いや友人に自分の存在を忘れられてしまう。いずれ大切なパートナーの記憶からも消え、この世界でひとりぼっちになる。\\nあなたの出自を消去すること。\"], [$range(3, 4, false), \"記憶/自分の大切な記憶をひとつ失なう。これからは力を使うたびに記憶をひとつ失なうことになり、最後には大切なパートナーのことも思い出せなくなってしまう。\\nあなたのメモリアをひとつ選択して消去すること。シナリオメモリアは選択できない。\"], [$range(5, 6, false), \"容姿/だんだんと以前とはかけ離れた姿に変わっていく。いずれ誰も自分のことを自分だと気づかなくなるのだろう。\\nあなたの特徴的な外見を失なう。内容をふさわしいものに書き換えること(特徴的な外見が美しい髪であれば醜い髪など)。\"], [$range(7, 8, false), \"感情/喜怒哀楽の感情のうち、いずれかひとつを失なう。力を使うたびに他の感情も失っていき、最後にはただ生き残るために戦う機械となる。\\nポジティブかネガティブのどちらかを選択する。選択した感情をすべてのメモリアから消去する。消去した結果、表出感情がなくなってしまった場合、残った感情を表出感情にすること。なお、新しくメモリアを取得した場合も、選んだ感情を得ることはできない。\"], [$range(9, 10, false), \"五感/少しずつ五感が鈍くなる。今までできていたはずのことができなくなってしまう。\\nあなたの特技をひとつ選択する。選択した特技に×をつけること。×が付いた技能で判定を行なうことはできず、判定を求められた場合は自動的に失敗となる。\"]])}).$freeze());\n        return self.$register_prefix(\"\\\\d+AN<=\", $$($nesting, 'TABLES').$keys());\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n})(Opal);\n"],"sourceRoot":"webpack:///"}