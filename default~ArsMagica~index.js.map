{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/ArsMagica.js"],"names":["require","Opal","modules","self","top","$nesting","nil","$$$","$$","$module","module","$base","$parent_nesting","concat","$Normalize_comparison_operator$1","$Normalize_target_number$2","$module_function","def","$$comparison_operator","op","$case","$$arity","$$target_number","val","$to_i","$rb_gt","lhs","rhs","$truthy","truthy","$Format_comparison_operator$1","$Format_modifier$2","$to_s","$$modifier","number","$rb_minus","$rb_plus","$rb_lt","$rb_times","$rb_ge","$klass","klass","$send","send","$require","$super","$ArsMagica_eval_game_system_specific_command$1","$ArsMagica_parse_ars$3","$ArsMagica_parse_1r10$4","$ArsMagica_expr$5","$$prototype","target_numner","botch","modify_number","cmp_op","randomizer","const_set","$register_prefix","$$eval_game_system_specific_command","string","$$2","$a","$ret_or_1","diff","$ret_or_2","bonus","crit_mul","total","die","output","count0","dice_n","crit_dice","$parse_ars","$parse_1r10","$roll_once","$expr","_i","$$s","botch_die","$push","$join","$sub","$private","$$parse_ars","command","$b","m","$ret_or_3","$ret_or_4","$match","$eval","$comparison_operator","$$parse_1r10","$ret_or_5","$ret_or_6","$$expr","modifier","$modifier"],"mappings":"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","file":"default~ArsMagica~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/normalize\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Normalize');\n\n      var $nesting = [self].concat($parent_nesting), $Normalize_comparison_operator$1, $Normalize_target_number$2;\n\n      \n      self.$module_function();\n      \n      Opal.def(self, '$comparison_operator', $Normalize_comparison_operator$1 = function $$comparison_operator(op) {\n        var self = this, $case = nil;\n\n        return (function() {$case = op;\n        if (/<=|=</['$===']($case)) {return \"<=\"}\n        else if (/>=|=>/['$===']($case)) {return \">=\"}\n        else if (/<>|!=|=!/['$===']($case)) {return \"!=\"}\n        else if (/</['$===']($case)) {return \"<\"}\n        else if (/>/['$===']($case)) {return \">\"}\n        else if (/=/['$===']($case)) {return \"==\"}\n        else { return nil }})()\n      }, $Normalize_comparison_operator$1.$$arity = 1);\n      \n      Opal.def(self, '$target_number', $Normalize_target_number$2 = function $$target_number(val) {\n        var self = this;\n\n        if (val['$=='](\"?\")) {\n          return val\n        } else {\n          return val.$to_i()\n        }\n      }, $Normalize_target_number$2.$$arity = 1);\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/format\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Format');\n\n      var $nesting = [self].concat($parent_nesting), $Format_comparison_operator$1, $Format_modifier$2;\n\n      \n      self.$module_function();\n      \n      Opal.def(self, '$comparison_operator', $Format_comparison_operator$1 = function $$comparison_operator(op) {\n        var self = this, $case = nil;\n\n        return (function() {$case = op;\n        if (\"==\"['$===']($case)) {return \"=\"}\n        else if (\"!=\"['$===']($case)) {return \"<>\"}\n        else if ($$($nesting, 'Symbol')['$===']($case)) {return op.$to_s()}\n        else { return nil }})()\n      }, $Format_comparison_operator$1.$$arity = 1);\n      \n      Opal.def(self, '$modifier', $Format_modifier$2 = function $$modifier(number) {\n        var self = this;\n\n        if ($truthy(number['$nil?']())) {\n          return nil\n        } else if (number['$=='](0)) {\n          return \"\"\n        } else if ($truthy($rb_gt(number, 0))) {\n          return \"\" + \"+\" + (number)\n        } else {\n          return number.$to_s()\n        }\n      }, $Format_modifier$2.$$arity = 1);\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send;\n\n  \n  self.$require(\"bcdice/normalize\");\n  self.$require(\"bcdice/format\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'ArsMagica');\n\n        var $nesting = [self].concat($parent_nesting), $ArsMagica_eval_game_system_specific_command$1, $ArsMagica_parse_ars$3, $ArsMagica_parse_1r10$4, $ArsMagica_expr$5;\n\n        self.$$prototype.target_numner = self.$$prototype.botch = self.$$prototype.modify_number = self.$$prototype.cmp_op = self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"ArsMagica\");\n        Opal.const_set($nesting[0], 'NAME', \"アルスマギカ\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"あるすまきか\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・ストレスダイス　(ArSx+y)\\n\" + \"　\\\"ArS(ボッチダイス)+(修正)\\\"です。判定にも使えます。Rコマンド(1R10+y[m])に読替をします。\\n\" + \"　ボッチダイスと修正は省略可能です。(ボッチダイスを省略すると1として扱います)\\n\" + \"　botchダイスの0の数が2以上の時は、数えて表示します。\\n\" + \"　（注意！） botchの判断が発生したときには、そのダイスを含めてロールした全てのダイスを[]の中に並べて表示します。\\n\" + \"　例) (1R10[5]) ＞ 0[0,1,8,0,8,1] ＞ Botch!\\n\" + \"　　最初の0が判断基準で、その右側5つがボッチダイスです。1*2,8*2,0*1なので1botchという訳です。\\n\");\n        self.$register_prefix(\"ArS\", \"1R10\");\n        \n        Opal.def(self, '$eval_game_system_specific_command', $ArsMagica_eval_game_system_specific_command$1 = function $$eval_game_system_specific_command(string) {\n          var $$2, $a, self = this, $ret_or_1 = nil, diff = nil, $ret_or_2 = nil, botch = nil, bonus = nil, crit_mul = nil, total = nil, cmp_op = nil, die = nil, output = nil, count0 = nil, dice_n = nil, crit_dice = nil;\n\n          \n          if ($truthy((function() {if ($truthy(($ret_or_1 = self.$parse_ars(string)))) {\n            return $ret_or_1\n          } else {\n            return self.$parse_1r10(string)\n          }; return nil; })())) {\n          } else {\n            return nil\n          };\n          diff = (function() {if ($truthy(($ret_or_2 = self.target_numner))) {\n            return $ret_or_2\n          } else {\n            return 0\n          }; return nil; })();\n          botch = self.botch;\n          bonus = self.modify_number;\n          crit_mul = 1;\n          total = 0;\n          cmp_op = self.cmp_op;\n          die = $rb_minus(self.randomizer.$roll_once(10), 1);\n          output = \"\" + \"(\" + (self.$expr()) + \") ＞ \";\n          if (die['$=='](0)) {\n            \n            count0 = 0;\n            dice_n = [];\n            $send(botch, 'times', [], ($$2 = function(_i){var self = $$2.$$s == null ? this : $$2.$$s, botch_die = nil;\n              if (self.randomizer == null) self.randomizer = nil;\n\n            \n              \n              if (_i == null) {\n                _i = nil;\n              };\n              botch_die = $rb_minus(self.randomizer.$roll_once(10), 1);\n              if (botch_die['$=='](0)) {\n                count0 = $rb_plus(count0, 1)};\n              return dice_n.$push(botch_die);}, $$2.$$s = self, $$2.$$arity = 1, $$2));\n            output = $rb_plus(output, \"\" + \"0[\" + (die) + \",\" + (dice_n.$join(\",\")) + \"]\");\n            if ($truthy(count0['$!='](0))) {\n              \n              if ($truthy($rb_gt(count0, 1))) {\n                output = $rb_plus(output, \"\" + \" ＞ \" + (count0) + \"Botch!\")\n              } else {\n                output = $rb_plus(output, \" ＞ Botch!\")\n              };\n              cmp_op = nil;\n            } else {\n              \n              if ($truthy($rb_gt(bonus, 0))) {\n                output = $rb_plus(output, \"\" + \"+\" + (bonus) + \" ＞ \" + (bonus))\n              } else if ($truthy($rb_lt(bonus, 0))) {\n                output = $rb_plus(output, \"\" + (bonus) + \" ＞ \" + (bonus))\n              } else {\n                output = $rb_plus(output, \" ＞ 0\")\n              };\n              total = bonus;\n            };\n          } else if (die['$=='](1)) {\n            \n            crit_dice = \"\";\n            while (die['$=='](1)) {\n              \n              crit_mul = $rb_times(crit_mul, 2);\n              die = self.randomizer.$roll_once(10);\n              crit_dice = $rb_plus(crit_dice, \"\" + (die) + \",\");\n            };\n            total = $rb_times(die, crit_mul);\n            crit_dice = crit_dice.$sub(/,$/, \"\");\n            output = $rb_plus(output, total.$to_s());\n            output = $rb_plus(output, \"\" + \"[1,\" + (crit_dice) + \"]\");\n            total = $rb_plus(total, bonus);\n            if ($truthy($rb_gt(bonus, 0))) {\n              output = $rb_plus(output, \"\" + \"+\" + (bonus) + \" ＞ \" + (total))\n            } else if ($truthy($rb_lt(bonus, 0))) {\n              output = $rb_plus(output, \"\" + (bonus) + \" ＞ \" + (total))};\n          } else {\n            \n            total = $rb_plus(die, bonus);\n            if ($truthy($rb_gt(bonus, 0))) {\n              output = $rb_plus(output, \"\" + (die) + \"+\" + (bonus) + \" ＞ \" + (total))\n            } else if ($truthy($rb_lt(bonus, 0))) {\n              output = $rb_plus(output, \"\" + (die) + (bonus) + \" ＞ \" + (total))\n            } else {\n              output = $rb_plus(output, total.$to_s())\n            };\n          };\n          if (cmp_op['$=='](\">=\")) {\n            output = $rb_plus(output, (function() {if ($truthy($rb_ge(total, diff))) {\n              return \" ＞ 成功\"\n            } else {\n              return \" ＞ 失敗\"\n            }; return nil; })())};\n          return output.$to_s();\n        }, $ArsMagica_eval_game_system_specific_command$1.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$parse_ars', $ArsMagica_parse_ars$3 = function $$parse_ars(command) {\n          var $a, $b, self = this, m = nil, $ret_or_3 = nil, $ret_or_4 = nil;\n\n          \n          m = /^ArS(\\d+)?((?:[+-]-?\\d+)+)?(?:([>=]+)(\\d+))?$/i.$match(command);\n          if ($truthy(m)) {\n          } else {\n            return false\n          };\n          self.botch = (function() {if ($truthy(($ret_or_3 = ($a = m['$[]'](1), ($a === nil || $a == null) ? nil : $send($a, 'to_i', []))))) {\n            return $ret_or_3\n          } else {\n            return 1\n          }; return nil; })();\n          self.modify_number = $$($nesting, 'ArithmeticEvaluator').$eval((function() {if ($truthy(($ret_or_4 = m['$[]'](2)))) {\n            return $ret_or_4\n          } else {\n            return \"\"\n          }; return nil; })());\n          self.cmp_op = $$($nesting, 'Normalize').$comparison_operator(m['$[]'](3));\n          self.target_numner = ($b = m['$[]'](4), ($b === nil || $b == null) ? nil : $send($b, 'to_i', []));\n          return true;\n        }, $ArsMagica_parse_ars$3.$$arity = 1);\n        \n        Opal.def(self, '$parse_1r10', $ArsMagica_parse_1r10$4 = function $$parse_1r10(command) {\n          var $a, $b, self = this, m = nil, $ret_or_5 = nil, $ret_or_6 = nil;\n\n          \n          m = /^1R10((?:[+-]-?\\d+)+)?(?:\\[(\\d+)\\])?(?:([>=]+)(\\d+))?$/i.$match(command);\n          if ($truthy(m)) {\n          } else {\n            return false\n          };\n          self.modify_number = $$($nesting, 'ArithmeticEvaluator').$eval((function() {if ($truthy(($ret_or_5 = m['$[]'](1)))) {\n            return $ret_or_5\n          } else {\n            return \"\"\n          }; return nil; })());\n          self.botch = (function() {if ($truthy(($ret_or_6 = ($a = m['$[]'](2), ($a === nil || $a == null) ? nil : $send($a, 'to_i', []))))) {\n            return $ret_or_6\n          } else {\n            return 1\n          }; return nil; })();\n          self.cmp_op = $$($nesting, 'Normalize').$comparison_operator(m['$[]'](3));\n          self.target_numner = ($b = m['$[]'](4), ($b === nil || $b == null) ? nil : $send($b, 'to_i', []));\n          return true;\n        }, $ArsMagica_parse_1r10$4.$$arity = 1);\n        return (Opal.def(self, '$expr', $ArsMagica_expr$5 = function $$expr() {\n          var self = this, modifier = nil;\n\n          \n          modifier = $$($nesting, 'Format').$modifier(self.modify_number);\n          return \"\" + \"1R10\" + (modifier) + \"[\" + (self.botch) + \"]\" + (self.cmp_op) + (self.target_numner);\n        }, $ArsMagica_expr$5.$$arity = 0), nil) && 'expr';\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n})(Opal);\n"],"sourceRoot":"webpack:///"}