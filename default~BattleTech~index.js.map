{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/BattleTech.js"],"names":["require","Opal","modules","$rb_minus","lhs","rhs","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$hash2","hash2","$truthy","truthy","$base","$parent_nesting","concat","$super","$Table_from_i18n$1","$Table_initialize$2","$Table_roll$3","$Table_choice$4","$$prototype","times","sides","name","items","defs","$$from_i18n","key","locale","table","$t","$new","$$arity","def","$$initialize","type","m","$freeze","$match","$raise","$to_i","$$roll","bcdice","value","$roll_sum","$choice","$$choice","index","$rb_times","$rb_plus","$send","send","$RangeTable$1","$RangeTable_initialize$3","$RangeTable_fetch$4","$RangeTable_roll$6","$RangeTable_store$7","$RangeTable_coerce_to_int_range$11","$RangeTable_assert_min_sum_is_covered$12","$RangeTable_assert_max_sum_is_covered$13","$RangeTable_assert_no_gap_or_overlap_in_ranges$14","num_of_dice","num_of_sides","formatter","const_set","$$s","$alias_method","$$2","result","$name","$sum","$content","$attr_reader","dice_roll_method","$iter","$$p","$ret_or_1","$store","$$fetch","$$5","item","i","$range","randomizer","values","sum","$writer","$roll_barabara","$fetch","to_a","$private","$$store","$$8","$$9","$$10","items_with_range","sorted_items","r","c","$coerce_to_int_range","_","$min","$assert_min_sum_is_covered","$assert_max_sum_is_covered","$assert_no_gap_or_overlap_in_ranges","range","content","$$coerce_to_int_range","x","$case","$ret_or_2","$begin","$end","$class","$$assert_min_sum_is_covered","min_sum","$first","$$assert_max_sum_is_covered","max_sum","$last","$$assert_no_gap_or_overlap_in_ranges","$$15","i1","i2","r1","r2","max1","next_of_max1","$max","$rb_gt","$rb_ge","$rb_divide","$require","$BattleTech_eval_game_system_specific_command$1","$BattleTech_getXrmDamage$4","$BattleTech_getHitResult$5","$BattleTech_getBaseValue$7","$BattleTech_getHitText$8","$BattleTech_getDamages$9","$BattleTech_getDamageInfo$11","$BattleTech_getTotalDamage$12","$BattleTech_getHitResultOne$15","$BattleTech_getCheckDieResult$16","$register_prefix","$$eval_game_system_specific_command","command","count","damage","tail","damageFunc","damageValue","$roll_tables","$gsub","$last_match","$debug","$getCheckDieResult","$getXrmDamage","$getHitResult","$$3","$err","rescue","pop_exception","$$getXrmDamage","roll_result","lrm","modified_damage","$roll","$$getHitResult","$$6","side","baseString","target","base","partTable","resultTexts","damages","hitCount","totalResultText","$getBaseValue","$a","$b","isHit","hitResult","damageText","$getHitText","to_ary","$getDamages","$push","$join","$getTotalDamage","$$getBaseValue","$eval","$$getHitText","dice1","dice2","total","$roll_once","$$getDamages","resultText","dice","isLrm","damagePartCount","$call","$ceil","damageIndex","$c","$d","currentDamage","text","part","criticalText","$getDamageInfo","$getHitResultOne","$$getDamageInfo","$to_s","$$getTotalDamage","$$13","parts","allDamage","damageTexts","$$14","damageInfo","damageCount","criticals","$delete","$size","$inspect","$$getHitResultOne","damage_text","hit_part_table","hit_part_roll_result","hit_part","critical_hit_may_occur_str","result_parts","ct_roll_result","$critical_hit_may_occur","$$getCheckDieResult","$get_table_by_number","Range"],"mappings":"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","file":"default~BattleTech~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/dice_table/table\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'DiceTable');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Table');\n\n        var $nesting = [self].concat($parent_nesting), $Table_from_i18n$1, $Table_initialize$2, $Table_roll$3, $Table_choice$4;\n\n        self.$$prototype.times = self.$$prototype.sides = self.$$prototype.name = self.$$prototype.items = nil;\n        \n        Opal.defs(self, '$from_i18n', $Table_from_i18n$1 = function $$from_i18n(key, locale) {\n          var self = this, table = nil;\n\n          \n          table = $$($nesting, 'I18n').$t(key, $hash2([\"locale\"], {\"locale\": locale}));\n          return self.$new(table['$[]'](\"name\"), table['$[]'](\"type\"), table['$[]'](\"items\"));\n        }, $Table_from_i18n$1.$$arity = 2);\n        \n        Opal.def(self, '$initialize', $Table_initialize$2 = function $$initialize(name, type, items) {\n          var self = this, m = nil;\n\n          \n          self.name = name;\n          self.items = items.$freeze();\n          m = /(\\d+)D(\\d+)/i.$match(type);\n          if ($truthy(m)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"Unexpected table type: \" + (type))\n          };\n          self.times = m['$[]'](1).$to_i();\n          return (self.sides = m['$[]'](2).$to_i());\n        }, $Table_initialize$2.$$arity = 3);\n        \n        Opal.def(self, '$roll', $Table_roll$3 = function $$roll(bcdice) {\n          var self = this, value = nil;\n\n          \n          value = bcdice.$roll_sum(self.times, self.sides);\n          return self.$choice(value);\n        }, $Table_roll$3.$$arity = 1);\n        return (Opal.def(self, '$choice', $Table_choice$4 = function $$choice(value) {\n          var self = this, index = nil;\n\n          \n          index = $rb_minus(value, self.times);\n          return $$($nesting, 'RollResult').$new(self.name, value, self.items['$[]'](index));\n        }, $Table_choice$4.$$arity = 1), nil) && 'choice';\n      })($nesting[0], null, $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/dice_table/range_table\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'DiceTable');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'RangeTable');\n\n        var $nesting = [self].concat($parent_nesting), $RangeTable$1, $RangeTable_initialize$3, $RangeTable_fetch$4, $RangeTable_roll$6, $RangeTable_store$7, $RangeTable_coerce_to_int_range$11, $RangeTable_assert_min_sum_is_covered$12, $RangeTable_assert_max_sum_is_covered$13, $RangeTable_assert_no_gap_or_overlap_in_ranges$14;\n\n        self.$$prototype.name = self.$$prototype.items = self.$$prototype.num_of_dice = self.$$prototype.num_of_sides = self.$$prototype.formatter = nil;\n        \n        Opal.const_set($nesting[0], 'RollResult', $send($$($nesting, 'Struct'), 'new', [\"sum\", \"values\", \"content\", \"formatted\"], ($RangeTable$1 = function(){var self = $RangeTable$1.$$s == null ? this : $RangeTable$1.$$s;\n\n        return self.$alias_method(\"to_s\", \"formatted\")}, $RangeTable$1.$$s = self, $RangeTable$1.$$arity = 0, $RangeTable$1)));\n        Opal.const_set($nesting[0], 'Item', $$($nesting, 'Struct').$new(\"range\", \"content\"));\n        Opal.const_set($nesting[0], 'DICE_ROLL_METHOD_RE', /^(\\d+)D(\\d+)$/i.$freeze());\n        Opal.const_set($nesting[0], 'DEFAULT_FORMATTER', $send(self, 'lambda', [], ($$2 = function(table, result){var self = $$2.$$s == null ? this : $$2.$$s;\n\n        \n          \n          if (table == null) {\n            table = nil;\n          };\n          \n          if (result == null) {\n            result = nil;\n          };\n          return \"\" + (table.$name()) + \"(\" + (result.$sum()) + \") ＞ \" + (result.$content());}, $$2.$$s = self, $$2.$$arity = 2, $$2)));\n        self.$attr_reader(\"name\");\n        self.$attr_reader(\"num_of_dice\");\n        self.$attr_reader(\"num_of_sides\");\n        \n        Opal.def(self, '$initialize', $RangeTable_initialize$3 = function $$initialize(name, dice_roll_method, items) {\n          var $iter = $RangeTable_initialize$3.$$p, formatter = $iter || nil, self = this, $ret_or_1 = nil, m = nil;\n\n          if ($iter) $RangeTable_initialize$3.$$p = null;\n          \n          \n          if ($iter) $RangeTable_initialize$3.$$p = null;;\n          self.name = name.$freeze();\n          self.formatter = (function() {if ($truthy(($ret_or_1 = formatter))) {\n            return $ret_or_1\n          } else {\n            return $$($nesting, 'DEFAULT_FORMATTER')\n          }; return nil; })();\n          m = $$($nesting, 'DICE_ROLL_METHOD_RE').$match(dice_roll_method);\n          if ($truthy(m)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + (self.name) + \": invalid dice roll method: \" + (dice_roll_method))\n          };\n          self.num_of_dice = m['$[]'](1).$to_i();\n          self.num_of_sides = m['$[]'](2).$to_i();\n          return self.$store(items);\n        }, $RangeTable_initialize$3.$$arity = 3);\n        \n        Opal.def(self, '$fetch', $RangeTable_fetch$4 = function $$fetch(value) {\n          var $$5, self = this, item = nil;\n\n          \n          item = $send(self.items, 'find', [], ($$5 = function(i){var self = $$5.$$s == null ? this : $$5.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return i.$range()['$include?'](value);}, $$5.$$s = self, $$5.$$arity = 1, $$5));\n          if ($truthy(item)) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": value is out of range: \" + (value))\n          };\n          return item;\n        }, $RangeTable_fetch$4.$$arity = 1);\n        \n        Opal.def(self, '$roll', $RangeTable_roll$6 = function $$roll(randomizer) {\n          var self = this, values = nil, sum = nil, result = nil, $writer = nil;\n\n          \n          values = randomizer.$roll_barabara(self.num_of_dice, self.num_of_sides);\n          sum = values.$sum();\n          result = $$($nesting, 'RollResult').$new(sum, values, self.$fetch(sum).$content());\n          \n          $writer = [self.formatter['$[]'](self, result)];\n          $send(result, 'formatted=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return result;\n        }, $RangeTable_roll$6.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$store', $RangeTable_store$7 = function $$store(items) {\n          var $$8, $$9, $$10, self = this, items_with_range = nil, sorted_items = nil;\n\n          \n          items_with_range = $send(items, 'map', [], ($$8 = function(r, c){var self = $$8.$$s == null ? this : $$8.$$s;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            if (c == null) {\n              c = nil;\n            };\n            return [self.$coerce_to_int_range(r), c];}, $$8.$$s = self, $$8.$$arity = 2, $$8));\n          sorted_items = $send(items_with_range, 'sort_by', [], ($$9 = function(r, _){var self = $$9.$$s == null ? this : $$9.$$s;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            if (_ == null) {\n              _ = nil;\n            };\n            return r.$min();}, $$9.$$s = self, $$9.$$arity = 2, $$9));\n          self.$assert_min_sum_is_covered(sorted_items);\n          self.$assert_max_sum_is_covered(sorted_items);\n          self.$assert_no_gap_or_overlap_in_ranges(sorted_items);\n          self.items = $send(sorted_items, 'map', [], ($$10 = function(range, content){var self = $$10.$$s == null ? this : $$10.$$s;\n\n          \n            \n            if (range == null) {\n              range = nil;\n            };\n            \n            if (content == null) {\n              content = nil;\n            };\n            return $$($nesting, 'Item').$new(range, content.$freeze()).$freeze();}, $$10.$$s = self, $$10.$$arity = 2, $$10)).$freeze();\n          return self;\n        }, $RangeTable_store$7.$$arity = 1);\n        \n        Opal.def(self, '$coerce_to_int_range', $RangeTable_coerce_to_int_range$11 = function $$coerce_to_int_range(x) {\n          var self = this, $case = nil, $ret_or_2 = nil;\n\n          \n          $case = x;\n          if ($$($nesting, 'Integer')['$===']($case)) {return $$($nesting, 'Range').$new(x, x)}\n          else if ($$($nesting, 'Range')['$===']($case)) {if ($truthy((function() {if ($truthy(($ret_or_2 = x.$begin()['$is_a?']($$($nesting, 'Integer'))))) {\n            return x.$end()['$is_a?']($$($nesting, 'Integer'))\n          } else {\n            return $ret_or_2\n          }; return nil; })())) {\n            return x}};\n          return self.$raise($$($nesting, 'TypeError'), \"\" + (self.name) + \": \" + (x) + \" (\" + (x.$class()) + \") must be an Integer or a Range with Integers \");\n        }, $RangeTable_coerce_to_int_range$11.$$arity = 1);\n        \n        Opal.def(self, '$assert_min_sum_is_covered', $RangeTable_assert_min_sum_is_covered$12 = function $$assert_min_sum_is_covered(sorted_items) {\n          var self = this, min_sum = nil, range = nil;\n\n          \n          min_sum = self.num_of_dice;\n          range = sorted_items.$first()['$[]'](0);\n          if ($truthy(range['$include?'](min_sum))) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": min value (\" + (min_sum) + \") is not covered: \" + (range))\n          };\n          return self;\n        }, $RangeTable_assert_min_sum_is_covered$12.$$arity = 1);\n        \n        Opal.def(self, '$assert_max_sum_is_covered', $RangeTable_assert_max_sum_is_covered$13 = function $$assert_max_sum_is_covered(sorted_items) {\n          var self = this, max_sum = nil, range = nil;\n\n          \n          max_sum = $rb_times(self.num_of_dice, self.num_of_sides);\n          range = sorted_items.$last()['$[]'](0);\n          if ($truthy(range['$include?'](max_sum))) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": max value (\" + (max_sum) + \") is not covered: \" + (range))\n          };\n          return self;\n        }, $RangeTable_assert_max_sum_is_covered$13.$$arity = 1);\n        return (Opal.def(self, '$assert_no_gap_or_overlap_in_ranges', $RangeTable_assert_no_gap_or_overlap_in_ranges$14 = function $$assert_no_gap_or_overlap_in_ranges(sorted_items) {\n          var $$15, self = this;\n\n          \n          $send(sorted_items, 'each_cons', [2], ($$15 = function(i1, i2){var self = $$15.$$s == null ? this : $$15.$$s, r1 = nil, r2 = nil, max1 = nil, next_of_max1 = nil;\n            if (self.name == null) self.name = nil;\n\n          \n            \n            if (i1 == null) {\n              i1 = nil;\n            };\n            \n            if (i2 == null) {\n              i2 = nil;\n            };\n            r1 = i1['$[]'](0);\n            r2 = i2['$[]'](0);\n            max1 = r1.$max();\n            next_of_max1 = $rb_plus(max1, 1);\n            if ($truthy(r2['$include?'](max1))) {\n              self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": Range overlap: \" + (r1) + \" and \" + (r2))};\n            if ($truthy(r2['$include?'](next_of_max1))) {\n              return nil\n            } else {\n              return self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": Range gap: \" + (r1) + \" and \" + (r2))\n            };}, $$15.$$s = self, $$15.$$arity = 2, $$15));\n          return self;\n        }, $RangeTable_assert_no_gap_or_overlap_in_ranges$14.$$arity = 1), nil) && 'assert_no_gap_or_overlap_in_ranges';\n      })($nesting[0], null, $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send, $hash2 = Opal.hash2, $range = Opal.range;\n\n  \n  self.$require(\"bcdice/dice_table/table\");\n  self.$require(\"bcdice/dice_table/range_table\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'BattleTech');\n\n        var $nesting = [self].concat($parent_nesting), $BattleTech_eval_game_system_specific_command$1, $BattleTech_getXrmDamage$4, $BattleTech_getHitResult$5, $BattleTech_getBaseValue$7, $BattleTech_getHitText$8, $BattleTech_getDamages$9, $BattleTech_getDamageInfo$11, $BattleTech_getTotalDamage$12, $BattleTech_getHitResultOne$15, $BattleTech_getCheckDieResult$16;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"BattleTech\");\n        Opal.const_set($nesting[0], 'NAME', \"バトルテック\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"はとるてつく\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・判定方法\\n\" + \"　(回数)BT(ダメージ)(部位)+(基本値)>=(目標値)\\n\" + \"　回数は省略時 1固定。\\n\" + \"　部位はC（正面）R（右）、L（左）。省略時はC（正面）固定\\n\" + \"　U（上半身）、L（下半身）を組み合わせ CU/RU/LU/CL/RL/LLも指定可能\\n\" + \"　例）BT3+2>=4\\n\" + \"　　正面からダメージ3の攻撃を技能ベース2目標値4で1回判定\\n\" + \"　例）2BT3RL+5>=8\\n\" + \"　　右下半身にダメージ3の攻撃を技能ベース5目標値8で2回判定\\n\" + \"　ミサイルによるダメージは BT(ダメージ)の変わりに SRM2/4/6, LRM5/10/15/20を指定\\n\" + \"　例）3SRM6LU+5>=8\\n\" + \"　　左上半身にSRM6連を技能ベース5目標値8で3回判定\\n\" + \"・CT：致命的命中表\\n\" + \"・DW：転倒後の向き表\\n\" + \"・CDx：メック戦士意識維持表。ダメージ値xで判定　例）CD3\\n\");\n        self.$register_prefix(\"\\\\d*SRM\", \"\\\\d*LRM\", \"\\\\d*BT\", \"PPC\", \"CT\", \"DW\", \"CD\");\n        Opal.const_set($nesting[0], 'NO_CRITICAL_HIT_LIMIT', 7);\n        \n        Opal.def(self, '$eval_game_system_specific_command', $BattleTech_eval_game_system_specific_command$1 = function $$eval_game_system_specific_command(command) {\n          var self = this, result = nil, count = nil, $case = nil, damage = nil, tail = nil, type = nil, damageFunc = nil, damageValue = nil;\n\n          try {\n            \n            result = self.$roll_tables(command, $$($nesting, 'TABLES'));\n            if ($truthy(result)) {\n              return result};\n            command = command.$gsub(\"PPC\", \"BT10\");\n            count = 1;\n            if ($truthy(command['$=~'](/^(\\d+)(.+)/))) {\n              \n              count = $$($nesting, 'Regexp').$last_match(1).$to_i();\n              command = $$($nesting, 'Regexp').$last_match(2);};\n            self.$debug(\"executeCommandCatched count\", count);\n            self.$debug(\"executeCommandCatched command\", command);\n            $case = command;\n            if (/^CD(\\d+)$/['$===']($case)) {\n            damage = $$($nesting, 'Regexp').$last_match(1).$to_i();\n            return self.$getCheckDieResult(damage);}\n            else if (/^((S|L)RM\\d+)(.+)/['$===']($case)) {\n            tail = $$($nesting, 'Regexp').$last_match(3);\n            type = $$($nesting, 'Regexp').$last_match(1);\n            damageFunc = $send(self, 'lambda', [], ($$2 = function(){var self = $$2.$$s == null ? this : $$2.$$s;\n\n            return self.$getXrmDamage(type)}, $$2.$$s = self, $$2.$$arity = 0, $$2));\n            return self.$getHitResult(count, damageFunc, tail);}\n            else if (/^BT(\\d+)(.+)/['$===']($case)) {\n            self.$debug(\"BT pattern\");\n            tail = $$($nesting, 'Regexp').$last_match(2);\n            damageValue = $$($nesting, 'Regexp').$last_match(1).$to_i();\n            damageFunc = $send(self, 'lambda', [], ($$3 = function(){var self = $$3.$$s == null ? this : $$3.$$s;\n\n            return damageValue}, $$3.$$s = self, $$3.$$arity = 0, $$3));\n            return self.$getHitResult(count, damageFunc, tail);};\n            return nil;\n          } catch ($err) {\n            if (Opal.rescue($err, [$$($nesting, 'UnknownXRMError')])) {\n              try {\n                return nil\n              } finally { Opal.pop_exception() }\n            } else { throw $err; }\n          }\n        }, $BattleTech_eval_game_system_specific_command$1.$$arity = 1);\n        (function($base, $super, $parent_nesting) {\n          var self = $klass($base, $super, 'UnknownXRMError');\n\n          var $nesting = [self].concat($parent_nesting);\n\n          return nil\n        })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n        \n        Opal.def(self, '$getXrmDamage', $BattleTech_getXrmDamage$4 = function $$getXrmDamage(type) {\n          var self = this, table = nil, roll_result = nil, lrm = nil, damage = nil, modified_damage = nil;\n\n          \n          if ($truthy($$($nesting, 'XRM_DAMAGE_TABLES')['$key?'](type))) {\n          } else {\n            self.$raise($$($nesting, 'UnknownXRMError'), \"\" + \"unknown XRM: \" + (type))\n          };\n          table = $$($nesting, 'XRM_DAMAGE_TABLES')['$[]'](type);\n          roll_result = table.$roll(self.randomizer);\n          lrm = type['$start_with?'](\"L\");\n          damage = roll_result.$content();\n          modified_damage = (function() {if ($truthy(lrm)) {\n            return damage\n          } else {\n            \n            return $rb_times(2, damage);\n          }; return nil; })();\n          return [modified_damage, roll_result.$sum(), lrm];\n        }, $BattleTech_getXrmDamage$4.$$arity = 1);\n        Opal.const_set($nesting[0], 'LRM_LIMIT', 5);\n        \n        Opal.def(self, '$getHitResult', $BattleTech_getHitResult$5 = function $$getHitResult(count, damageFunc, tail) {\n          var $$6, self = this, m = nil, side = nil, $ret_or_1 = nil, baseString = nil, target = nil, base = nil, partTable = nil, resultTexts = nil, damages = nil, hitCount = nil, totalResultText = nil;\n\n          \n          m = /([LCR][LU]?)?(\\+\\d+)?>=(\\d+)/.$match(tail);\n          if ($truthy(m)) {\n          } else {\n            return nil\n          };\n          side = (function() {if ($truthy(($ret_or_1 = m['$[]'](1)))) {\n            return $ret_or_1\n          } else {\n            return \"C\"\n          }; return nil; })();\n          baseString = m['$[]'](2);\n          target = m['$[]'](3).$to_i();\n          base = self.$getBaseValue(baseString);\n          self.$debug(\"side, base, target\", side, base, target);\n          partTable = $$$($$($nesting, 'HitPart'), 'TABLES')['$[]'](side);\n          resultTexts = [];\n          damages = $hash2([], {});\n          hitCount = 0;\n          $send(count, 'times', [], ($$6 = function(){var self = $$6.$$s == null ? this : $$6.$$s, $a, $b, isHit = nil, hitResult = nil, damageText = nil;\n\n          \n            $b = self.$getHitText(base, target), $a = Opal.to_ary($b), (isHit = ($a[0] == null ? nil : $a[0])), (hitResult = ($a[1] == null ? nil : $a[1])), $b;\n            if ($truthy(isHit)) {\n              \n              hitCount = $rb_plus(hitCount, 1);\n              $b = self.$getDamages(damageFunc, partTable, damages), $a = Opal.to_ary($b), (damages = ($a[0] == null ? nil : $a[0])), (damageText = ($a[1] == null ? nil : $a[1])), $b;\n              hitResult = $rb_plus(hitResult, damageText);};\n            return resultTexts['$<<'](hitResult);}, $$6.$$s = self, $$6.$$arity = 0, $$6));\n          resultTexts.$push(\"\" + \" ＞ \" + (hitCount) + \"回命中\");\n          totalResultText = resultTexts.$join(\"\\n\");\n          if ($truthy($rb_gt(hitCount, 0))) {\n            totalResultText = $rb_plus(totalResultText, $rb_plus(\" 命中箇所：\", self.$getTotalDamage(damages)))};\n          return totalResultText;\n        }, $BattleTech_getHitResult$5.$$arity = 3);\n        \n        Opal.def(self, '$getBaseValue', $BattleTech_getBaseValue$7 = function $$getBaseValue(baseString) {\n          var self = this, base = nil;\n\n          \n          base = 0;\n          if ($truthy(baseString['$nil?']())) {\n            return base};\n          base = $$($nesting, 'ArithmeticEvaluator').$eval(baseString);\n          return base;\n        }, $BattleTech_getBaseValue$7.$$arity = 1);\n        \n        Opal.def(self, '$getHitText', $BattleTech_getHitText$8 = function $$getHitText(base, target) {\n          var self = this, dice1 = nil, dice2 = nil, total = nil, isHit = nil, baseString = nil, result = nil;\n\n          \n          dice1 = self.randomizer.$roll_once(6);\n          dice2 = self.randomizer.$roll_once(6);\n          total = $rb_plus($rb_plus(dice1, dice2), base);\n          isHit = $rb_ge(total, target);\n          baseString = (function() {if ($truthy($rb_gt(base, 0))) {\n            return \"\" + \"+\" + (base)\n          } else {\n            return \"\"\n          }; return nil; })();\n          result = \"\" + (total) + \"[\" + (dice1) + \",\" + (dice2) + (baseString) + \"]>=\" + (target) + \" ＞ \";\n          if ($truthy(isHit)) {\n            result = $rb_plus(result, \"命中 ＞ \")\n          } else {\n            result = $rb_plus(result, \"外れ\")\n          };\n          return [isHit, result];\n        }, $BattleTech_getHitText$8.$$arity = 2);\n        \n        Opal.def(self, '$getDamages', $BattleTech_getDamages$9 = function $$getDamages(damageFunc, partTable, damages) {\n          var $a, $b, $$10, self = this, resultText = nil, damage = nil, dice = nil, isLrm = nil, damagePartCount = nil;\n\n          \n          resultText = \"\";\n          $b = damageFunc.$call(), $a = Opal.to_ary($b), (damage = ($a[0] == null ? nil : $a[0])), (dice = ($a[1] == null ? nil : $a[1])), (isLrm = ($a[2] == null ? nil : $a[2])), $b;\n          damagePartCount = 1;\n          if ($truthy(isLrm)) {\n            \n            damagePartCount = $rb_divide($rb_times(1.0, damage), $$($nesting, 'LRM_LIMIT')).$ceil();\n            resultText = $rb_plus(resultText, \"\" + \"[\" + (dice) + \"] \" + (damage) + \"点\");};\n          $send(damagePartCount, 'times', [], ($$10 = function(damageIndex){var self = $$10.$$s == null ? this : $$10.$$s, $c, $d, currentDamage = nil, damageText = nil, text = nil, part = nil, criticalText = nil, $writer = nil;\n\n          \n            \n            if (damageIndex == null) {\n              damageIndex = nil;\n            };\n            $d = self.$getDamageInfo(dice, damage, isLrm, damageIndex), $c = Opal.to_ary($d), (currentDamage = ($c[0] == null ? nil : $c[0])), (damageText = ($c[1] == null ? nil : $c[1])), $d;\n            $d = self.$getHitResultOne(damageText, partTable), $c = Opal.to_ary($d), (text = ($c[0] == null ? nil : $c[0])), (part = ($c[1] == null ? nil : $c[1])), (criticalText = ($c[2] == null ? nil : $c[2])), $d;\n            if ($truthy(isLrm)) {\n              resultText = $rb_plus(resultText, \" \")};\n            resultText = $rb_plus(resultText, text);\n            if ($truthy(damages['$[]'](part)['$nil?']())) {\n              \n              $writer = [part, $hash2([\"partDamages\", \"criticals\"], {\"partDamages\": [], \"criticals\": []})];\n              $send(damages, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            damages['$[]'](part)['$[]'](\"partDamages\")['$<<'](currentDamage);\n            if ($truthy(criticalText['$empty?']())) {\n              return nil\n            } else {\n              return damages['$[]'](part)['$[]'](\"criticals\")['$<<'](criticalText)\n            };}, $$10.$$s = self, $$10.$$arity = 1, $$10));\n          return [damages, resultText];\n        }, $BattleTech_getDamages$9.$$arity = 3);\n        \n        Opal.def(self, '$getDamageInfo', $BattleTech_getDamageInfo$11 = function $$getDamageInfo(dice, damage, isLrm, index) {\n          var self = this, currentDamage = nil;\n\n          \n          if ($truthy(dice['$nil?']())) {\n            return [damage, damage.$to_s()]};\n          if ($truthy(isLrm)) {\n          } else {\n            return [damage, \"\" + \"[\" + (dice) + \"] \" + (damage)]\n          };\n          currentDamage = $rb_minus(damage, $rb_times($$($nesting, 'LRM_LIMIT'), index));\n          if ($truthy($rb_gt(currentDamage, $$($nesting, 'LRM_LIMIT')))) {\n            currentDamage = $$($nesting, 'LRM_LIMIT')};\n          return [currentDamage, currentDamage.$to_s()];\n        }, $BattleTech_getDamageInfo$11.$$arity = 4);\n        \n        Opal.def(self, '$getTotalDamage', $BattleTech_getTotalDamage$12 = function $$getTotalDamage(damages) {\n          var $$13, self = this, parts = nil, allDamage = nil, damageTexts = nil, result = nil;\n\n          \n          parts = [\"頭\", \"胴中央\", \"右胴\", \"左胴\", \"右脚\", \"左脚\", \"右腕\", \"左腕\"];\n          allDamage = 0;\n          damageTexts = [];\n          $send(parts, 'each', [], ($$13 = function(part){var self = $$13.$$s == null ? this : $$13.$$s, $$14, damageInfo = nil, damage = nil, damageCount = nil, criticals = nil, text = nil;\n\n          \n            \n            if (part == null) {\n              part = nil;\n            };\n            damageInfo = damages.$delete(part);\n            if ($truthy(damageInfo['$nil?']())) {\n              return nil;};\n            damage = $send(damageInfo['$[]'](\"partDamages\"), 'inject', [0], ($$14 = function(sum, i){var self = $$14.$$s == null ? this : $$14.$$s;\n\n            \n              \n              if (sum == null) {\n                sum = nil;\n              };\n              \n              if (i == null) {\n                i = nil;\n              };\n              return $rb_plus(sum, i);}, $$14.$$s = self, $$14.$$arity = 2, $$14));\n            allDamage = $rb_plus(allDamage, damage);\n            damageCount = damageInfo['$[]'](\"partDamages\").$size();\n            criticals = damageInfo['$[]'](\"criticals\");\n            text = \"\";\n            text = $rb_plus(text, \"\" + (part) + \"(\" + (damageCount) + \"回) \" + (damage) + \"点\");\n            if ($truthy(criticals['$empty?']())) {\n            } else {\n              text = $rb_plus(text, \"\" + \" \" + (criticals.$join(\" \")))\n            };\n            return damageTexts['$<<'](text);}, $$13.$$s = self, $$13.$$arity = 1, $$13));\n          if ($truthy(damages['$empty?']())) {\n          } else {\n            self.$raise(\"\" + \"damages rest!! \" + (damages.$inspect()))\n          };\n          result = damageTexts.$join(\" ／ \");\n          result = $rb_plus(result, \"\" + \" ＞ 合計ダメージ \" + (allDamage) + \"点\");\n          return result;\n        }, $BattleTech_getTotalDamage$12.$$arity = 1);\n        \n        Opal.def(self, '$getHitResultOne', $BattleTech_getHitResultOne$15 = function $$getHitResultOne(damage_text, hit_part_table) {\n          var self = this, hit_part_roll_result = nil, hit_part = nil, critical_hit_may_occur_str = nil, result_parts = nil, criticalText = nil, ct_roll_result = nil;\n\n          \n          hit_part_roll_result = hit_part_table.$roll(self.randomizer);\n          hit_part = hit_part_roll_result.$content();\n          critical_hit_may_occur_str = (function() {if ($truthy(hit_part.$critical_hit_may_occur())) {\n            return \"（致命的命中）\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          result_parts = [[\"\" + \"[\" + (hit_part_roll_result.$sum()) + \"]\", \"\" + (hit_part.$name()) + (critical_hit_may_occur_str), \"\" + (damage_text) + \"点\"].$join(\" \")];\n          criticalText = \"\";\n          if ($truthy(hit_part.$critical_hit_may_occur())) {\n            \n            ct_roll_result = $$($nesting, 'TABLES')['$[]'](\"CT\").$roll(self.randomizer);\n            if ($truthy($rb_gt(ct_roll_result.$sum(), $$($nesting, 'NO_CRITICAL_HIT_LIMIT')))) {\n              criticalText = ct_roll_result.$content()};\n            result_parts.$push(\"\" + \"[\" + (ct_roll_result.$sum()) + \"] \" + (ct_roll_result.$content()));};\n          return [result_parts.$join(\" ＞ \"), hit_part.$name(), criticalText];\n        }, $BattleTech_getHitResultOne$15.$$arity = 2);\n        \n        Opal.def(self, '$getCheckDieResult', $BattleTech_getCheckDieResult$16 = function $$getCheckDieResult(damage) {\n          var self = this, table = nil, target = nil, dice1 = nil, dice2 = nil, total = nil, result = nil, text = nil;\n\n          \n          if ($truthy($rb_ge(damage, 6))) {\n            return \"死亡\"};\n          table = [[1, 3], [2, 5], [3, 7], [4, 10], [5, 11]];\n          target = self.$get_table_by_number(damage, table, nil);\n          dice1 = self.randomizer.$roll_once(6);\n          dice2 = self.randomizer.$roll_once(6);\n          total = $rb_plus(dice1, dice2);\n          result = (function() {if ($truthy($rb_ge(total, target))) {\n            return \"成功\"\n          } else {\n            return \"失敗\"\n          }; return nil; })();\n          text = \"\" + (total) + \"[\" + (dice1) + \",\" + (dice2) + \"]>=\" + (target) + \" ＞ \" + (result);\n          return text;\n        }, $BattleTech_getCheckDieResult$16.$$arity = 1);\n        Opal.const_set($nesting[0], 'TABLES', $hash2([\"CT\", \"DW\"], {\"CT\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"致命的命中表\", \"2D6\", [[Opal.Range.$new(2, $$($nesting, 'NO_CRITICAL_HIT_LIMIT'), false), \"致命的命中はなかった\"], [$range(8, 9, false), \"1箇所の致命的命中\"], [$range(10, 11, false), \"2箇所の致命的命中\"], [12, \"その部位が吹き飛ぶ（腕、脚、頭）または3箇所の致命的命中（胴）\"]]), \"DW\": $$$($$($nesting, 'DiceTable'), 'Table').$new(\"転倒後の向き表\", \"1D6\", [\"同じ（前面から転倒） 正面／背面\", \"1ヘクスサイド右（側面から転倒） 右側面\", \"2ヘクスサイド右（側面から転倒） 右側面\", \"180度逆（背面から転倒） 正面／背面\", \"2ヘクスサイド左（側面から転倒） 左側面\", \"1ヘクスサイド左（側面から転倒） 左側面\"])}).$freeze());\n        Opal.const_set($nesting[0], 'HitPart', $$($nesting, 'Struct').$new(\"name\", \"critical_hit_may_occur\"));\n        (function($base, $super, $parent_nesting) {\n          var self = $klass($base, $super, 'HitPart');\n\n          var $nesting = [self].concat($parent_nesting);\n\n          \n          Opal.const_set($nesting[0], 'LEFT_TORSO', \"左胴\");\n          Opal.const_set($nesting[0], 'CENTER_TORSO', \"胴中央\");\n          Opal.const_set($nesting[0], 'RIGHT_TORSO', \"右胴\");\n          Opal.const_set($nesting[0], 'LEFT_ARM', \"左腕\");\n          Opal.const_set($nesting[0], 'RIGHT_ARM', \"右腕\");\n          Opal.const_set($nesting[0], 'LEFT_LEG', \"左脚\");\n          Opal.const_set($nesting[0], 'RIGHT_LEG', \"右脚\");\n          Opal.const_set($nesting[0], 'HEAD', \"頭\");\n          return Opal.const_set($nesting[0], 'TABLES', $hash2([\"L\", \"C\", \"R\", \"LU\", \"CU\", \"RU\", \"LL\", \"CL\", \"RL\"], {\"L\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"命中部位表（左）\", \"2D6\", [[2, self.$new($$($nesting, 'LEFT_TORSO'), true)], [3, self.$new($$($nesting, 'LEFT_LEG'), false)], [$range(4, 5, false), self.$new($$($nesting, 'LEFT_ARM'), false)], [6, self.$new($$($nesting, 'LEFT_LEG'), false)], [7, self.$new($$($nesting, 'LEFT_TORSO'), false)], [8, self.$new($$($nesting, 'CENTER_TORSO'), false)], [9, self.$new($$($nesting, 'RIGHT_TORSO'), false)], [10, self.$new($$($nesting, 'RIGHT_ARM'), false)], [11, self.$new($$($nesting, 'RIGHT_LEG'), false)], [12, self.$new($$($nesting, 'HEAD'), false)]]), \"C\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"命中部位表（正面）\", \"2D6\", [[2, self.$new($$($nesting, 'CENTER_TORSO'), true)], [$range(3, 4, false), self.$new($$($nesting, 'RIGHT_ARM'), false)], [5, self.$new($$($nesting, 'RIGHT_LEG'), false)], [6, self.$new($$($nesting, 'RIGHT_TORSO'), false)], [7, self.$new($$($nesting, 'CENTER_TORSO'), false)], [8, self.$new($$($nesting, 'LEFT_TORSO'), false)], [9, self.$new($$($nesting, 'LEFT_LEG'), false)], [$range(10, 11, false), self.$new($$($nesting, 'LEFT_ARM'), false)], [12, self.$new($$($nesting, 'HEAD'), false)]]), \"R\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"命中部位表（右）\", \"2D6\", [[2, self.$new($$($nesting, 'RIGHT_TORSO'), true)], [3, self.$new($$($nesting, 'RIGHT_LEG'), false)], [$range(4, 5, false), self.$new($$($nesting, 'RIGHT_ARM'), false)], [6, self.$new($$($nesting, 'RIGHT_LEG'), false)], [7, self.$new($$($nesting, 'RIGHT_TORSO'), false)], [8, self.$new($$($nesting, 'CENTER_TORSO'), false)], [9, self.$new($$($nesting, 'LEFT_TORSO'), false)], [10, self.$new($$($nesting, 'LEFT_ARM'), false)], [11, self.$new($$($nesting, 'LEFT_LEG'), false)], [12, self.$new($$($nesting, 'HEAD'), false)]]), \"LU\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"命中部位表（左上半身）\", \"1D6\", [[$range(1, 2, false), self.$new($$($nesting, 'LEFT_TORSO'), false)], [3, self.$new($$($nesting, 'CENTER_TORSO'), false)], [$range(4, 5, false), self.$new($$($nesting, 'LEFT_ARM'), false)], [6, self.$new($$($nesting, 'HEAD'), false)]]), \"CU\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"命中部位表（正面上半身）\", \"1D6\", [[1, self.$new($$($nesting, 'LEFT_ARM'), false)], [2, self.$new($$($nesting, 'LEFT_TORSO'), false)], [3, self.$new($$($nesting, 'CENTER_TORSO'), false)], [4, self.$new($$($nesting, 'RIGHT_TORSO'), false)], [5, self.$new($$($nesting, 'RIGHT_ARM'), false)], [6, self.$new($$($nesting, 'HEAD'), false)]]), \"RU\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"命中部位表（右上半身）\", \"1D6\", [[$range(1, 2, false), self.$new($$($nesting, 'RIGHT_TORSO'), false)], [3, self.$new($$($nesting, 'CENTER_TORSO'), false)], [$range(4, 5, false), self.$new($$($nesting, 'RIGHT_ARM'), false)], [6, self.$new($$($nesting, 'HEAD'), false)]]), \"LL\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"命中部位表（左下半身）\", \"1D6\", [[$range(1, 6, false), self.$new($$($nesting, 'LEFT_LEG'), false)]]), \"CL\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"命中部位表（右下半身）\", \"1D6\", [[$range(1, 3, false), self.$new($$($nesting, 'RIGHT_LEG'), false)], [$range(4, 6, false), self.$new($$($nesting, 'LEFT_LEG'), false)]]), \"RL\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"命中部位表（右下半身）\", \"1D6\", [[$range(1, 6, false), self.$new($$($nesting, 'RIGHT_LEG'), false)]])}).$freeze());\n        })($nesting[0], null, $nesting);\n        return Opal.const_set($nesting[0], 'XRM_DAMAGE_TABLES', $hash2([\"SRM2\", \"SRM4\", \"SRM6\", \"LRM5\", \"LRM10\", \"LRM15\", \"LRM20\"], {\"SRM2\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"SRM2ダメージ表\", \"2D6\", [[$range(2, 7, false), 1], [$range(8, 12, false), 2]]), \"SRM4\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"SRM4ダメージ表\", \"2D6\", [[2, 1], [$range(3, 6, false), 2], [$range(7, 10, false), 3], [$range(11, 12, false), 4]]), \"SRM6\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"SRM6ダメージ表\", \"2D6\", [[$range(2, 3, false), 2], [$range(4, 5, false), 3], [$range(6, 8, false), 4], [$range(9, 10, false), 5], [$range(11, 12, false), 6]]), \"LRM5\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"LRM5ダメージ表\", \"2D6\", [[2, 1], [$range(3, 4, false), 2], [$range(5, 8, false), 3], [$range(9, 10, false), 4], [$range(11, 12, false), 5]]), \"LRM10\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"LRM10ダメージ表\", \"2D6\", [[$range(2, 3, false), 3], [4, 4], [$range(5, 8, false), 6], [$range(9, 10, false), 8], [$range(11, 12, false), 10]]), \"LRM15\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"LRM15ダメージ表\", \"2D6\", [[$range(2, 3, false), 5], [4, 6], [$range(5, 8, false), 9], [$range(9, 10, false), 12], [$range(11, 12, false), 15]]), \"LRM20\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"LRM20ダメージ表\", \"2D6\", [[$range(2, 3, false), 6], [4, 9], [$range(5, 8, false), 12], [$range(9, 10, false), 16], [$range(11, 12, false), 20]])}).$freeze());\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n})(Opal);\n"],"sourceRoot":"webpack:///"}