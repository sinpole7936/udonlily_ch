{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/BlindMythos.js"],"names":["require","Opal","$rb_plus","lhs","rhs","$rb_gt","$rb_minus","$rb_ge","$rb_le","$rb_times","$rb_divide","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$truthy","truthy","$send","send","$hash2","hash2","$base","$parent_nesting","concat","$super","$BlindMythos_eval_game_system_specific_command$1","$BlindMythos_judgeRoll$2","$BlindMythos_reRoll$3","$BlindMythos_getRollResult$5","$BlindMythos_getTotalResultMessageText$9","$BlindMythos_getSameDieList$12","$BlindMythos_getSuccessResultText$15","$BlindMythos_getRulingPlanetDiceCommandResult$17","$BlindMythos_getRulingPlanetDice$19","$BlindMythos_changeRulingPlanetDice$20","$BlindMythos_getDurtyTableCommandReuslt$21","$$prototype","randomizer","const_set","def","$$eval_game_system_specific_command","command","$a","$b","text","isStop","$debug","$judgeRoll","$reRoll","to_ary","$getRulingPlanetDiceCommandResult","$getDurtyTableCommandReuslt","$roll_tables","$$arity","$$judgeRoll","skillRank","judgeNumberText","judgeNumber","$ret_or_1","targetNumber","$ret_or_2","message","diceCount","isReRoll","bitList","successList","countOneList","canReRoll","$last_match","$to_i","$getRollResult","$getTotalResultMessageText","$$reRoll","$$4","rerollCountsText","$ret_or_3","rerollCounts","commandText","$ret_or_4","_bitList","$split","$to_proc","$$s","$size","$$getRollResult","$$6","rerollTargetList","rerollCommand","$ret_or_5","successListTmp","countOneListTmp","index","$$7","$$8","commandName","diceList","diceText","success","countOne","resultText","sameDiceList","rerollText","$roll_barabara","$sort","$join","$getSuccessResultText","i","$getSameDieList","list","$$getTotalResultMessageText","$$10","$$11","result","$ret_or_6","sum","$$getSameDieList","$$13","$uniq","$$14","dice","$length","$$getSuccessResultText","$$16","$$getRulingPlanetDiceCommandResult","$$18","targetNumbers","matchResult","$getRulingPlanetDice","$brk","new_brk","brk","$$brk","err","$v","$count","$$getRulingPlanetDice","dice1","dice2","$roll_once","$changeRulingPlanetDice","$$changeRulingPlanetDice","$$getDurtyTableCommandReuslt","table","$roll_sum","$ceil","$new","$freeze","$register_prefix","$keys"],"mappings":"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","file":"default~BlindMythos~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send, $hash2 = Opal.hash2;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'BlindMythos');\n\n        var $nesting = [self].concat($parent_nesting), $BlindMythos_eval_game_system_specific_command$1, $BlindMythos_judgeRoll$2, $BlindMythos_reRoll$3, $BlindMythos_getRollResult$5, $BlindMythos_getTotalResultMessageText$9, $BlindMythos_getSameDieList$12, $BlindMythos_getSuccessResultText$15, $BlindMythos_getRulingPlanetDiceCommandResult$17, $BlindMythos_getRulingPlanetDice$19, $BlindMythos_changeRulingPlanetDice$20, $BlindMythos_getDurtyTableCommandReuslt$21;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"BlindMythos\");\n        Opal.const_set($nesting[0], 'NAME', \"ブラインド・ミトスRPG\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"ふらいんとみとすRPG\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・判定：BMx@y>=z、BMSx@y>=z\\n\" + \"  　x:スキルレベル\\n\" + \"　　y:目標難易度（省略可。デフォルト4）\\n\" + \"　　z:必要成功度\\n\" + \"　BMコマンドはダイスの振り足しを常に行い、\\n\" + \"　BMSは振り足しを自動では行いません。\\n\" + \" 例）BM>=1　BM@3>=1　BMS2>=1\\n\" + \"\\n\" + \"・判定振り足し：ReRollx,x,x...@y>=1\\n\" + \"  　x:振るダイスの個数\\n\" + \"　　y:目標難易度（省略可。デフォルト4）\\n\" + \"　　z:必要成功度\\n\" + \"　振り足しを自動で行わない場合（BMSコマンド）に使用します。\\n\" + \"\\n\" + \"・LE：失う感情表\\n\" + \"・感情後遺症表 ESx\\n\" + \"　ESH：喜、ESA：怒、ESS：哀、ESP：楽、ESL：愛、ESE：感\\n\" + \"・DT：汚染チャート\\n\" + \"・RPxyz：守護星表チェック\\n\" + \" xyz:守護星ナンバーを指定\\n\" + \" 例）RP123　RP258\\n\");\n        \n        Opal.def(self, '$eval_game_system_specific_command', $BlindMythos_eval_game_system_specific_command$1 = function $$eval_game_system_specific_command(command) {\n          var $a, $b, self = this, text = nil, isStop = nil;\n\n          \n          self.$debug(\"eval_game_system_specific_command Begin\");\n          text = self.$judgeRoll(command);\n          if ($truthy(text['$nil?']())) {\n          } else {\n            return text\n          };\n          isStop = true;\n          $b = self.$reRoll(command, isStop), $a = Opal.to_ary($b), (text = ($a[0] == null ? nil : $a[0])), $b;\n          if ($truthy(text['$nil?']())) {\n          } else {\n            return text\n          };\n          text = self.$getRulingPlanetDiceCommandResult(command);\n          if ($truthy(text['$nil?']())) {\n          } else {\n            return text\n          };\n          text = self.$getDurtyTableCommandReuslt(command);\n          if ($truthy(text['$nil?']())) {\n          } else {\n            return text\n          };\n          return self.$roll_tables(command, $$($nesting, 'TABLES'));\n        }, $BlindMythos_eval_game_system_specific_command$1.$$arity = 1);\n        \n        Opal.def(self, '$judgeRoll', $BlindMythos_judgeRoll$2 = function $$judgeRoll(command) {\n          var $a, $b, self = this, isStop = nil, skillRank = nil, judgeNumberText = nil, judgeNumber = nil, $ret_or_1 = nil, targetNumber = nil, $ret_or_2 = nil, message = nil, diceCount = nil, isReRoll = nil, text = nil, bitList = nil, successList = nil, countOneList = nil, canReRoll = nil;\n\n          \n          if ($truthy(/^BM(S)?(\\d*)(@(\\d+))?>=(\\d+)$/i['$=~'](command))) {\n          } else {\n            return nil\n          };\n          isStop = $$($nesting, 'Regexp').$last_match(1)['$nil?']()['$!']();\n          skillRank = $$($nesting, 'Regexp').$last_match(2).$to_i();\n          judgeNumberText = $$($nesting, 'Regexp').$last_match(3);\n          judgeNumber = (function() {if ($truthy(($ret_or_1 = $$($nesting, 'Regexp').$last_match(4)))) {\n            return $ret_or_1\n          } else {\n            return 4\n          }; return nil; })().$to_i();\n          targetNumber = (function() {if ($truthy(($ret_or_2 = $$($nesting, 'Regexp').$last_match(5)))) {\n            return $ret_or_2\n          } else {\n            return 1\n          }; return nil; })().$to_i();\n          message = \"\";\n          diceCount = $rb_plus(skillRank, 2);\n          isReRoll = false;\n          $b = self.$getRollResult([diceCount], judgeNumberText, judgeNumber, targetNumber, isReRoll, isStop), $a = Opal.to_ary($b), (text = ($a[0] == null ? nil : $a[0])), (bitList = ($a[1] == null ? nil : $a[1])), (successList = ($a[2] == null ? nil : $a[2])), (countOneList = ($a[3] == null ? nil : $a[3])), (canReRoll = ($a[4] == null ? nil : $a[4])), $b;\n          message = $rb_plus(message, text);\n          message = $rb_plus(message, self.$getTotalResultMessageText(bitList, successList, countOneList, targetNumber, isStop, canReRoll));\n          return message;\n        }, $BlindMythos_judgeRoll$2.$$arity = 1);\n        \n        Opal.def(self, '$reRoll', $BlindMythos_reRoll$3 = function $$reRoll(command, isStop) {\n          var $$4, $a, $b, self = this, rerollCountsText = nil, judgeNumberText = nil, judgeNumber = nil, $ret_or_3 = nil, targetNumber = nil, rerollCounts = nil, commandText = nil, message = nil, $ret_or_4 = nil, isReRoll = nil, text = nil, _bitList = nil, successList = nil, countOneList = nil;\n\n          \n          self.$debug(\"ReRoll Begin\", command);\n          if ($truthy(/^ReRoll([\\d,]+)(@(\\d+))?>=(\\d+)$/i['$=~'](command))) {\n          } else {\n            return nil\n          };\n          self.$debug(\"ReRoll pass\");\n          rerollCountsText = $$($nesting, 'Regexp').$last_match(1);\n          judgeNumberText = $$($nesting, 'Regexp').$last_match(2);\n          judgeNumber = (function() {if ($truthy(($ret_or_3 = $$($nesting, 'Regexp').$last_match(3)))) {\n            return $ret_or_3\n          } else {\n            return 4\n          }; return nil; })().$to_i();\n          targetNumber = $$($nesting, 'Regexp').$last_match(4).$to_i();\n          rerollCounts = $send(rerollCountsText.$split(/,/), 'map', [], \"to_i\".$to_proc());\n          commandText = \"\";\n          $send(rerollCounts, 'each', [], ($$4 = function(diceCount){var self = $$4.$$s == null ? this : $$4.$$s;\n\n          \n            \n            if (diceCount == null) {\n              diceCount = nil;\n            };\n            if ($truthy(commandText['$empty?']())) {\n            } else {\n              commandText = $rb_plus(commandText, \",\")\n            };\n            return (commandText = $rb_plus(commandText, \"\" + \"ReRoll\" + (diceCount) + (judgeNumberText) + \">=\" + (targetNumber)));}, $$4.$$s = self, $$4.$$arity = 1, $$4));\n          self.$debug(\"commandText\", commandText);\n          message = \"\";\n          if ($truthy((function() {if ($truthy(($ret_or_4 = $rb_gt(rerollCounts.$size(), 1)))) {\n            return isStop\n          } else {\n            return $ret_or_4\n          }; return nil; })())) {\n            message = $rb_plus(message, \"\" + \"(\" + (commandText) + \")\")};\n          message = $rb_plus(message, \"\\n\");\n          isReRoll = true;\n          $b = self.$getRollResult(rerollCounts, judgeNumberText, judgeNumber, targetNumber, isReRoll, isStop), $a = Opal.to_ary($b), (text = ($a[0] == null ? nil : $a[0])), (_bitList = ($a[1] == null ? nil : $a[1])), (successList = ($a[2] == null ? nil : $a[2])), (countOneList = ($a[3] == null ? nil : $a[3])), $b;\n          message = $rb_plus(message, text);\n          return [message, successList, countOneList, targetNumber];\n        }, $BlindMythos_reRoll$3.$$arity = 2);\n        \n        Opal.def(self, '$getRollResult', $BlindMythos_getRollResult$5 = function $$getRollResult(rerollCounts, judgeNumberText, judgeNumber, targetNumber, isReRoll, isStop) {\n          var $$6, $a, $b, self = this, bitList = nil, successList = nil, countOneList = nil, rerollTargetList = nil, message = nil, rerollCommand = nil, canReRoll = nil, $ret_or_5 = nil, text = nil, successListTmp = nil, countOneListTmp = nil;\n\n          \n          bitList = [];\n          successList = [];\n          countOneList = [];\n          rerollTargetList = [];\n          message = \"\";\n          $send(rerollCounts, 'each_with_index', [], ($$6 = function(diceCount, index){var self = $$6.$$s == null ? this : $$6.$$s, $a, $b, $$7, $$8, commandName = nil, commandText = nil, diceList = nil, diceText = nil, success = nil, countOne = nil, resultText = nil, sameDiceList = nil, rerollText = nil;\n            if (self.randomizer == null) self.randomizer = nil;\n\n          \n            \n            if (diceCount == null) {\n              diceCount = nil;\n            };\n            \n            if (index == null) {\n              index = nil;\n            };\n            if (index['$=='](0)) {\n            } else {\n              message = $rb_plus(message, \"\\n\")\n            };\n            commandName = \"\" + \"ReRoll\" + (diceCount);\n            if ($truthy(isReRoll)) {\n            } else if ($truthy(isStop)) {\n              commandName = \"\" + \"BMS\" + ($rb_minus(diceCount, 2))\n            } else {\n              commandName = \"\" + \"BM\" + ($rb_minus(diceCount, 2))\n            };\n            commandText = \"\" + (commandName) + (judgeNumberText) + \">=\" + (targetNumber);\n            diceList = self.randomizer.$roll_barabara(diceCount, 6).$sort();\n            diceText = diceList.$join(\",\");\n            if ($truthy(isReRoll)) {\n              message = $rb_plus(message, \" ＞ \")};\n            message = $rb_plus(message, \"\" + \"(\" + (commandText) + \") ＞ \" + (diceCount) + \"D6[\" + (diceText) + \"] ＞ \");\n            $b = self.$getSuccessResultText(diceList, judgeNumber), $a = Opal.to_ary($b), (success = ($a[0] == null ? nil : $a[0])), (countOne = ($a[1] == null ? nil : $a[1])), (resultText = ($a[2] == null ? nil : $a[2])), $b;\n            if ($truthy(isReRoll)) {\n            } else {\n              bitList = $rb_plus(bitList, $send(diceList, 'find_all', [], ($$7 = function(i){var self = $$7.$$s == null ? this : $$7.$$s;\n\n              \n                \n                if (i == null) {\n                  i = nil;\n                };\n                return $rb_ge(i, 4);}, $$7.$$s = self, $$7.$$arity = 1, $$7)))\n            };\n            successList['$<<'](success);\n            countOneList['$<<'](countOne);\n            message = $rb_plus(message, resultText);\n            sameDiceList = self.$getSameDieList(diceList);\n            if ($truthy(sameDiceList['$empty?']())) {\n              return nil;};\n            rerollText = \"\";\n            $send(sameDiceList, 'each', [], ($$8 = function(list){var self = $$8.$$s == null ? this : $$8.$$s;\n\n            \n              \n              if (list == null) {\n                list = nil;\n              };\n              if ($truthy(rerollText['$empty?']())) {\n              } else {\n                rerollText = $rb_plus(rerollText, \",\")\n              };\n              return (rerollText = $rb_plus(rerollText, list.$join(\"\")));}, $$8.$$s = self, $$8.$$arity = 1, $$8));\n            rerollTargetList['$<<']($send(sameDiceList, 'map', [], \"count\".$to_proc()).$join(\",\"));\n            return (message = $rb_plus(message, \"\" + \"、リロール[\" + (rerollText) + \"]\"));}, $$6.$$s = self, $$6.$$arity = 2, $$6));\n          rerollCommand = \"\";\n          if ($truthy(rerollTargetList['$empty?']())) {\n          } else {\n            \n            rerollCommand = \"\" + \"ReRoll\" + (rerollTargetList.$join(\",\")) + (judgeNumberText) + \">=\" + (targetNumber);\n            if ($truthy(isStop)) {\n              message = $rb_plus(message, \"\" + \"\\n ＞ コマンド：\" + (rerollCommand))};\n          };\n          canReRoll = rerollCommand['$empty?']()['$!']();\n          if ($truthy((function() {if ($truthy(($ret_or_5 = canReRoll))) {\n            return isStop['$!']()\n          } else {\n            return $ret_or_5\n          }; return nil; })())) {\n            \n            $b = self.$reRoll(rerollCommand, isStop), $a = Opal.to_ary($b), (text = ($a[0] == null ? nil : $a[0])), (successListTmp = ($a[1] == null ? nil : $a[1])), (countOneListTmp = ($a[2] == null ? nil : $a[2])), $b;\n            message = $rb_plus(message, text);\n            successList = $rb_plus(successList, successListTmp);\n            countOneList = $rb_plus(countOneList, countOneListTmp);};\n          return [message, bitList, successList, countOneList, canReRoll];\n        }, $BlindMythos_getRollResult$5.$$arity = 6);\n        \n        Opal.def(self, '$getTotalResultMessageText', $BlindMythos_getTotalResultMessageText$9 = function $$getTotalResultMessageText(bitList, successList, countOneList, targetNumber, isStop, canReRoll) {\n          var $$10, $$11, self = this, success = nil, countOne = nil, result = nil, $ret_or_6 = nil;\n\n          \n          success = $send(successList, 'inject', [], ($$10 = function(sum, i){var self = $$10.$$s == null ? this : $$10.$$s;\n\n          \n            \n            if (sum == null) {\n              sum = nil;\n            };\n            \n            if (i == null) {\n              i = nil;\n            };\n            return $rb_plus(sum, i);}, $$10.$$s = self, $$10.$$arity = 2, $$10));\n          countOne = $send(countOneList, 'inject', [], ($$11 = function(sum, i){var self = $$11.$$s == null ? this : $$11.$$s;\n\n          \n            \n            if (sum == null) {\n              sum = nil;\n            };\n            \n            if (i == null) {\n              i = nil;\n            };\n            return $rb_plus(sum, i);}, $$11.$$s = self, $$11.$$arity = 2, $$11));\n          result = \"\";\n          if ($truthy($rb_gt(successList.$size(), 1))) {\n            result = $rb_plus(result, \"\" + \"\\n ＞ 最終成功数:\" + (success))};\n          if ($truthy((function() {if ($truthy(($ret_or_6 = canReRoll))) {\n            return isStop\n          } else {\n            return $ret_or_6\n          }; return nil; })())) {\n            \n            result = $rb_plus(result, \"\\n\");\n            if ($truthy($rb_ge(success, targetNumber))) {\n              result = $rb_plus(result, \" ＞ 現状で成功。コマンド実行で追加リロールも可能\")\n            } else {\n              \n              result = $rb_plus(result, \" ＞ 現状のままでは失敗\");\n              if ($truthy($rb_ge(countOne, 1))) {\n                result = $rb_plus(result, \"\" + \"。汚染ポイント+\" + (countOne))};\n            };\n            return result;};\n          if ($truthy($rb_ge(success, targetNumber))) {\n            \n            result = $rb_plus(result, \" ＞ 成功\");\n            if ($truthy($rb_ge(bitList.$size(), 1))) {\n              result = $rb_plus(result, \"\" + \"、禁書ビット発生[\" + (bitList.$join(\",\")) + \"]\")};\n          } else {\n            \n            result = $rb_plus(result, \" ＞ 失敗\");\n            if ($truthy($rb_ge(countOne, 1))) {\n              result = $rb_plus(result, \"\" + \"。汚染ポイント+\" + (countOne))};\n          };\n          return result;\n        }, $BlindMythos_getTotalResultMessageText$9.$$arity = 6);\n        \n        Opal.def(self, '$getSameDieList', $BlindMythos_getSameDieList$12 = function $$getSameDieList(diceList) {\n          var $$13, self = this, sameDiceList = nil;\n\n          \n          sameDiceList = [];\n          $send(diceList.$uniq(), 'each', [], ($$13 = function(i){var self = $$13.$$s == null ? this : $$13.$$s, $$14, list = nil;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            if (i['$=='](1)) {\n              return nil;};\n            list = $send(diceList, 'find_all', [], ($$14 = function(dice){var self = $$14.$$s == null ? this : $$14.$$s;\n\n            \n              \n              if (dice == null) {\n                dice = nil;\n              };\n              return dice['$=='](i);}, $$14.$$s = self, $$14.$$arity = 1, $$14));\n            if ($truthy($rb_le(list.$length(), 1))) {\n              return nil;};\n            return sameDiceList['$<<'](list);}, $$13.$$s = self, $$13.$$arity = 1, $$13));\n          return sameDiceList;\n        }, $BlindMythos_getSameDieList$12.$$arity = 1);\n        \n        Opal.def(self, '$getSuccessResultText', $BlindMythos_getSuccessResultText$15 = function $$getSuccessResultText(diceList, judgeNumber) {\n          var $$16, self = this, success = nil, countOne = nil, result = nil;\n\n          \n          success = 0;\n          countOne = 0;\n          $send(diceList, 'each', [], ($$16 = function(i){var self = $$16.$$s == null ? this : $$16.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            if (i['$=='](1)) {\n              countOne = $rb_plus(countOne, 1)};\n            if ($truthy($rb_ge(i, judgeNumber))) {\n            } else {\n              return nil;\n            };\n            return (success = $rb_plus(success, 1));}, $$16.$$s = self, $$16.$$arity = 1, $$16));\n          result = \"\" + \"成功数:\" + (success);\n          return [success, countOne, result];\n        }, $BlindMythos_getSuccessResultText$15.$$arity = 2);\n        \n        Opal.def(self, '$getRulingPlanetDiceCommandResult', $BlindMythos_getRulingPlanetDiceCommandResult$17 = function $$getRulingPlanetDiceCommandResult(command) {\n          var $$18, self = this, targetNumbers = nil, diceList = nil, matchResult = nil, text = nil;\n\n          \n          if ($truthy(command['$=~'](/^RP(\\d+)/i))) {\n          } else {\n            return nil\n          };\n          targetNumbers = $send($$($nesting, 'Regexp').$last_match(1).$split(/(?:)/), 'map', [], \"to_i\".$to_proc());\n          diceList = self.$getRulingPlanetDice();\n          matchResult = \"失敗\";\n          (function(){var $brk = Opal.new_brk(); try {return $send(targetNumbers, 'each', [], ($$18 = function(i){var self = $$18.$$s == null ? this : $$18.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            if ($truthy(diceList['$include?'](i))) {\n              \n              matchResult = \"発動\";\n              \n              Opal.brk(nil, $brk);\n            } else {\n              return nil\n            };}, $$18.$$s = self, $$18.$$brk = $brk, $$18.$$arity = 1, $$18))\n          } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n          text = \"\" + \"守護星表チェック(\" + (targetNumbers.$join(\",\")) + \") ＞ \" + (diceList.$count()) + \"D10[\" + (diceList.$join(\",\")) + \"] ＞ \" + (matchResult);\n          return text;\n        }, $BlindMythos_getRulingPlanetDiceCommandResult$17.$$arity = 1);\n        \n        Opal.def(self, '$getRulingPlanetDice', $BlindMythos_getRulingPlanetDice$19 = function $$getRulingPlanetDice() {\n          var $a, self = this, dice1 = nil, dice2 = nil;\n\n          \n          dice1 = self.randomizer.$roll_once(10);\n          dice2 = dice1;\n          while (dice1['$=='](dice2)) {\n            dice2 = self.randomizer.$roll_once(10)\n          };\n          dice1 = self.$changeRulingPlanetDice(dice1);\n          dice2 = self.$changeRulingPlanetDice(dice2);\n          return [dice1, dice2];\n        }, $BlindMythos_getRulingPlanetDice$19.$$arity = 0);\n        \n        Opal.def(self, '$changeRulingPlanetDice', $BlindMythos_changeRulingPlanetDice$20 = function $$changeRulingPlanetDice(dice) {\n          var self = this;\n\n          \n          if (dice['$=='](10)) {\n            return 0};\n          return dice;\n        }, $BlindMythos_changeRulingPlanetDice$20.$$arity = 1);\n        \n        Opal.def(self, '$getDurtyTableCommandReuslt', $BlindMythos_getDurtyTableCommandReuslt$21 = function $$getDurtyTableCommandReuslt(command) {\n          var self = this, table = nil, dice1 = nil, dice2 = nil, index = nil;\n\n          \n          if ($truthy(/^DT$/i['$=~'](command))) {\n          } else {\n            return nil\n          };\n          table = \"\" + \"汚染チャートを２回振り、その効果を適用する（1・2-2,5・6-12 なら振り直す）\\n\" + \"ＰＣ全員の「トラウマ」「喪失」すべてに２ダメージ\\n\" + \"ＰＣ全員の「喪失」２つに４ダメージ\\n\" + \"ＰＣ全員の「トラウマ」すべてに２ダメージ。その後さらに汚染が２増える\\n\" + \"ＰＣ全員、１つの【記憶】の両方の値が０になる。このときアクロバットダイス獲得不可\\n\" + \"ＰＣ全員の「喪失」１つに４ダメージ。このときアクロバットダイス獲得不可\\n\" + \"ＰＣ全員の「トラウマ」すべてに１ダメージ。その後さらに汚染が３増える\\n\" + \"ＰＣ全員の「トラウマ」すべてに１ダメージ。その後アクロバットダイスをＰＣ人数分失う\\n\" + \"ＰＣ全員の「喪失」すべてに２ダメージ。禁書ビットをすべて失う\\n\" + \"ＰＣ全員の「トラウマ」２つに３ダメージ。その後さらに汚染が１増える\\n\" + \"ＰＣ全員の「トラウマ」「喪失」すべてに１ダメージ\\n\" + \"ＰＣ全員の「喪失」１つに４ダメージ。禁書ビットをすべて失う\\n\" + \"ＰＣ全員の「トラウマ」すべてに２ダメージ\\n\" + \"ＰＣ全員の１つの【記憶】の「トラウマ」「喪失」それぞれに３ダメージ\\n\" + \"ＰＣ全員の「喪失」すべてに１ダメージ\\n\" + \"ＰＣ全員の「トラウマ」３つに２ダメージ\\n\" + \"ＰＣ全員の「トラウマ」と「喪失」それぞれ１つに３ダメージ\\n\" + \"ＰＣ全員の「喪失」３つに２ダメージ\\n\" + \"ＰＣ全員のすべての「トラウマ」に1 ダメージ\\n\" + \"ＰＣ全員のひとつの【記憶】の「トラウマ」「喪失」それぞれに３ダメージ\\n\" + \"ＰＣ全員の「喪失」すべてに２ダメージ\\n\" + \"ＰＣ全員の「トラウマ」ひとつに４ダメージ。禁書ビットをすべて失う\\n\" + \"ＰＣ全員の「トラウマ」「喪失」すべてに１ダメージ\\n\" + \"ＰＣ全員の「喪失」２つに３ダメージ。その後さらに汚染が１増える\\n\" + \"ＰＣ全員の「トラウマ」すべてに２ダメージ。禁書ビットをすべて失う\\n\" + \"ＰＣ全員の「喪失」すべてに１ダメージ。その後アクロバットダイスをＰＣ人数分失う\\n\" + \"ＰＣ全員の「喪失」すべてに１ダメージ。その後さらに汚染が３増える\\n\" + \"ＰＣ全員の「トラウマ」１つに４ダメージ。このときアクロバットダイス獲得不可\\n\" + \"ＰＣ全員、１つの【記憶】の両方の値が０になる。このときアクロバットダイス獲得不可\\n\" + \"ＰＣ全員の「喪失」すべてに２ダメージ。その後さらに汚染が２増える\\n\" + \"ＰＣ全員の「トラウマ」２つに４ダメージ\\n\" + \"ＰＣ全員の「トラウマ」「喪失」すべてに２ダメージ\\n\" + \"汚染チャートを２回振り、その効果を適用する（1・2-2,5・6-12 なら振り直す）\\n\";\n          table = table.$split(\"\\n\");\n          dice1 = self.randomizer.$roll_once(6);\n          dice2 = self.randomizer.$roll_sum(2, 6);\n          index = $rb_minus($rb_plus($rb_times($rb_minus(dice2, 2), 3), $rb_divide(dice1, 2.0).$ceil()), 1);\n          return \"\" + \"汚染チャート(\" + (dice1) + \",\" + (dice2) + \") ＞ \" + (table['$[]'](index));\n        }, $BlindMythos_getDurtyTableCommandReuslt$21.$$arity = 1);\n        Opal.const_set($nesting[0], 'TABLES', $hash2([\"LE\", \"ESH\", \"ESA\", \"ESS\", \"ESP\", \"ESL\", \"ESE\"], {\"LE\": $$$($$($nesting, 'DiceTable'), 'Table').$new(\"失う感情表\", \"1D6\", [\"喜：喜びは消えた。嬉しい気持ちとは、なんだっただろう。\", \"怒：激情は失われ、憎しみもどこかへと消える。\", \"哀：どんなに辛くても、悲しさを感じない。どうやら涙も涸れたらしい。\", \"楽：もはや楽しいことなどない。希望を抱くだけ無駄なのだ。\", \"愛：愛など幻想……無力で儚い、役に立たない世迷い言だ。\", \"感：なにを見ても、感動はない。心は凍てついている。\"]), \"ESH\": $$$($$($nesting, 'DiceTable'), 'Table').$new(\"「喜」の感情後遺症表\", \"2D6\", [\"日々喜びを求めてしまう。\", \"日々喜びを求めてしまう。\", \"嬉しい時間が長続きしない。\", \"素直に喜びを共有できないことがある。\", \"小さなことで大きく喜びを感じる。\", \"小さなことで大きく喜びを感じる。\", \"影響なし。\", \"影響なし。\", \"「喜」の後遺症をひとつ消してもよい。\", \"「喜」の後遺症をひとつ消してもよい。\", \"「喜」の後遺症をひとつ消してもよい。\"]), \"ESA\": $$$($$($nesting, 'DiceTable'), 'Table').$new(\"「怒」の感情後遺症表\", \"2D6\", [\"始終不機嫌になる。\", \"始終不機嫌になる。\", \"一度怒ると、なかなか収まらない。\", \"怒りっぽくなる\", \"怒りかたが激しくなる。\", \"怒りかたが激しくなる。\", \"影響なし。\", \"影響なし。\", \"「怒」の後遺症をひとつ消してもよい。\", \"「怒」の後遺症をひとつ消してもよい。\", \"「怒」の後遺症をひとつ消してもよい。\"]), \"ESS\": $$$($$($nesting, 'DiceTable'), 'Table').$new(\"「哀」の感情後遺症表\", \"2D6\", [\"一度涙が出るとなかなか止まらない。\", \"一度涙が出るとなかなか止まらない。\", \"夜、哀しいことを思い出して目が覚める。\", \"不意に哀しい気持ちになる。\", \"涙もろくなる。\", \"涙もろくなる。\", \"影響なし。\", \"影響なし。\", \"「哀」の後遺症をひとつ消してもよい。\", \"「哀」の後遺症をひとつ消してもよい。\", \"「哀」の後遺症をひとつ消してもよい。\"]), \"ESP\": $$$($$($nesting, 'DiceTable'), 'Table').$new(\"「楽」の感情後遺症表\", \"2D6\", [\"突然陽気になったり、不意に笑い出してしまう。\", \"突然陽気になったり、不意に笑い出してしまう。\", \"周りが楽しくなさそうだと不安になる。\", \"楽しいことがないと落ち着かない。\", \"些細なことでも笑ってしまう。\", \"些細なことでも笑ってしまう。\", \"影響なし。\", \"影響なし。\", \"「楽」の後遺症をひとつ消してもよい。\", \"「楽」の後遺症をひとつ消してもよい。\", \"「楽」の後遺症をひとつ消してもよい。\"]), \"ESL\": $$$($$($nesting, 'DiceTable'), 'Table').$new(\"「愛」の感情後遺症表\", \"2D6\", [\"少しでも気になる相手に愛を求めてしまう。\", \"少しでも気になる相手に愛を求めてしまう。\", \"愛する相手（恋人・家族・ペット・空想）から離れたくない。\", \"誰彼構わず優しくしてしまう。\", \"ひとりでいると不安を感じる。\", \"ひとりでいると不安を感じる。\", \"影響なし。\", \"影響なし。\", \"「愛」の後遺症をひとつ消してもよい。\", \"「愛」の後遺症をひとつ消してもよい。\", \"「愛」の後遺症をひとつ消してもよい。\"]), \"ESE\": $$$($$($nesting, 'DiceTable'), 'Table').$new(\"「感」の感情後遺症表\", \"2D6\", [\"感動を共有できない相手を不信に思ってしまう。\", \"感動を共有できない相手を不信に思ってしまう。\", \"嬉しくても哀しくてもすぐに涙が出る。\", \"リアクションがオーバーになる。\", \"ちょっとしたことで感動する。\", \"ちょっとしたことで感動する。\", \"影響なし。\", \"影響なし。\", \"「感」の後遺症をひとつ消してもよい。\", \"「感」の後遺症をひとつ消してもよい。\", \"「感」の後遺症をひとつ消してもよい。\"])}).$freeze());\n        return self.$register_prefix(\"BM\", \"ReRoll\", \"RP\", \"DT\", $$($nesting, 'TABLES').$keys());\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n})(Opal);\n"],"sourceRoot":"webpack:///"}