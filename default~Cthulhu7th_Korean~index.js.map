{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/Cthulhu7th_Korean.js"],"names":["require","Opal","$rb_le","lhs","rhs","$rb_plus","$rb_times","$rb_ge","$rb_divide","$rb_lt","$rb_gt","$rb_minus","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$send2","send2","$range","range","$truthy","truthy","$send","send","$hash2","hash2","$base","$parent_nesting","concat","$super","$Cthulhu7th_Korean_initialize$1","$Cthulhu7th_Korean_eval_game_system_specific_command$2","$Cthulhu7th_Korean_getCheckResult$3","$Cthulhu7th_Korean_rollPercentD10$4","$Cthulhu7th_Korean_getTotalLists$5","$Cthulhu7th_Korean_getTotal$7","$Cthulhu7th_Korean_getCheckResultText$8","$Cthulhu7th_Korean_getCombineRoll$9","$Cthulhu7th_Korean_getFullAutoResult$10","$Cthulhu7th_Korean_rollFullAuto$11","$Cthulhu7th_Korean_getHitResultInfos$13","$Cthulhu7th_Korean_getHitResultText$14","$Cthulhu7th_Korean_getHitType$15","$Cthulhu7th_Korean_getBulletResults$16","$Cthulhu7th_Korean_getSuccessListImpaleBulletList$17","$Cthulhu7th_Korean_getNextDifficltyMessage$18","$Cthulhu7th_Korean_getSetOfBullet$19","$Cthulhu7th_Korean_getHitBulletCountBase$20","$Cthulhu7th_Korean_isLastBulletTurn$21","$Cthulhu7th_Korean_getLastHitBulletCount$22","$Cthulhu7th_Korean_getFumbleable$23","$$prototype","bonus_dice_range","randomizer","const_set","$register_prefix","def","$$initialize","command","$iter","$$p","$yield","find_super_dispatcher","$$arity","$$eval_game_system_specific_command","$case","$getCheckResult","$getCombineRoll","$getFullAutoResult","$$getCheckResult","bonus_dice_count","diff","output","units_digit","total_list","total","result_text","$last_match","$to_i","$min","$max","$rollPercentD10","$getTotalLists","$getTotal","$getCheckResultText","$join","$$rollPercentD10","dice","$roll_once","$$getTotalLists","$$6","tens_digit_count","$abs","$$s","bonus","$push","$$getTotal","$$getCheckResultText","fumbleable","fumble_text","$$getCombineRoll","diff_1","diff_2","result_1","result_2","successList","succesCount","rank","$debug","$$getFullAutoResult","bullet_count","broken_number","$ret_or_1","bullet_count_limit","$rollFullAuto","$$rollFullAuto","dice_num","$$12","loopCount","counts","more_difficlty","$a","$b","$c","hit_result","hit_type","hit_bullet","impale_bullet","lost_bullet","$writer","$getNextDifficltyMessage","$getHitResultInfos","to_ary","ret","$getHitResultText","$getHitType","$getBulletResults","to_a","$returner","returner","$v","$$getHitResultInfos","$getFumbleable","$$getHitResultText","$$getHitType","impaleBulletList","$getSuccessListImpaleBulletList","$$getBulletResults","bullet_set_count","hit_bullet_count_base","impale_bullet_count_base","lost_bullet_count","hit_bullet_count","impale_bullet_count","halfbull","$getSetOfBullet","$getHitBulletCountBase","$to_f","$isLastBulletTurn","$floor","$ceil","$getLastHitBulletCount","$$getSuccessListImpaleBulletList","$$getNextDifficltyMessage","$$getSetOfBullet","$ret_or_2","$$getHitBulletCountBase","$ret_or_3","$$isLastBulletTurn","$$getLastHitBulletCount","count","$$getFumbleable"],"mappings":"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","file":"default~Cthulhu7th_Korean~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send2 = Opal.send2, $range = Opal.range, $truthy = Opal.truthy, $send = Opal.send, $hash2 = Opal.hash2;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Cthulhu7th_Korean');\n\n        var $nesting = [self].concat($parent_nesting), $Cthulhu7th_Korean_initialize$1, $Cthulhu7th_Korean_eval_game_system_specific_command$2, $Cthulhu7th_Korean_getCheckResult$3, $Cthulhu7th_Korean_rollPercentD10$4, $Cthulhu7th_Korean_getTotalLists$5, $Cthulhu7th_Korean_getTotal$7, $Cthulhu7th_Korean_getCheckResultText$8, $Cthulhu7th_Korean_getCombineRoll$9, $Cthulhu7th_Korean_getFullAutoResult$10, $Cthulhu7th_Korean_rollFullAuto$11, $Cthulhu7th_Korean_getHitResultInfos$13, $Cthulhu7th_Korean_getHitResultText$14, $Cthulhu7th_Korean_getHitType$15, $Cthulhu7th_Korean_getBulletResults$16, $Cthulhu7th_Korean_getSuccessListImpaleBulletList$17, $Cthulhu7th_Korean_getNextDifficltyMessage$18, $Cthulhu7th_Korean_getSetOfBullet$19, $Cthulhu7th_Korean_getHitBulletCountBase$20, $Cthulhu7th_Korean_isLastBulletTurn$21, $Cthulhu7th_Korean_getLastHitBulletCount$22, $Cthulhu7th_Korean_getFumbleable$23;\n\n        self.$$prototype.bonus_dice_range = self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"Cthulhu7th:Korean\");\n        Opal.const_set($nesting[0], 'NAME', \"크툴루의 부름 7판\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"国際化:Korean:크툴루의 부름 7판\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・판정　CC(x)<=（목표치）\\n\" + \"　x：보너스, 패널티 주사위：Bonus/Penalty Dice (2~-2). 생략 가능.\\n\" + \"　대실패：Fumble／실패：Failure／보통 성공：Regular success／\\n\" + \"　어려운 성공：Hard success／대단한 성공：Extreme success／\\n\" + \"　대성공：Critical success　을 자동판정.\\n\" + \"예）CC<=30　CC(2)<=50　CC(-1)<=75\\n\" + \"\\n\" + \"・조합 판정　(CBR(x,y))\\n\" + \"　목표치 x 와 y 로 동시에 ％판정을 한다.\\n\" + \"　예）CBR(50,20)\\n\" + \"\\n\" + \"・연사(Full Auto)판정　FAR(w,x,y,z)\\n\" + \"　w：탄수(1~100), x：기능 수치(1~100), y：고장 넘버\\n\" + \"　z：보너스, 패널티 주사위(-2~2). 생략 가능.\\n\" + \"　명중수와 관통수, 잔탄수만을 계산. 데미지는 계산하지 않습니다.\\n\" + \"예）FAR(25,70,98)　FAR(50,80,98,-1)\\n\");\n        self.$register_prefix(\"CC\", \"CBR\", \"FAR\");\n        \n        Opal.def(self, '$initialize', $Cthulhu7th_Korean_initialize$1 = function $$initialize(command) {\n          var $iter = $Cthulhu7th_Korean_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $Cthulhu7th_Korean_initialize$1.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $Cthulhu7th_Korean_initialize$1, false, true), 'initialize', [command], null);\n          return (self.bonus_dice_range = $range(-2, 2, false));\n        }, $Cthulhu7th_Korean_initialize$1.$$arity = 1);\n        \n        Opal.def(self, '$eval_game_system_specific_command', $Cthulhu7th_Korean_eval_game_system_specific_command$2 = function $$eval_game_system_specific_command(command) {\n          var self = this, $case = nil;\n\n          \n          $case = command;\n          if (/CC/i['$===']($case)) {return self.$getCheckResult(command)}\n          else if (/CBR/i['$===']($case)) {return self.$getCombineRoll(command)}\n          else if (/FAR/i['$===']($case)) {return self.$getFullAutoResult(command)};\n          return nil;\n        }, $Cthulhu7th_Korean_eval_game_system_specific_command$2.$$arity = 1);\n        \n        Opal.def(self, '$getCheckResult', $Cthulhu7th_Korean_getCheckResult$3 = function $$getCheckResult(command) {\n          var self = this, bonus_dice_count = nil, diff = nil, output = nil, units_digit = nil, total_list = nil, total = nil, result_text = nil;\n\n          \n          if ($truthy(/^CC([-\\d]+)?<=(\\d+)/i['$=~'](command))) {\n          } else {\n            nil\n          };\n          bonus_dice_count = $$($nesting, 'Regexp').$last_match(1).$to_i();\n          diff = $$($nesting, 'Regexp').$last_match(2).$to_i();\n          if ($truthy($rb_le(diff, 0))) {\n            return \"에러. 목표치는 1 이상입니다.\"};\n          if ($truthy(self.bonus_dice_range['$include?'](bonus_dice_count))) {\n          } else {\n            return \"\" + \"에러. 보너스, 패널티 주사위의 수치는 \" + (self.bonus_dice_range.$min()) + \"~\" + (self.bonus_dice_range.$max()) + \"입니다.\"\n          };\n          output = \"\";\n          output = $rb_plus(output, \"\" + \"(1D100<=\" + (diff) + \")\");\n          output = $rb_plus(output, \"\" + \" 보너스, 패널티 주사위[\" + (bonus_dice_count) + \"]\");\n          units_digit = self.$rollPercentD10();\n          total_list = self.$getTotalLists(bonus_dice_count, units_digit);\n          total = self.$getTotal(total_list, bonus_dice_count);\n          result_text = self.$getCheckResultText(total, diff);\n          output = $rb_plus(output, \"\" + \" ＞ \" + (total_list.$join(\", \")) + \" ＞ \" + (total) + \" ＞ \" + (result_text));\n          return output;\n        }, $Cthulhu7th_Korean_getCheckResult$3.$$arity = 1);\n        \n        Opal.def(self, '$rollPercentD10', $Cthulhu7th_Korean_rollPercentD10$4 = function $$rollPercentD10() {\n          var self = this, dice = nil;\n\n          \n          dice = self.randomizer.$roll_once(10);\n          if (dice['$=='](10)) {\n            dice = 0};\n          return dice;\n        }, $Cthulhu7th_Korean_rollPercentD10$4.$$arity = 0);\n        \n        Opal.def(self, '$getTotalLists', $Cthulhu7th_Korean_getTotalLists$5 = function $$getTotalLists(bonus_dice_count, units_digit) {\n          var $$6, self = this, total_list = nil, tens_digit_count = nil;\n\n          \n          total_list = [];\n          tens_digit_count = $rb_plus(1, bonus_dice_count.$abs());\n          $send(tens_digit_count, 'times', [], ($$6 = function(){var self = $$6.$$s == null ? this : $$6.$$s, bonus = nil, total = nil;\n\n          \n            bonus = self.$rollPercentD10();\n            total = $rb_plus($rb_times(bonus, 10), units_digit);\n            if (total['$=='](0)) {\n              total = 100};\n            return total_list.$push(total);}, $$6.$$s = self, $$6.$$arity = 0, $$6));\n          return total_list;\n        }, $Cthulhu7th_Korean_getTotalLists$5.$$arity = 2);\n        \n        Opal.def(self, '$getTotal', $Cthulhu7th_Korean_getTotal$7 = function $$getTotal(total_list, bonus_dice_count) {\n          var self = this;\n\n          \n          if ($truthy($rb_ge(bonus_dice_count, 0))) {\n            return total_list.$min()};\n          return total_list.$max();\n        }, $Cthulhu7th_Korean_getTotal$7.$$arity = 2);\n        \n        Opal.def(self, '$getCheckResultText', $Cthulhu7th_Korean_getCheckResultText$8 = function $$getCheckResultText(total, diff, fumbleable) {\n          var self = this, fumble_text = nil;\n\n          \n          \n          if (fumbleable == null) {\n            fumbleable = false;\n          };\n          if ($truthy($rb_le(total, diff))) {\n            \n            if (total['$=='](1)) {\n              return \"대성공\"};\n            if ($truthy($rb_le(total, $rb_divide(diff, 5).$to_i()))) {\n              return \"대단한 성공\"};\n            if ($truthy($rb_le(total, $rb_divide(diff, 2).$to_i()))) {\n              return \"어려운 성공\"};\n            return \"보통 성공\";};\n          fumble_text = \"대실패\";\n          if (total['$=='](100)) {\n            return fumble_text};\n          if ($truthy($rb_ge(total, 96))) {\n            if ($truthy($rb_lt(diff, 50))) {\n              return fumble_text\n            } else if ($truthy(fumbleable)) {\n              return fumble_text}};\n          return \"실패\";\n        }, $Cthulhu7th_Korean_getCheckResultText$8.$$arity = -3);\n        \n        Opal.def(self, '$getCombineRoll', $Cthulhu7th_Korean_getCombineRoll$9 = function $$getCombineRoll(command) {\n          var self = this, diff_1 = nil, diff_2 = nil, total = nil, result_1 = nil, result_2 = nil, successList = nil, succesCount = nil, rank = nil;\n\n          \n          if ($truthy(/CBR\\((\\d+),(\\d+)\\)/i['$=~'](command))) {\n          } else {\n            return nil\n          };\n          diff_1 = $$($nesting, 'Regexp').$last_match(1).$to_i();\n          diff_2 = $$($nesting, 'Regexp').$last_match(2).$to_i();\n          total = self.randomizer.$roll_once(100);\n          result_1 = self.$getCheckResultText(total, diff_1);\n          result_2 = self.$getCheckResultText(total, diff_2);\n          successList = [\"대성공\", \"대단한 성공\", \"어려운 성공\", \"보통성공\"];\n          succesCount = 0;\n          if ($truthy(successList['$include?'](result_1))) {\n            succesCount = $rb_plus(succesCount, 1)};\n          if ($truthy(successList['$include?'](result_2))) {\n            succesCount = $rb_plus(succesCount, 1)};\n          self.$debug(\"succesCount\", succesCount);\n          rank = (function() {if ($truthy($rb_ge(succesCount, 2))) {\n            return \"성공\"\n          } else if (succesCount['$=='](1)) {\n            return \"부분적 성공\"\n          } else {\n            return \"실패\"\n          }; return nil; })();\n          return \"\" + \"(1d100<=\" + (diff_1) + \",\" + (diff_2) + \") ＞ \" + (total) + \"[\" + (result_1) + \",\" + (result_2) + \"] ＞ \" + (rank);\n        }, $Cthulhu7th_Korean_getCombineRoll$9.$$arity = 1);\n        \n        Opal.def(self, '$getFullAutoResult', $Cthulhu7th_Korean_getFullAutoResult$10 = function $$getFullAutoResult(command) {\n          var self = this, bullet_count = nil, diff = nil, broken_number = nil, bonus_dice_count = nil, $ret_or_1 = nil, output = nil, bullet_count_limit = nil;\n\n          \n          if ($truthy(/^FAR\\((-?\\d+)(,(-?\\d+))(,(-?\\d+))(,(-?\\d+))?\\)/i['$=~'](command))) {\n          } else {\n            return nil\n          };\n          bullet_count = $$($nesting, 'Regexp').$last_match(1).$to_i();\n          diff = $$($nesting, 'Regexp').$last_match(3).$to_i();\n          broken_number = $$($nesting, 'Regexp').$last_match(5).$to_i();\n          bonus_dice_count = (function() {if ($truthy(($ret_or_1 = $$($nesting, 'Regexp').$last_match(7)))) {\n            return $ret_or_1\n          } else {\n            return 0\n          }; return nil; })().$to_i();\n          output = \"\";\n          bullet_count_limit = 100;\n          if ($truthy($rb_gt(bullet_count, bullet_count_limit))) {\n            \n            output = $rb_plus(output, \"\" + \"\\n탄약이 너무 많습니다. 장전된 탄약을 \" + (bullet_count_limit) + \"개로 변경합니다.\\n\");\n            bullet_count = bullet_count_limit;};\n          if ($truthy($rb_le(bullet_count, 0))) {\n            return \"탄약은 1 이상입니다.\"};\n          if ($truthy($rb_le(diff, 0))) {\n            return \"목표치는 1 이상입니다.\"};\n          if ($truthy($rb_lt(broken_number, 0))) {\n            \n            output = $rb_plus(output, \"\\n고장 넘버는 1 이상입니다. 마이너스 기호를 제거합니다.\\n\");\n            broken_number = broken_number.$abs();};\n          if ($truthy(self.bonus_dice_range['$include?'](bonus_dice_count))) {\n          } else {\n            return \"\" + \"\\n에러. 보너스, 패널티 주사위의 수치는 \" + (self.bonus_dice_range.$min()) + \"~\" + (self.bonus_dice_range.$max()) + \"입니다.\"\n          };\n          output = $rb_plus(output, \"\" + \"보너스, 패널티 주사위 [\" + (bonus_dice_count) + \"]\");\n          output = $rb_plus(output, self.$rollFullAuto(bullet_count, diff, broken_number, bonus_dice_count));\n          return output;\n        }, $Cthulhu7th_Korean_getFullAutoResult$10.$$arity = 1);\n        \n        Opal.def(self, '$rollFullAuto', $Cthulhu7th_Korean_rollFullAuto$11 = function $$rollFullAuto(bullet_count, diff, broken_number, dice_num) {try {\n\n          var $$12, self = this, output = nil, loopCount = nil, counts = nil;\n\n          \n          output = \"\";\n          loopCount = 0;\n          counts = $hash2([\"hit_bullet\", \"impale_bullet\", \"bullet\"], {\"hit_bullet\": 0, \"impale_bullet\": 0, \"bullet\": bullet_count});\n          $send($range(0, 3, false), 'each', [], ($$12 = function(more_difficlty){var self = $$12.$$s == null ? this : $$12.$$s, $a, $b, $c, hit_result = nil, total = nil, total_list = nil, hit_type = nil, hit_bullet = nil, impale_bullet = nil, lost_bullet = nil, $writer = nil;\n            if (self.bonus_dice_range == null) self.bonus_dice_range = nil;\n\n          \n            \n            if (more_difficlty == null) {\n              more_difficlty = nil;\n            };\n            output = $rb_plus(output, self.$getNextDifficltyMessage(more_difficlty));\n            while ($truthy($rb_ge(dice_num, self.bonus_dice_range.$min()))) {\n              \n              loopCount = $rb_plus(loopCount, 1);\n              $c = self.$getHitResultInfos(dice_num, diff, more_difficlty), $b = Opal.to_ary($c), (hit_result = ($b[0] == null ? nil : $b[0])), (total = ($b[1] == null ? nil : $b[1])), (total_list = ($b[2] == null ? nil : $b[2])), $c;\n              output = $rb_plus(output, \"\" + \"\\n\" + (loopCount) + \"번째: ＞ \" + (total_list.$join(\", \")) + \" ＞ \" + (hit_result));\n              if ($truthy($rb_ge(total, broken_number))) {\n                \n                output = $rb_plus(output, \" 총알 걸림\");\n                Opal.ret(self.$getHitResultText(output, counts));};\n              hit_type = self.$getHitType(more_difficlty, hit_result);\n              $c = self.$getBulletResults(counts['$[]'](\"bullet\"), hit_type, diff), $b = Opal.to_ary($c), (hit_bullet = ($b[0] == null ? nil : $b[0])), (impale_bullet = ($b[1] == null ? nil : $b[1])), (lost_bullet = ($b[2] == null ? nil : $b[2])), $c;\n              \n              $writer = [\"hit_bullet\", $rb_plus(counts['$[]'](\"hit_bullet\"), hit_bullet)];\n              $send(counts, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [\"impale_bullet\", $rb_plus(counts['$[]'](\"impale_bullet\"), impale_bullet)];\n              $send(counts, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [\"bullet\", $rb_minus(counts['$[]'](\"bullet\"), lost_bullet)];\n              $send(counts, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              if ($truthy($rb_le(counts['$[]'](\"bullet\"), 0))) {\n                Opal.ret(self.$getHitResultText(output, counts))};\n              dice_num = $rb_minus(dice_num, 1);\n            };\n            return (dice_num = $rb_plus(dice_num, 1));}, $$12.$$s = self, $$12.$$arity = 1, $$12));\n          return self.$getHitResultText(output, counts);\n          } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n        }, $Cthulhu7th_Korean_rollFullAuto$11.$$arity = 4);\n        \n        Opal.def(self, '$getHitResultInfos', $Cthulhu7th_Korean_getHitResultInfos$13 = function $$getHitResultInfos(dice_num, diff, more_difficlty) {\n          var self = this, units_digit = nil, total_list = nil, total = nil, fumbleable = nil, hit_result = nil;\n\n          \n          units_digit = self.$rollPercentD10();\n          total_list = self.$getTotalLists(dice_num, units_digit);\n          total = self.$getTotal(total_list, dice_num);\n          fumbleable = self.$getFumbleable(more_difficlty);\n          hit_result = self.$getCheckResultText(total, diff, fumbleable);\n          return [hit_result, total, total_list];\n        }, $Cthulhu7th_Korean_getHitResultInfos$13.$$arity = 3);\n        \n        Opal.def(self, '$getHitResultText', $Cthulhu7th_Korean_getHitResultText$14 = function $$getHitResultText(output, counts) {\n          var self = this;\n\n          return \"\" + (output) + \"\\n＞ \" + (counts['$[]'](\"hit_bullet\")) + \"발이 명중, \" + (counts['$[]'](\"impale_bullet\")) + \"발이 관통, 잔탄 \" + (counts['$[]'](\"bullet\")) + \"발\"\n        }, $Cthulhu7th_Korean_getHitResultText$14.$$arity = 2);\n        \n        Opal.def(self, '$getHitType', $Cthulhu7th_Korean_getHitType$15 = function $$getHitType(more_difficlty, hit_result) {\n          var $a, $b, self = this, successList = nil, impaleBulletList = nil;\n\n          \n          $b = self.$getSuccessListImpaleBulletList(more_difficlty), $a = Opal.to_ary($b), (successList = ($a[0] == null ? nil : $a[0])), (impaleBulletList = ($a[1] == null ? nil : $a[1])), $b;\n          if ($truthy(successList['$include?'](hit_result))) {\n            return \"hit\"};\n          if ($truthy(impaleBulletList['$include?'](hit_result))) {\n            return \"impale\"};\n          return \"\";\n        }, $Cthulhu7th_Korean_getHitType$15.$$arity = 2);\n        \n        Opal.def(self, '$getBulletResults', $Cthulhu7th_Korean_getBulletResults$16 = function $$getBulletResults(bullet_count, hit_type, diff) {\n          var self = this, bullet_set_count = nil, hit_bullet_count_base = nil, impale_bullet_count_base = nil, lost_bullet_count = nil, hit_bullet_count = nil, impale_bullet_count = nil, $case = nil, halfbull = nil;\n\n          \n          bullet_set_count = self.$getSetOfBullet(diff);\n          hit_bullet_count_base = self.$getHitBulletCountBase(diff, bullet_set_count);\n          impale_bullet_count_base = $rb_divide(bullet_set_count, (2).$to_f());\n          lost_bullet_count = 0;\n          hit_bullet_count = 0;\n          impale_bullet_count = 0;\n          if ($truthy(self.$isLastBulletTurn(bullet_count, bullet_set_count)['$!']())) {\n            \n            $case = hit_type;\n            if (\"hit\"['$===']($case)) {hit_bullet_count = hit_bullet_count_base}\n            else if (\"impale\"['$===']($case)) {\n            hit_bullet_count = impale_bullet_count_base.$floor();\n            impale_bullet_count = impale_bullet_count_base.$ceil();};\n            lost_bullet_count = bullet_set_count;\n          } else {\n            \n            $case = hit_type;\n            if (\"hit\"['$===']($case)) {hit_bullet_count = self.$getLastHitBulletCount(bullet_count)}\n            else if (\"impale\"['$===']($case)) {\n            halfbull = $rb_divide(bullet_count, (2).$to_f());\n            hit_bullet_count = halfbull.$floor();\n            impale_bullet_count = halfbull.$ceil();};\n            lost_bullet_count = bullet_count;\n          };\n          return [hit_bullet_count.$to_i(), impale_bullet_count.$to_i(), lost_bullet_count.$to_i()];\n        }, $Cthulhu7th_Korean_getBulletResults$16.$$arity = 3);\n        \n        Opal.def(self, '$getSuccessListImpaleBulletList', $Cthulhu7th_Korean_getSuccessListImpaleBulletList$17 = function $$getSuccessListImpaleBulletList(more_difficlty) {\n          var self = this, successList = nil, impaleBulletList = nil, $case = nil;\n\n          \n          successList = [];\n          impaleBulletList = [];\n          $case = more_difficlty;\n          if ((0)['$===']($case)) {\n          successList = [\"어려운 성공\", \"보통 성공\"];\n          impaleBulletList = [\"대성공\", \"대단한 성공\"];}\n          else if ((1)['$===']($case)) {\n          successList = [\"어려운 성공\"];\n          impaleBulletList = [\"대성공\", \"대단한 성공\"];}\n          else if ((2)['$===']($case)) {\n          successList = [];\n          impaleBulletList = [\"대성공\", \"대단한 성공\"];}\n          else if ((3)['$===']($case)) {\n          successList = [\"대성공\"];\n          impaleBulletList = [];};\n          return [successList, impaleBulletList];\n        }, $Cthulhu7th_Korean_getSuccessListImpaleBulletList$17.$$arity = 1);\n        \n        Opal.def(self, '$getNextDifficltyMessage', $Cthulhu7th_Korean_getNextDifficltyMessage$18 = function $$getNextDifficltyMessage(more_difficlty) {\n          var self = this, $case = nil;\n\n          \n          $case = more_difficlty;\n          if ((1)['$===']($case)) {return \"\\n    난이도가 어려운 성공으로 변경\"}\n          else if ((2)['$===']($case)) {return \"\\n    난이도가 대단한 성공으로 변경\"}\n          else if ((3)['$===']($case)) {return \"\\n    난이도가 대성공으로 변경\"};\n          return \"\";\n        }, $Cthulhu7th_Korean_getNextDifficltyMessage$18.$$arity = 1);\n        \n        Opal.def(self, '$getSetOfBullet', $Cthulhu7th_Korean_getSetOfBullet$19 = function $$getSetOfBullet(diff) {\n          var self = this, bullet_set_count = nil, $ret_or_2 = nil;\n\n          \n          bullet_set_count = $rb_divide(diff, 10).$to_i();\n          if ($truthy((function() {if ($truthy(($ret_or_2 = $rb_ge(diff, 1)))) {\n            \n            return $rb_lt(diff, 10);\n          } else {\n            return $ret_or_2\n          }; return nil; })())) {\n            bullet_set_count = 1};\n          return bullet_set_count;\n        }, $Cthulhu7th_Korean_getSetOfBullet$19.$$arity = 1);\n        \n        Opal.def(self, '$getHitBulletCountBase', $Cthulhu7th_Korean_getHitBulletCountBase$20 = function $$getHitBulletCountBase(diff, bullet_set_count) {\n          var self = this, hit_bullet_count_base = nil, $ret_or_3 = nil;\n\n          \n          hit_bullet_count_base = $rb_divide(bullet_set_count, 2).$to_i();\n          if ($truthy((function() {if ($truthy(($ret_or_3 = $rb_ge(diff, 1)))) {\n            \n            return $rb_lt(diff, 10);\n          } else {\n            return $ret_or_3\n          }; return nil; })())) {\n            hit_bullet_count_base = 1};\n          return hit_bullet_count_base;\n        }, $Cthulhu7th_Korean_getHitBulletCountBase$20.$$arity = 2);\n        \n        Opal.def(self, '$isLastBulletTurn', $Cthulhu7th_Korean_isLastBulletTurn$21 = function $$isLastBulletTurn(bullet_count, bullet_set_count) {\n          var self = this;\n\n          return $rb_lt($rb_minus(bullet_count, bullet_set_count), 0)\n        }, $Cthulhu7th_Korean_isLastBulletTurn$21.$$arity = 2);\n        \n        Opal.def(self, '$getLastHitBulletCount', $Cthulhu7th_Korean_getLastHitBulletCount$22 = function $$getLastHitBulletCount(bullet_count) {\n          var self = this, count = nil;\n\n          \n          if (bullet_count['$=='](1)) {\n            return 1};\n          count = $rb_divide(bullet_count, (2).$to_f()).$floor();\n          return count;\n        }, $Cthulhu7th_Korean_getLastHitBulletCount$22.$$arity = 1);\n        return (Opal.def(self, '$getFumbleable', $Cthulhu7th_Korean_getFumbleable$23 = function $$getFumbleable(more_difficlty) {\n          var self = this;\n\n          return $rb_ge(more_difficlty, 1)\n        }, $Cthulhu7th_Korean_getFumbleable$23.$$arity = 1), nil) && 'getFumbleable';\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n})(Opal);\n"],"sourceRoot":"webpack:///"}