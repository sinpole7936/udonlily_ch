{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/CthulhuTech.js"],"names":["require","Opal","modules","self","top","$nesting","nil","$$$","$$","$module","module","$hash2","hash2","$truthy","truthy","$base","$parent_nesting","concat","$eval$1","def","expr","$kwargs","round_type","$ret_or_1","$$is_hash","ArgumentError","$new","$$smap","$eval","$$arity","get_singleton_class","$rb_ge","lhs","rhs","$rb_divide","$rb_plus","$rb_minus","$rb_lt","$rb_gt","$klass","klass","$send","send","$send2","send2","$require","$super","$CthulhuTech_initialize$10","$CthulhuTech_eval_game_system_specific_command$11","$CthulhuTech_parse$12","$$prototype","randomizer","$register_prefix","const_set","$Test_initialize$1","$Test_execute$2","$Test_expression$3","$Test_test_value_expression$4","$Test_result_str$5","$Test_calculate_roll_result$6","$Test_sum_of_largest_straight$7","num","modifier","difficulty","$$initialize","$$execute","dice_values","fumble","sorted_dice_values","roll_result","test_value","diff","success","critical","output_parts","$roll_barabara","$count","$length","$to_i","$sort","$calculate_roll_result","$class","$expression","$test_value_expression","$result_str","$join","$private","$$expression","modifier_str","$modifier","$$test_value_expression","dice_str","$$result_str","_diff","$$calculate_roll_result","highest_single_roll","sum_of_highest_set_of_multiples","candidates","$last","$to_proc","$values","$max","$sum_of_largest_straight","$$sum_of_largest_straight","$$8","max_sum","n_consecutive_values","sum","last","$uniq","value","$$s","$ret_or_2","$Contest_result_str$9","_fumble","_critical","$iter","$$p","$yield","formatted","damage_roll_num","damage_roll","$zuper","$zuper_i","$zuper_ii","arguments","length","Array","find_super_dispatcher","$ceil","command","sort_add_dice","$$eval_game_system_specific_command","node","$parse","$execute","$freeze","$$parse","m","node_class","$match"],"mappings":"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","file":"default~CthulhuTech~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/arithmetic_evaluator\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'ArithmeticEvaluator');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $eval$1;\n\n        return (Opal.def(self, '$eval', $eval$1 = function(expr, $kwargs) {\n          var round_type, self = this, $ret_or_1 = nil;\n\n          \n          \n          if ($kwargs == null) {\n            $kwargs = $hash2([], {});\n          } else if (!$kwargs.$$is_hash) {\n            throw Opal.ArgumentError.$new('expected kwargs');\n          };\n          \n          round_type = $kwargs.$$smap[\"round_type\"];\n          if (round_type == null) {\n            round_type = $$$($$($nesting, 'RoundType'), 'FLOOR')\n          };\n          if ($truthy(expr)) {\n          } else {\n            return 0\n          };\n          if ($truthy(($ret_or_1 = $$($nesting, 'Arithmetic').$eval(expr, round_type)))) {\n            return $ret_or_1\n          } else {\n            return 0\n          };\n        }, $eval$1.$$arity = -2), nil) && 'eval'\n      })(Opal.get_singleton_class(self), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send, $send2 = Opal.send2;\n\n  \n  self.$require(\"bcdice/arithmetic_evaluator\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'CthulhuTech');\n\n        var $nesting = [self].concat($parent_nesting), $CthulhuTech_initialize$10, $CthulhuTech_eval_game_system_specific_command$11, $CthulhuTech_parse$12;\n\n        self.$$prototype.randomizer = nil;\n        \n        self.$register_prefix(\"\\\\d+D10\");\n        Opal.const_set($nesting[0], 'ID', \"CthulhuTech\");\n        Opal.const_set($nesting[0], 'NAME', \"クトゥルフテック\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"くとうるふてつく\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・行為判定（test）：nD10+m>=d\\n\" + \"　n個のダイスを使用して、修正値m、難易度dで行為判定（test）を行います。\\n\" + \"　修正値mは省略可能、複数指定可能（例：+2-4）です。\\n\" + \"　成功、失敗、クリティカル、ファンブルを自動判定します。\\n\" + \"　例）2D10>=12　4D10+2>=28　5D10+2-4>=32\\n\" + \"\\n\" + \"・対抗判定（contest）：nD10+m>d\\n\" + \"　行為判定と同様ですが、防御側有利のため「>=」ではなく「>」を入力します。\\n\" + \"　ダメージダイスも表示します。\\n\");\n        (function($base, $super, $parent_nesting) {\n          var self = $klass($base, $super, 'Test');\n\n          var $nesting = [self].concat($parent_nesting), $Test_initialize$1, $Test_execute$2, $Test_expression$3, $Test_test_value_expression$4, $Test_result_str$5, $Test_calculate_roll_result$6, $Test_sum_of_largest_straight$7;\n\n          self.$$prototype.num = self.$$prototype.modifier = self.$$prototype.difficulty = nil;\n          \n          Opal.const_set($nesting[0], 'COMPARE_OP', \">=\");\n          \n          Opal.def(self, '$initialize', $Test_initialize$1 = function $$initialize(num, modifier, difficulty) {\n            var self = this;\n\n            \n            self.num = num;\n            self.modifier = modifier;\n            return (self.difficulty = difficulty);\n          }, $Test_initialize$1.$$arity = 3);\n          \n          Opal.def(self, '$execute', $Test_execute$2 = function $$execute(randomizer) {\n            var self = this, dice_values = nil, fumble = nil, sorted_dice_values = nil, roll_result = nil, test_value = nil, diff = nil, success = nil, $ret_or_1 = nil, critical = nil, output_parts = nil;\n\n            \n            dice_values = randomizer.$roll_barabara(self.num, 10);\n            fumble = $rb_ge(dice_values.$count(1), $rb_divide($rb_plus(dice_values.$length(), 1), 2).$to_i());\n            sorted_dice_values = dice_values.$sort();\n            roll_result = self.$calculate_roll_result(sorted_dice_values);\n            test_value = $rb_plus(roll_result, self.modifier);\n            diff = $rb_minus(test_value, self.difficulty);\n            success = (function() {if ($truthy(($ret_or_1 = fumble['$!']()))) {\n              return diff.$send($$$(self.$class(), 'COMPARE_OP'), 0)\n            } else {\n              return $ret_or_1\n            }; return nil; })();\n            critical = $rb_ge(diff, 10);\n            output_parts = [\"\" + \"(\" + (self.$expression()) + \")\", self.$test_value_expression(sorted_dice_values, roll_result), test_value, self.$result_str(success, fumble, critical, diff)];\n            return output_parts.$join(\" ＞ \");\n          }, $Test_execute$2.$$arity = 1);\n          self.$private();\n          \n          Opal.def(self, '$expression', $Test_expression$3 = function $$expression() {\n            var self = this, modifier_str = nil;\n\n            \n            modifier_str = $$($nesting, 'Format').$modifier(self.modifier);\n            return \"\" + (self.num) + \"D10\" + (modifier_str) + ($$$(self.$class(), 'COMPARE_OP')) + (self.difficulty);\n          }, $Test_expression$3.$$arity = 0);\n          \n          Opal.def(self, '$test_value_expression', $Test_test_value_expression$4 = function $$test_value_expression(dice_values, roll_result) {\n            var self = this, dice_str = nil, modifier_str = nil;\n\n            \n            dice_str = dice_values.$join(\",\");\n            modifier_str = $$($nesting, 'Format').$modifier(self.modifier);\n            return \"\" + (roll_result) + \"[\" + (dice_str) + \"]\" + (modifier_str);\n          }, $Test_test_value_expression$4.$$arity = 2);\n          \n          Opal.def(self, '$result_str', $Test_result_str$5 = function $$result_str(success, fumble, critical, _diff) {\n            var self = this;\n\n            \n            if ($truthy(fumble)) {\n              return \"ファンブル\"};\n            if ($truthy(critical)) {\n              return \"クリティカル\"};\n            return (function() {if ($truthy(success)) {\n              return \"成功\"\n            } else {\n              return \"失敗\"\n            }; return nil; })();\n          }, $Test_result_str$5.$$arity = 4);\n          \n          Opal.def(self, '$calculate_roll_result', $Test_calculate_roll_result$6 = function $$calculate_roll_result(sorted_dice_values) {\n            var self = this, highest_single_roll = nil, sum_of_highest_set_of_multiples = nil, candidates = nil;\n\n            \n            highest_single_roll = sorted_dice_values.$last();\n            sum_of_highest_set_of_multiples = $send($send(sorted_dice_values, 'group_by', [], \"itself\".$to_proc()).$values(), 'map', [], \"sum\".$to_proc()).$max();\n            candidates = [highest_single_roll, sum_of_highest_set_of_multiples, self.$sum_of_largest_straight(sorted_dice_values)];\n            return candidates.$max();\n          }, $Test_calculate_roll_result$6.$$arity = 1);\n          return (Opal.def(self, '$sum_of_largest_straight', $Test_sum_of_largest_straight$7 = function $$sum_of_largest_straight(sorted_dice_values) {\n            var $$8, self = this, max_sum = nil, n_consecutive_values = nil, sum = nil, last = nil;\n\n            \n            if ($truthy($rb_lt(sorted_dice_values.$length(), 3))) {\n              return 0};\n            max_sum = 0;\n            n_consecutive_values = 0;\n            sum = 0;\n            last = -1;\n            $send(sorted_dice_values.$uniq(), 'each', [], ($$8 = function(value){var self = $$8.$$s == null ? this : $$8.$$s, $ret_or_2 = nil;\n\n            \n              \n              if (value == null) {\n                value = nil;\n              };\n              if ($truthy($rb_gt($rb_minus(value, last), 1))) {\n                \n                n_consecutive_values = 1;\n                sum = value;\n                last = value;\n                return nil;;};\n              n_consecutive_values = $rb_plus(n_consecutive_values, 1);\n              sum = $rb_plus(sum, value);\n              last = value;\n              if ($truthy((function() {if ($truthy(($ret_or_2 = $rb_ge(n_consecutive_values, 3)))) {\n                return $rb_gt(sum, max_sum)\n              } else {\n                return $ret_or_2\n              }; return nil; })())) {\n                return (max_sum = sum)\n              } else {\n                return nil\n              };}, $$8.$$s = self, $$8.$$arity = 1, $$8));\n            return max_sum;\n          }, $Test_sum_of_largest_straight$7.$$arity = 1), nil) && 'sum_of_largest_straight';\n        })($nesting[0], null, $nesting);\n        (function($base, $super, $parent_nesting) {\n          var self = $klass($base, $super, 'Contest');\n\n          var $nesting = [self].concat($parent_nesting), $Contest_result_str$9;\n\n          \n          Opal.const_set($nesting[0], 'COMPARE_OP', \">\");\n          return (Opal.def(self, '$result_str', $Contest_result_str$9 = function $$result_str(success, _fumble, _critical, diff) {\n            var $iter = $Contest_result_str$9.$$p, $yield = $iter || nil, self = this, formatted = nil, damage_roll_num = nil, damage_roll = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n            if ($iter) $Contest_result_str$9.$$p = null;\n            // Prepare super implicit arguments\n            for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n              $zuper[$zuper_i] = arguments[$zuper_i];\n            }\n            \n            formatted = $send2(self, Opal.find_super_dispatcher(self, 'result_str', $Contest_result_str$9, false, true), 'result_str', $zuper, $iter);\n            if ($truthy(success)) {\n              \n              damage_roll_num = $rb_divide(diff, 5.0).$ceil();\n              damage_roll = \"\" + (damage_roll_num) + \"D10\";\n              return \"\" + (formatted) + \"（ダメージ：\" + (damage_roll) + \"）\";\n            } else {\n              return formatted\n            };\n          }, $Contest_result_str$9.$$arity = 4), nil) && 'result_str';\n        })($nesting[0], $$($nesting, 'Test'), $nesting);\n        \n        Opal.def(self, '$initialize', $CthulhuTech_initialize$10 = function $$initialize(command) {\n          var $iter = $CthulhuTech_initialize$10.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $CthulhuTech_initialize$10.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $CthulhuTech_initialize$10, false, true), 'initialize', [command], null);\n          return (self.sort_add_dice = true);\n        }, $CthulhuTech_initialize$10.$$arity = 1);\n        \n        Opal.def(self, '$eval_game_system_specific_command', $CthulhuTech_eval_game_system_specific_command$11 = function $$eval_game_system_specific_command(command) {\n          var self = this, node = nil;\n\n          \n          node = self.$parse(command);\n          if ($truthy(node)) {\n          } else {\n            return nil\n          };\n          return node.$execute(self.randomizer);\n        }, $CthulhuTech_eval_game_system_specific_command$11.$$arity = 1);\n        self.$private();\n        Opal.const_set($nesting[0], 'TEST_RE', /^(\\d+)D10((?:[-+]\\d+)+)?(>=?)(\\d+)$/.$freeze());\n        return (Opal.def(self, '$parse', $CthulhuTech_parse$12 = function $$parse(command) {\n          var self = this, m = nil, num = nil, modifier = nil, node_class = nil, difficulty = nil;\n\n          \n          m = $$($nesting, 'TEST_RE').$match(command);\n          if ($truthy(m)) {\n          } else {\n            return nil\n          };\n          num = m['$[]'](1).$to_i();\n          modifier = (function() {if ($truthy(m['$[]'](2))) {\n            return $$($nesting, 'ArithmeticEvaluator').$eval(m['$[]'](2))\n          } else {\n            return 0\n          }; return nil; })();\n          node_class = (function() {if (m['$[]'](3)['$=='](\">\")) {\n            return $$($nesting, 'Contest')\n          } else {\n            return $$($nesting, 'Test')\n          }; return nil; })();\n          difficulty = m['$[]'](4).$to_i();\n          return node_class.$new(num, modifier, difficulty);\n        }, $CthulhuTech_parse$12.$$arity = 1), nil) && 'parse';\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n})(Opal);\n"],"sourceRoot":"webpack:///"}