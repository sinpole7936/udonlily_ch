{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/Cthulhu_ChineseTraditional.js"],"names":["require","Opal","modules","self","top","$nesting","nil","$$$","$$","$module","module","$hash2","hash2","$truthy","truthy","$base","$parent_nesting","concat","$eval$1","def","expr","$kwargs","round_type","$ret_or_1","$$is_hash","ArgumentError","$new","$$smap","$eval","$$arity","get_singleton_class","$rb_le","lhs","rhs","$rb_gt","$rb_plus","$rb_minus","$rb_divide","$rb_times","$rb_lt","$rb_ge","$klass","klass","$send2","send2","$send","send","$require","$super","$Cthulhu_initialize$1","$Cthulhu_eval_game_system_specific_command$2","$Cthulhu_getCheckResult$3","$Cthulhu_compare$9","$Cthulhu_getRegistResult$10","$Cthulhu_getCombineRoll$12","$$prototype","randomizer","locale","special_percentage","critical_percentage","fumble_percentage","const_set","$register_prefix","$$initialize","command","$iter","$$p","$yield","find_super_dispatcher","$$eval_game_system_specific_command","$case","$getCheckResult","$getRegistResult","$getCombineRoll","$private","$$getCheckResult","$$4","m","broken_num","diff","total","compare_result","$match","$to_i","$roll_once","$translate","$compare","$to_result","r","$$s","$writer","$text","to_a","$CompareResult_initialize$5","$CompareResult_text$6","$CompareResult_to_result$7","$include","$attr_accessor","success","failure","critical","fumble","special","broke","$$text","$ret_or_2","$critical","$special","$success","$broken","$fumble","$failure","$$to_result","$$8","$$compare","target","broken_number","result","target_special","$ret_or_3","$ret_or_4","$clamp","$$getRegistResult","$$11","value","total_n","$$getCombineRoll","$$13","diff_1","diff_2","result_1","result_2","rank","$ret_or_5","$ret_or_6","$ret_or_7","$ret_or_8","$ret_or_9","$Cthulhu_ChineseTraditional_initialize$1","$register_prefix_from_super_class"],"mappings":";;;;;;;;;AAAAA,mBAAO,CAAC,uBAAD,CAAP;AAEA;;;AACAC,IAAI,CAACC,OAAL,CAAa,6BAAb,IAA8C,UAASD,IAAT,EAAe;AAC3D,MAAIE,IAAI,GAAGF,IAAI,CAACG,GAAhB;AAAA,MAAqBC,QAAQ,GAAG,EAAhC;AAAA,MAAoCC,GAAG,GAAGL,IAAI,CAACK,GAA/C;AAAA,MAAoDC,GAAG,GAAGN,IAAI,CAACM,GAA/D;AAAA,MAAoEC,EAAE,GAAGP,IAAI,CAACO,EAA9E;AAAA,MAAkFC,OAAO,GAAGR,IAAI,CAACS,MAAjG;AAAA,MAAyGC,MAAM,GAAGV,IAAI,CAACW,KAAvH;AAAA,MAA8HC,OAAO,GAAGZ,IAAI,CAACa,MAA7I;AAEA,SAAQ,UAASC,KAAT,EAAgBC,eAAhB,EAAiC;AACvC,QAAIb,IAAI,GAAGM,OAAO,CAACM,KAAD,EAAQ,QAAR,CAAlB;AAEA,QAAIV,QAAQ,GAAG,CAACF,IAAD,EAAOc,MAAP,CAAcD,eAAd,CAAf;;AAEA,KAAC,UAASD,KAAT,EAAgBC,eAAhB,EAAiC;AAChC,UAAIb,IAAI,GAAGM,OAAO,CAACM,KAAD,EAAQ,qBAAR,CAAlB;AAEA,UAAIV,QAAQ,GAAG,CAACF,IAAD,EAAOc,MAAP,CAAcD,eAAd,CAAf;;AAEA,OAAC,UAASb,IAAT,EAAea,eAAf,EAAgC;AAC/B,YAAIX,QAAQ,GAAG,CAACF,IAAD,EAAOc,MAAP,CAAcD,eAAd,CAAf;AAAA,YAA+CE,OAA/C;AAEA,eAAO,CAACjB,IAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,OAAf,EAAwBe,OAAO,GAAG,iBAASE,IAAT,EAAeC,OAAf,EAAwB;AAChE,cAAIC,UAAJ;AAAA,cAAgBnB,IAAI,GAAG,IAAvB;AAAA,cAA6BoB,SAAS,GAAGjB,GAAzC;;AAIA,cAAIe,OAAO,IAAI,IAAf,EAAqB;AACnBA,mBAAO,GAAGV,MAAM,CAAC,EAAD,EAAK,EAAL,CAAhB;AACD,WAFD,MAEO,IAAI,CAACU,OAAO,CAACG,SAAb,EAAwB;AAC7B,kBAAMvB,IAAI,CAACwB,aAAL,CAAmBC,IAAnB,CAAwB,iBAAxB,CAAN;AACD;;AAAA;AAEDJ,oBAAU,GAAGD,OAAO,CAACM,MAAR,CAAe,YAAf,CAAb;;AACA,cAAIL,UAAU,IAAI,IAAlB,EAAwB;AACtBA,sBAAU,GAAGf,GAAG,CAACC,EAAE,CAACH,QAAD,EAAW,WAAX,CAAH,EAA4B,OAA5B,CAAhB;AACD;;AAAA;;AACD,cAAIQ,OAAO,CAACO,IAAD,CAAX,EAAmB,CAClB,CADD,MACO;AACL,mBAAO,CAAP;AACD;;AAAA;;AACD,cAAIP,OAAO,CAAEU,SAAS,GAAGf,EAAE,CAACH,QAAD,EAAW,YAAX,CAAF,CAA2BuB,KAA3B,CAAiCR,IAAjC,EAAuCE,UAAvC,CAAd,CAAX,EAA+E;AAC7E,mBAAOC,SAAP;AACD,WAFD,MAEO;AACL,mBAAO,CAAP;AACD;;AAAA;AACF,SAxBO,EAwBLL,OAAO,CAACW,OAAR,GAAkB,CAAC,CAxBd,GAwBkBvB,GAxBnB,KAwB2B,MAxBlC;AAyBD,OA5BD,EA4BGL,IAAI,CAAC6B,mBAAL,CAAyB3B,IAAzB,CA5BH,EA4BmCE,QA5BnC;AA6BD,KAlCD,EAkCGA,QAAQ,CAAC,CAAD,CAlCX,EAkCgBA,QAlChB;AAmCD,GAxCM,CAwCJA,QAAQ,CAAC,CAAD,CAxCJ,EAwCSA,QAxCT,CAAP;AAyCD,CA5CD;AA8CA;;;AACAJ,IAAI,CAACC,OAAL,CAAa,4BAAb,IAA6C,UAASD,IAAT,EAAe;AAC1D,WAAS8B,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,IAAIC,GAAhE,GAAsED,GAAG,CAAC,KAAD,CAAH,CAAWC,GAAX,CAA7E;AACD;;AACD,WAASC,MAAT,CAAgBF,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASE,QAAT,CAAkBH,GAAlB,EAAuBC,GAAvB,EAA4B;AAC1B,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASG,SAAT,CAAmBJ,GAAnB,EAAwBC,GAAxB,EAA6B;AAC3B,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASI,UAAT,CAAoBL,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASK,SAAT,CAAmBN,GAAnB,EAAwBC,GAAxB,EAA6B;AAC3B,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASM,MAAT,CAAgBP,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASO,MAAT,CAAgBR,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,IAAIC,GAAhE,GAAsED,GAAG,CAAC,KAAD,CAAH,CAAWC,GAAX,CAA7E;AACD;;AACD,MAAI9B,IAAI,GAAGF,IAAI,CAACG,GAAhB;AAAA,MAAqBC,QAAQ,GAAG,EAAhC;AAAA,MAAoCC,GAAG,GAAGL,IAAI,CAACK,GAA/C;AAAA,MAAoDC,GAAG,GAAGN,IAAI,CAACM,GAA/D;AAAA,MAAoEC,EAAE,GAAGP,IAAI,CAACO,EAA9E;AAAA,MAAkFC,OAAO,GAAGR,IAAI,CAACS,MAAjG;AAAA,MAAyG+B,MAAM,GAAGxC,IAAI,CAACyC,KAAvH;AAAA,MAA8HC,MAAM,GAAG1C,IAAI,CAAC2C,KAA5I;AAAA,MAAmJ/B,OAAO,GAAGZ,IAAI,CAACa,MAAlK;AAAA,MAA0K+B,KAAK,GAAG5C,IAAI,CAAC6C,IAAvL;AAGA3C,MAAI,CAAC4C,QAAL,CAAc,6BAAd;AACA,SAAQ,UAAShC,KAAT,EAAgBC,eAAhB,EAAiC;AACvC,QAAIb,IAAI,GAAGM,OAAO,CAACM,KAAD,EAAQ,QAAR,CAAlB;AAEA,QAAIV,QAAQ,GAAG,CAACF,IAAD,EAAOc,MAAP,CAAcD,eAAd,CAAf;;AAEA,KAAC,UAASD,KAAT,EAAgBC,eAAhB,EAAiC;AAChC,UAAIb,IAAI,GAAGM,OAAO,CAACM,KAAD,EAAQ,YAAR,CAAlB;AAEA,UAAIV,QAAQ,GAAG,CAACF,IAAD,EAAOc,MAAP,CAAcD,eAAd,CAAf;;AAEA,OAAC,UAASD,KAAT,EAAgBiC,MAAhB,EAAwBhC,eAAxB,EAAyC;AACxC,YAAIb,IAAI,GAAGsC,MAAM,CAAC1B,KAAD,EAAQiC,MAAR,EAAgB,SAAhB,CAAjB;AAEA,YAAI3C,QAAQ,GAAG,CAACF,IAAD,EAAOc,MAAP,CAAcD,eAAd,CAAf;AAAA,YAA+CiC,qBAA/C;AAAA,YAAsEC,4CAAtE;AAAA,YAAoHC,yBAApH;AAAA,YAA+IC,kBAA/I;AAAA,YAAmKC,2BAAnK;AAAA,YAAgMC,0BAAhM;AAEAnD,YAAI,CAACoD,WAAL,CAAiBC,UAAjB,GAA8BrD,IAAI,CAACoD,WAAL,CAAiBE,MAAjB,GAA0BtD,IAAI,CAACoD,WAAL,CAAiBG,kBAAjB,GAAsCvD,IAAI,CAACoD,WAAL,CAAiBI,mBAAjB,GAAuCxD,IAAI,CAACoD,WAAL,CAAiBK,iBAAjB,GAAqCtD,GAA1K;AAEAL,YAAI,CAAC4D,SAAL,CAAexD,QAAQ,CAAC,CAAD,CAAvB,EAA4B,IAA5B,EAAkC,SAAlC;AACAJ,YAAI,CAAC4D,SAAL,CAAexD,QAAQ,CAAC,CAAD,CAAvB,EAA4B,MAA5B,EAAoC,aAApC;AACAJ,YAAI,CAAC4D,SAAL,CAAexD,QAAQ,CAAC,CAAD,CAAvB,EAA4B,UAA5B,EAAwC,cAAxC;AACAJ,YAAI,CAAC4D,SAAL,CAAexD,QAAQ,CAAC,CAAD,CAAvB,EAA4B,cAA5B,EAA4C,KAAK,kCAAL,GAA0C,IAA1C,GAAiD,2CAAjD,GAA+F,IAA/F,GAAsG,kBAAtG,GAA2H,IAA3H,GAAkI,8BAAlI,GAAmK,oBAAnK,GAA0L,IAA1L,GAAiM,qCAAjM,GAAyO,qCAAzO,GAAiR,IAAjR,GAAwR,iBAAxR,GAA4S,IAA5S,GAAmT,uBAAnT,GAA6U,uBAA7U,GAAuW,IAAvW,GAA8W,eAA9W,GAAgY,uBAAhY,GAA0Z,uBAA1Z,GAAob,IAApb,GAA2b,aAA3b,GAA2c,IAA3c,GAAkd,oBAAld,GAAye,8DAAze,GAA0iB,kEAA1iB,GAA+mB,IAA/mB,GAAsnB,oBAAtnB,GAA6oB,MAA7oB,GAAspB,IAAlsB;AACAF,YAAI,CAAC2D,gBAAL,CAAsB,MAAtB,EAA8B,OAA9B,EAAuC,OAAvC;AAEA7D,YAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,aAAf,EAA8B8C,qBAAqB,GAAG,SAASc,YAAT,CAAsBC,OAAtB,EAA+B;AACnF,cAAIC,KAAK,GAAGhB,qBAAqB,CAACiB,GAAlC;AAAA,cAAuCC,MAAM,GAAGF,KAAK,IAAI3D,GAAzD;AAAA,cAA8DH,IAAI,GAAG,IAArE;AAEA,cAAI8D,KAAJ,EAAWhB,qBAAqB,CAACiB,GAAtB,GAA4B,IAA5B;AAEXvB,gBAAM,CAACxC,IAAD,EAAOF,IAAI,CAACmE,qBAAL,CAA2BjE,IAA3B,EAAiC,YAAjC,EAA+C8C,qBAA/C,EAAsE,KAAtE,EAA6E,IAA7E,CAAP,EAA2F,YAA3F,EAAyG,CAACe,OAAD,CAAzG,EAAoH,IAApH,CAAN;AACA7D,cAAI,CAACuD,kBAAL,GAA0B,EAA1B;AACAvD,cAAI,CAACwD,mBAAL,GAA2B,CAA3B;AACA,iBAAQxD,IAAI,CAACyD,iBAAL,GAAyB,CAAjC;AACD,SATD,EASGX,qBAAqB,CAACpB,OAAtB,GAAgC,CATnC;AAWA5B,YAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,oCAAf,EAAqD+C,4CAA4C,GAAG,SAASmB,mCAAT,CAA6CL,OAA7C,EAAsD;AACxJ,cAAI7D,IAAI,GAAG,IAAX;AAAA,cAAiBmE,KAAK,GAAGhE,GAAzB;AAGAgE,eAAK,GAAGN,OAAR;;AACA,cAAI,OAAO,MAAP,EAAeM,KAAf,CAAJ,EAA2B;AAC3BnE,gBAAI,CAACwD,mBAAL,GAA2B,CAA3B;AACAxD,gBAAI,CAACyD,iBAAL,GAAyB,CAAzB;AACA,mBAAOzD,IAAI,CAACoE,eAAL,CAAqBP,OAArB,CAAP;AAAsC,WAHtC,MAIK,IAAI,MAAM,MAAN,EAAcM,KAAd,CAAJ,EAA0B;AAC/BnE,gBAAI,CAACwD,mBAAL,GAA2B,CAA3B;AACAxD,gBAAI,CAACyD,iBAAL,GAAyB,CAAzB;AACA,mBAAOzD,IAAI,CAACoE,eAAL,CAAqBP,OAArB,CAAP;AAAsC,WAHjC,MAIA,IAAI,QAAQ,MAAR,EAAgBM,KAAhB,CAAJ,EAA4B;AACjCnE,gBAAI,CAACwD,mBAAL,GAA2B,CAA3B;AACAxD,gBAAI,CAACyD,iBAAL,GAAyB,CAAzB;AACA,mBAAOzD,IAAI,CAACqE,gBAAL,CAAsBR,OAAtB,CAAP;AAAuC,WAHlC,MAIA,IAAI,QAAQ,MAAR,EAAgBM,KAAhB,CAAJ,EAA4B;AACjCnE,gBAAI,CAACwD,mBAAL,GAA2B,CAA3B;AACAxD,gBAAI,CAACyD,iBAAL,GAAyB,CAAzB;AACA,mBAAOzD,IAAI,CAACsE,eAAL,CAAqBT,OAArB,CAAP;AAAsC,WAHjC,MAIA,IAAI,OAAO,MAAP,EAAeM,KAAf,CAAJ,EAA2B;AAChCnE,gBAAI,CAACwD,mBAAL,GAA2B,CAA3B;AACAxD,gBAAI,CAACyD,iBAAL,GAAyB,CAAzB;AACA,mBAAOzD,IAAI,CAACqE,gBAAL,CAAsBR,OAAtB,CAAP;AAAuC,WAHlC,MAIA,IAAI,OAAO,MAAP,EAAeM,KAAf,CAAJ,EAA2B;AAChCnE,gBAAI,CAACwD,mBAAL,GAA2B,CAA3B;AACAxD,gBAAI,CAACyD,iBAAL,GAAyB,CAAzB;AACA,mBAAOzD,IAAI,CAACsE,eAAL,CAAqBT,OAArB,CAAP;AAAsC;;AAAA;AACtC,iBAAO1D,GAAP;AACD,SA9BD,EA8BG4C,4CAA4C,CAACrB,OAA7C,GAAuD,CA9B1D;AA+BA1B,YAAI,CAACuE,QAAL;AAEAzE,YAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,iBAAf,EAAkCgD,yBAAyB,GAAG,SAASwB,gBAAT,CAA0BX,OAA1B,EAAmC;AAC/F,cAAIY,GAAJ;AAAA,cAASzE,IAAI,GAAG,IAAhB;AAAA,cAAsB0E,CAAC,GAAGvE,GAA1B;AAAA,cAA+BwE,UAAU,GAAGxE,GAA5C;AAAA,cAAiDyE,IAAI,GAAGzE,GAAxD;AAAA,cAA6D0E,KAAK,GAAG1E,GAArE;AAAA,cAA0Ec,IAAI,GAAGd,GAAjF;AAAA,cAAsF2E,cAAc,GAAG3E,GAAvG;;AAGAuE,WAAC,GAAG,mCAAmCK,MAAnC,CAA0ClB,OAA1C,CAAJ;;AACA,cAAInD,OAAO,CAACgE,CAAD,CAAX,EAAgB,CACf,CADD,MACO;AACL,mBAAOvE,GAAP;AACD;;AAAA;AACDwE,oBAAU,GAAGD,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,EAAYM,KAAZ,EAAb;AACAJ,cAAI,GAAGvE,EAAE,CAACH,QAAD,EAAW,qBAAX,CAAF,CAAoCuB,KAApC,CAA0CiD,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,CAA1C,CAAP;;AACA,cAAIhE,OAAO,CAACkB,MAAM,CAACgD,IAAD,EAAO,CAAP,CAAP,CAAX,EAA8B;AAE5BC,iBAAK,GAAG7E,IAAI,CAACqD,UAAL,CAAgB4B,UAAhB,CAA2B,GAA3B,CAAR;AACA,mBAAO5E,EAAE,CAACH,QAAD,EAAW,QAAX,CAAF,CAAuBqB,IAAvB,CAA4B,KAAK,YAAL,GAAqBsD,KAAjD,CAAP;AAAiE;;AAAA;AACnE5D,cAAI,GAAG,KAAK,UAAL,GAAmB2D,IAAnB,GAA2B,GAAlC;;AACA,cAAIlE,OAAO,CAACqB,MAAM,CAAC4C,UAAD,EAAa,CAAb,CAAP,CAAX,EAAoC;AAClC1D,gBAAI,GAAGe,QAAQ,CAACf,IAAD,EAAO,KAAK,GAAL,GAAYjB,IAAI,CAACkF,UAAL,CAAgB,uBAAhB,CAAZ,GAAwD,GAAxD,GAA+DP,UAA/D,GAA6E,GAApF,CAAf;AAAwG;;AAAA;AAC1GE,eAAK,GAAG7E,IAAI,CAACqD,UAAL,CAAgB4B,UAAhB,CAA2B,GAA3B,CAAR;AACAH,wBAAc,GAAG9E,IAAI,CAACmF,QAAL,CAAcN,KAAd,EAAqBD,IAArB,EAA2BD,UAA3B,CAAjB;AACA,iBAAOjC,KAAK,CAACoC,cAAc,CAACM,UAAf,EAAD,EAA8B,KAA9B,EAAqC,EAArC,GAA0CX,GAAG,GAAG,aAASY,CAAT,EAAW;AAAC,gBAAIrF,IAAI,GAAGyE,GAAG,CAACa,GAAJ,IAAW,IAAX,GAAkB,IAAlB,GAAyBb,GAAG,CAACa,GAAxC;AAAA,gBAA6CC,OAAO,GAAGpF,GAAvD;;AAItE,gBAAIkF,CAAC,IAAI,IAAT,EAAe;AACbA,eAAC,GAAGlF,GAAJ;AACD;;AAAA;AACDoF,mBAAO,GAAG,CAAC,KAAMtE,IAAN,GAAc,KAAd,GAAuB4D,KAAvB,GAAgC,KAAhC,GAAyCC,cAAc,CAACU,KAAf,EAA1C,CAAV;AACA9C,iBAAK,CAAC2C,CAAD,EAAI,OAAJ,EAAavF,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAb,CAAL;AACA,mBAAOA,OAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAd;AAAiD,WATG,EASDd,GAAG,CAACa,GAAJ,GAAUtF,IATT,EASeyE,GAAG,CAAC/C,OAAJ,GAAc,CAT7B,EASgC+C,GAT1E,EAAZ;AAUD,SA9BD,EA8BGzB,yBAAyB,CAACtB,OAA1B,GAAoC,CA9BvC;;AA+BA,SAAC,UAASd,KAAT,EAAgBiC,MAAhB,EAAwBhC,eAAxB,EAAyC;AACxC,cAAIb,IAAI,GAAGsC,MAAM,CAAC1B,KAAD,EAAQiC,MAAR,EAAgB,eAAhB,CAAjB;AAEA,cAAI3C,QAAQ,GAAG,CAACF,IAAD,EAAOc,MAAP,CAAcD,eAAd,CAAf;AAAA,cAA+C6E,2BAA/C;AAAA,cAA4EC,qBAA5E;AAAA,cAAmGC,0BAAnG;AAGA5F,cAAI,CAAC6F,QAAL,CAAcxF,EAAE,CAACH,QAAD,EAAW,WAAX,CAAhB;AACAF,cAAI,CAAC8F,cAAL,CAAoB,SAApB,EAA+B,SAA/B,EAA0C,UAA1C,EAAsD,QAAtD,EAAgE,SAAhE,EAA2E,QAA3E;AAEAhG,cAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,aAAf,EAA8B0F,2BAA2B,GAAG,SAAS9B,YAAT,CAAsBN,MAAtB,EAA8B;AACxF,gBAAItD,IAAI,GAAG,IAAX;AAGAA,gBAAI,CAACsD,MAAL,GAAcA,MAAd;AACAtD,gBAAI,CAAC+F,OAAL,GAAe,KAAf;AACA/F,gBAAI,CAACgG,OAAL,GAAe,KAAf;AACAhG,gBAAI,CAACiG,QAAL,GAAgB,KAAhB;AACAjG,gBAAI,CAACkG,MAAL,GAAc,KAAd;AACAlG,gBAAI,CAACmG,OAAL,GAAe,KAAf;AACA,mBAAQnG,IAAI,CAACoG,KAAL,GAAa,KAArB;AACD,WAXD,EAWGV,2BAA2B,CAAChE,OAA5B,GAAsC,CAXzC;AAaA5B,cAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,OAAf,EAAwB2F,qBAAqB,GAAG,SAASU,MAAT,GAAkB;AAChE,gBAAIrG,IAAI,GAAG,IAAX;AAAA,gBAAiBoB,SAAS,GAAGjB,GAA7B;AAAA,gBAAkCmG,SAAS,GAAGnG,GAA9C;;AAEA,gBAAIO,OAAO,CAAE,YAAW;AAAC,kBAAIA,OAAO,CAAEU,SAAS,GAAGpB,IAAI,CAACuG,SAAL,EAAd,CAAX,EAA6C;AACpE,uBAAOvG,IAAI,CAACwG,QAAL,EAAP;AACD,eAFwB,MAElB;AACL,uBAAOpF,SAAP;AACD;;AAAA;AAAE,qBAAOjB,GAAP;AAAa,aAJJ,EAAD,CAAX,EAIsB;AACpB,qBAAOH,IAAI,CAACkF,UAAL,CAAgB,0BAAhB,CAAP;AACD,aAND,MAMO,IAAIxE,OAAO,CAACV,IAAI,CAACuG,SAAL,EAAD,CAAX,EAA+B;AACpC,qBAAOvG,IAAI,CAACkF,UAAL,CAAgB,kBAAhB,CAAP;AACD,aAFM,MAEA,IAAIxE,OAAO,CAACV,IAAI,CAACwG,QAAL,EAAD,CAAX,EAA8B;AACnC,qBAAOxG,IAAI,CAACkF,UAAL,CAAgB,iBAAhB,CAAP;AACD,aAFM,MAEA,IAAIxE,OAAO,CAACV,IAAI,CAACyG,QAAL,EAAD,CAAX,EAA8B;AACnC,qBAAOzG,IAAI,CAACkF,UAAL,CAAgB,SAAhB,CAAP;AACD,aAFM,MAEA,IAAIxE,OAAO,CAAE,YAAW;AAAC,kBAAIA,OAAO,CAAE4F,SAAS,GAAGtG,IAAI,CAAC0G,OAAL,EAAd,CAAX,EAA2C;AACzE,uBAAO1G,IAAI,CAAC2G,OAAL,EAAP;AACD,eAF+B,MAEzB;AACL,uBAAOL,SAAP;AACD;;AAAA;AAAE,qBAAOnG,GAAP;AAAa,aAJG,EAAD,CAAX,EAIe;AACpB,qBAAO,KAAMH,IAAI,CAACkF,UAAL,CAAgB,gBAAhB,CAAN,GAA2C,GAA3C,GAAkDlF,IAAI,CAACkF,UAAL,CAAgB,gBAAhB,CAAzD;AACD,aANM,MAMA,IAAIxE,OAAO,CAACV,IAAI,CAAC0G,OAAL,EAAD,CAAX,EAA6B;AAClC,qBAAO1G,IAAI,CAACkF,UAAL,CAAgB,gBAAhB,CAAP;AACD,aAFM,MAEA,IAAIxE,OAAO,CAACV,IAAI,CAAC2G,OAAL,EAAD,CAAX,EAA6B;AAClC,qBAAO3G,IAAI,CAACkF,UAAL,CAAgB,gBAAhB,CAAP;AACD,aAFM,MAEA,IAAIxE,OAAO,CAACV,IAAI,CAAC4G,QAAL,EAAD,CAAX,EAA8B;AACnC,qBAAO5G,IAAI,CAACkF,UAAL,CAAgB,SAAhB,CAAP;AACD,aAFM,MAEA;AACL,qBAAO/E,GAAP;AACD;AACF,WA9BD,EA8BGwF,qBAAqB,CAACjE,OAAtB,GAAgC,CA9BnC;AA+BA,iBAAO,CAAC5B,IAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,YAAf,EAA6B4F,0BAA0B,GAAG,SAASiB,WAAT,GAAuB;AACvF,gBAAIC,IAAJ;AAAA,gBAAS9G,IAAI,GAAG,IAAhB;;AAEA,mBAAO0C,KAAK,CAACrC,EAAE,CAACH,QAAD,EAAW,QAAX,CAAF,CAAuBqB,IAAvB,EAAD,EAAgC,KAAhC,EAAuC,EAAvC,GAA4CuF,IAAG,GAAG,aAASzB,CAAT,EAAW;AAAC,kBAAIrF,IAAI,GAAG8G,IAAG,CAACxB,GAAJ,IAAW,IAAX,GAAkB,IAAlB,GAAyBwB,IAAG,CAACxB,GAAxC;AAAA,kBAA6CC,OAAO,GAAGpF,GAAvD;;AAIxE,kBAAIkF,CAAC,IAAI,IAAT,EAAe;AACbA,iBAAC,GAAGlF,GAAJ;AACD;;AAAA;AAEDoF,qBAAO,GAAG,CAACvF,IAAI,CAACyG,QAAL,EAAD,CAAV;AACA/D,mBAAK,CAAC2C,CAAD,EAAI,UAAJ,EAAgBvF,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAhB,CAAL;AACAA,qBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,qBAAO,GAAG,CAACvF,IAAI,CAAC4G,QAAL,EAAD,CAAV;AACAlE,mBAAK,CAAC2C,CAAD,EAAI,UAAJ,EAAgBvF,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAhB,CAAL;AACAA,qBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,qBAAO,GAAG,CAACvF,IAAI,CAACuG,SAAL,EAAD,CAAV;AACA7D,mBAAK,CAAC2C,CAAD,EAAI,WAAJ,EAAiBvF,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAjB,CAAL;AACAA,qBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,qBAAO,GAAG,CAACvF,IAAI,CAAC2G,OAAL,EAAD,CAAV;AACAjE,mBAAK,CAAC2C,CAAD,EAAI,SAAJ,EAAevF,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAf,CAAL;AACA,qBAAOA,OAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAd;AAAgD;AAAE,aAtBI,EAsBFuB,IAAG,CAACxB,GAAJ,GAAUtF,IAtBR,EAsBc8G,IAAG,CAACpF,OAAJ,GAAc,CAtB5B,EAsB+BoF,IAtB3E,EAAZ;AAuBD,WA1BO,EA0BLlB,0BAA0B,CAAClE,OAA3B,GAAqC,CA1BhC,GA0BoCvB,GA1BrC,KA0B6C,WA1BpD;AA2BD,SAhFD,EAgFGD,QAAQ,CAAC,CAAD,CAhFX,EAgFgB,IAhFhB,EAgFsBA,QAhFtB;;AAkFAJ,YAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,UAAf,EAA2BiD,kBAAkB,GAAG,SAAS8D,SAAT,CAAmBlC,KAAnB,EAA0BmC,MAA1B,EAAkCC,aAAlC,EAAiD;AAC/F,cAAIjH,IAAI,GAAG,IAAX;AAAA,cAAiBkH,MAAM,GAAG/G,GAA1B;AAAA,cAA+BgH,cAAc,GAAGhH,GAAhD;AAAA,cAAqDiH,SAAS,GAAGjH,GAAjE;AAAA,cAAsEoF,OAAO,GAAGpF,GAAhF;AAAA,cAAqFkH,SAAS,GAAGlH,GAAjG;;AAIA,cAAI8G,aAAa,IAAI,IAArB,EAA2B;AACzBA,yBAAa,GAAG,CAAhB;AACD;;AAAA;AACDC,gBAAM,GAAG7G,EAAE,CAACH,QAAD,EAAW,eAAX,CAAF,CAA8BqB,IAA9B,CAAmCvB,IAAI,CAACsD,MAAxC,CAAT;AACA6D,wBAAc,GAAGjF,UAAU,CAACC,SAAS,CAAC6E,MAAD,EAAShH,IAAI,CAACuD,kBAAd,CAAV,EAA6C,GAA7C,CAAV,CAA4DyB,KAA5D,GAAoEsC,MAApE,CAA2E,CAA3E,EAA8E,GAA9E,CAAjB;;AACA,cAAI5G,OAAO,CAAE,YAAW;AAAC,gBAAIA,OAAO,CAAE0G,SAAS,GAAGxF,MAAM,CAACiD,KAAD,EAAQmC,MAAR,CAApB,CAAX,EAAkD;AAEzE,qBAAO5E,MAAM,CAACyC,KAAD,EAAQ,GAAR,CAAb;AACD,aAHwB,MAGlB;AACL,qBAAOuC,SAAP;AACD;;AAAA;AAAE,mBAAOjH,GAAP;AAAa,WALJ,EAAD,CAAX,EAKsB;AAGpBoF,mBAAO,GAAG,CAAC,IAAD,CAAV;AACA7C,iBAAK,CAACwE,MAAD,EAAS,UAAT,EAAqBpH,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAArB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,mBAAO,GAAG,CAAC3D,MAAM,CAACiD,KAAD,EAAQsC,cAAR,CAAP,CAAV;AACAzE,iBAAK,CAACwE,MAAD,EAAS,UAAT,EAAqBpH,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAArB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,mBAAO,GAAG,CAAC3D,MAAM,CAACiD,KAAD,EAAQ7E,IAAI,CAACwD,mBAAb,CAAP,CAAV;AACAd,iBAAK,CAACwE,MAAD,EAAS,WAAT,EAAsBpH,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAtB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAC1C,WAnBD,MAmBO;AAGLA,mBAAO,GAAG,CAAC,IAAD,CAAV;AACA7C,iBAAK,CAACwE,MAAD,EAAS,UAAT,EAAqBpH,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAArB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,mBAAO,GAAG,CAAClD,MAAM,CAACwC,KAAD,EAAQ5C,SAAS,CAAC,GAAD,EAAMjC,IAAI,CAACyD,iBAAX,CAAjB,CAAP,CAAV;AACAf,iBAAK,CAACwE,MAAD,EAAS,SAAT,EAAoBpH,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAApB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAC1C;;AAAA;;AACD,cAAI7E,OAAO,CAAE,YAAW;AAAC,gBAAIA,OAAO,CAAE2G,SAAS,GAAGtF,MAAM,CAACkF,aAAD,EAAgB,CAAhB,CAApB,CAAX,EAAqD;AAC5E,qBAAO5E,MAAM,CAACwC,KAAD,EAAQoC,aAAR,CAAb;AACD,aAFwB,MAElB;AACL,qBAAOI,SAAP;AACD;;AAAA;AAAE,mBAAOlH,GAAP;AAAa,WAJJ,EAAD,CAAX,EAIsB;AAGpBoF,mBAAO,GAAG,CAAC,IAAD,CAAV;AACA7C,iBAAK,CAACwE,MAAD,EAAS,SAAT,EAAoBpH,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAApB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,mBAAO,GAAG,CAAC,IAAD,CAAV;AACA7C,iBAAK,CAACwE,MAAD,EAAS,UAAT,EAAqBpH,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAArB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,mBAAO,GAAG,CAAC,KAAD,CAAV;AACA7C,iBAAK,CAACwE,MAAD,EAAS,UAAT,EAAqBpH,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAArB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,mBAAO,GAAG,CAAC,KAAD,CAAV;AACA7C,iBAAK,CAACwE,MAAD,EAAS,UAAT,EAAqBpH,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAArB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,mBAAO,GAAG,CAAC,KAAD,CAAV;AACA7C,iBAAK,CAACwE,MAAD,EAAS,WAAT,EAAsBpH,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAtB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAAE;;AAAA;AAC7C,iBAAO2B,MAAP;AACD,SAnED,EAmEGjE,kBAAkB,CAACvB,OAAnB,GAA6B,CAAC,CAnEjC;AAqEA5B,YAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,kBAAf,EAAmCkD,2BAA2B,GAAG,SAASqE,iBAAT,CAA2B1D,OAA3B,EAAoC;AACnG,cAAI2D,IAAJ;AAAA,cAAUxH,IAAI,GAAG,IAAjB;AAAA,cAAuB0E,CAAC,GAAGvE,GAA3B;AAAA,cAAgCsH,KAAK,GAAGtH,GAAxC;AAAA,cAA6C6G,MAAM,GAAG7G,GAAtD;AAAA,cAA2DuH,OAAO,GAAGvH,GAArE;AAAA,cAA0E2E,cAAc,GAAG3E,GAA3F;;AAGAuE,WAAC,GAAG,qBAAqBK,MAArB,CAA4BlB,OAA5B,CAAJ;;AACA,cAAInD,OAAO,CAACgE,CAAD,CAAX,EAAgB,CACf,CADD,MACO;AACL,mBAAOvE,GAAP;AACD;;AAAA;AACDsH,eAAK,GAAG/C,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,EAAYM,KAAZ,EAAR;AACAgC,gBAAM,GAAGhF,QAAQ,CAACG,SAAS,CAACsF,KAAD,EAAQ,CAAR,CAAV,EAAsB,EAAtB,CAAjB;;AACA,cAAI/G,OAAO,CAAC0B,MAAM,CAAC4E,MAAD,EAAS,CAAT,CAAP,CAAX,EAAgC;AAC9B,mBAAO3G,EAAE,CAACH,QAAD,EAAW,QAAX,CAAF,CAAuB0G,QAAvB,CAAgC,KAAK,UAAL,GAAmBI,MAAnB,GAA6B,MAA7B,GAAuChH,IAAI,CAACkF,UAAL,CAAgB,2BAAhB,CAAvE,CAAP;AAA6H;;AAAA;;AAC/H,cAAIxE,OAAO,CAACqB,MAAM,CAACiF,MAAD,EAAS,EAAT,CAAP,CAAX,EAAiC;AAC/B,mBAAO3G,EAAE,CAACH,QAAD,EAAW,QAAX,CAAF,CAAuBuG,QAAvB,CAAgC,KAAK,UAAL,GAAmBO,MAAnB,GAA6B,MAA7B,GAAuChH,IAAI,CAACkF,UAAL,CAAgB,2BAAhB,CAAvE,CAAP;AAA6H;;AAAA;AAC/HwC,iBAAO,GAAG1H,IAAI,CAACqD,UAAL,CAAgB4B,UAAhB,CAA2B,GAA3B,CAAV;AACAH,wBAAc,GAAG9E,IAAI,CAACmF,QAAL,CAAcuC,OAAd,EAAuBV,MAAvB,CAAjB;AACA,iBAAOtE,KAAK,CAACoC,cAAc,CAACM,UAAf,EAAD,EAA8B,KAA9B,EAAqC,EAArC,GAA0CoC,IAAI,GAAG,cAASnC,CAAT,EAAW;AAAC,gBAAIrF,IAAI,GAAGwH,IAAI,CAAClC,GAAL,IAAY,IAAZ,GAAmB,IAAnB,GAA0BkC,IAAI,CAAClC,GAA1C;AAAA,gBAA+CC,OAAO,GAAGpF,GAAzD;;AAIvE,gBAAIkF,CAAC,IAAI,IAAT,EAAe;AACbA,eAAC,GAAGlF,GAAJ;AACD;;AAAA;AACDoF,mBAAO,GAAG,CAAC,KAAK,UAAL,GAAmByB,MAAnB,GAA6B,MAA7B,GAAuCU,OAAvC,GAAkD,KAAlD,GAA2D5C,cAAc,CAACU,KAAf,EAA5D,CAAV;AACA9C,iBAAK,CAAC2C,CAAD,EAAI,OAAJ,EAAavF,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAb,CAAL;AACA,mBAAOA,OAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAd;AAAiD,WATG,EASDiC,IAAI,CAAClC,GAAL,GAAWtF,IATV,EASgBwH,IAAI,CAAC9F,OAAL,GAAe,CAT/B,EASkC8F,IAT5E,EAAZ;AAUD,SA3BD,EA2BGtE,2BAA2B,CAACxB,OAA5B,GAAsC,CA3BzC;AA4BA,eAAO,CAAC5B,IAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,iBAAf,EAAkCmD,0BAA0B,GAAG,SAASwE,gBAAT,CAA0B9D,OAA1B,EAAmC;AACxG,cAAI+D,IAAJ;AAAA,cAAU5H,IAAI,GAAG,IAAjB;AAAA,cAAuB0E,CAAC,GAAGvE,GAA3B;AAAA,cAAgC0H,MAAM,GAAG1H,GAAzC;AAAA,cAA8C2H,MAAM,GAAG3H,GAAvD;AAAA,cAA4D0E,KAAK,GAAG1E,GAApE;AAAA,cAAyE4H,QAAQ,GAAG5H,GAApF;AAAA,cAAyF6H,QAAQ,GAAG7H,GAApG;AAAA,cAAyG8H,IAAI,GAAG9H,GAAhH;AAAA,cAAqH+H,SAAS,GAAG/H,GAAjI;AAAA,cAAsIgI,SAAS,GAAGhI,GAAlJ;;AAGAuE,WAAC,GAAG,4BAA4BK,MAA5B,CAAmClB,OAAnC,CAAJ;;AACA,cAAInD,OAAO,CAACgE,CAAD,CAAX,EAAgB,CACf,CADD,MACO;AACL,mBAAOvE,GAAP;AACD;;AAAA;AACD0H,gBAAM,GAAGnD,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,EAAYM,KAAZ,EAAT;AACA8C,gBAAM,GAAGpD,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,EAAYM,KAAZ,EAAT;AACAH,eAAK,GAAG7E,IAAI,CAACqD,UAAL,CAAgB4B,UAAhB,CAA2B,GAA3B,CAAR;AACA8C,kBAAQ,GAAG/H,IAAI,CAACmF,QAAL,CAAcN,KAAd,EAAqBgD,MAArB,CAAX;AACAG,kBAAQ,GAAGhI,IAAI,CAACmF,QAAL,CAAcN,KAAd,EAAqBiD,MAArB,CAAX;;AACAG,cAAI,GAAI,YAAW;AAAC,gBAAIvH,OAAO,CAAE,YAAW;AAAC,kBAAIA,OAAO,CAAEwH,SAAS,GAAGH,QAAQ,CAACtB,QAAT,EAAd,CAAX,EAAgD;AAC3F,uBAAOuB,QAAQ,CAACvB,QAAT,EAAP;AACD,eAF4C,MAEtC;AACL,uBAAOyB,SAAP;AACD;;AAAA;AAAE,qBAAO/H,GAAP;AAAa,aAJgB,EAAD,CAAX,EAIE;AACpB,qBAAOH,IAAI,CAACkF,UAAL,CAAgB,SAAhB,CAAP;AACD,aANmB,MAMb,IAAIxE,OAAO,CAAE,YAAW;AAAC,kBAAIA,OAAO,CAAEyH,SAAS,GAAGJ,QAAQ,CAACtB,QAAT,EAAd,CAAX,EAAgD;AAC9E,uBAAO0B,SAAP;AACD,eAF+B,MAEzB;AACL,uBAAOH,QAAQ,CAACvB,QAAT,EAAP;AACD;;AAAA;AAAE,qBAAOtG,GAAP;AAAa,aAJG,EAAD,CAAX,EAIe;AACpB,qBAAOH,IAAI,CAACkF,UAAL,CAAgB,yBAAhB,CAAP;AACD,aANM,MAMA;AACL,qBAAOlF,IAAI,CAACkF,UAAL,CAAgB,SAAhB,CAAP;AACD;;AAAA;AAAE,mBAAO/E,GAAP;AAAa,WAdT,EAAP;;AAeA,iBAAOuC,KAAK,CAACrC,EAAE,CAACH,QAAD,EAAW,QAAX,CAAF,CAAuBqB,IAAvB,EAAD,EAAgC,KAAhC,EAAuC,EAAvC,GAA4CqG,IAAI,GAAG,cAASvC,CAAT,EAAW;AAAC,gBAAIrF,IAAI,GAAG4H,IAAI,CAACtC,GAAL,IAAY,IAAZ,GAAmB,IAAnB,GAA0BsC,IAAI,CAACtC,GAA1C;AAAA,gBAA+CC,OAAO,GAAGpF,GAAzD;AAAA,gBAA8DiI,SAAS,GAAGjI,GAA1E;AAAA,gBAA+EkI,SAAS,GAAGlI,GAA3F;AAAA,gBAAgGmI,SAAS,GAAGnI,GAA5G;;AAIzE,gBAAIkF,CAAC,IAAI,IAAT,EAAe;AACbA,eAAC,GAAGlF,GAAJ;AACD;;AAAA;AAEDoF,mBAAO,GAAG,CAAC,KAAK,UAAL,GAAmBsC,MAAnB,GAA6B,GAA7B,GAAoCC,MAApC,GAA8C,MAA9C,GAAwDjD,KAAxD,GAAiE,GAAjE,GAAwEkD,QAAQ,CAACvC,KAAT,EAAxE,GAA4F,GAA5F,GAAmGwC,QAAQ,CAACxC,KAAT,EAAnG,GAAuH,MAAvH,GAAiIyC,IAAlI,CAAV;AACAvF,iBAAK,CAAC2C,CAAD,EAAI,OAAJ,EAAavF,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAb,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,mBAAO,GAAG,CAAE,YAAW;AAAC,kBAAI7E,OAAO,CAAE0H,SAAS,GAAGL,QAAQ,CAACxB,SAAT,EAAd,CAAX,EAAiD;AACvE,uBAAO6B,SAAP;AACD,eAFuB,MAEjB;AACL,uBAAOJ,QAAQ,CAACzB,SAAT,EAAP;AACD;;AAAA;AAAE,qBAAOpG,GAAP;AAAa,aAJL,EAAD,CAAV;AAKAuC,iBAAK,CAAC2C,CAAD,EAAI,WAAJ,EAAiBvF,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAjB,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,mBAAO,GAAG,CAAE,YAAW;AAAC,kBAAI7E,OAAO,CAAE2H,SAAS,GAAGN,QAAQ,CAACpB,OAAT,EAAd,CAAX,EAA+C;AACrE,uBAAO0B,SAAP;AACD,eAFuB,MAEjB;AACL,uBAAOL,QAAQ,CAACrB,OAAT,EAAP;AACD;;AAAA;AAAE,qBAAOxG,GAAP;AAAa,aAJL,EAAD,CAAV;AAKAuC,iBAAK,CAAC2C,CAAD,EAAI,SAAJ,EAAevF,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAf,CAAL;AACAA,mBAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAP;AAAyC;AAEzCA,mBAAO,GAAG,CAAE,YAAW;AAAC,kBAAI7E,OAAO,CAAE4H,SAAS,GAAGP,QAAQ,CAACtB,QAAT,EAAd,CAAX,EAAgD;AACtE,uBAAO6B,SAAP;AACD,eAFuB,MAEjB;AACL,uBAAON,QAAQ,CAACvB,QAAT,EAAP;AACD;;AAAA;AAAE,qBAAOtG,GAAP;AAAa,aAJL,EAAD,CAAV;AAKAuC,iBAAK,CAAC2C,CAAD,EAAI,YAAJ,EAAkBvF,IAAI,CAAC2F,IAAL,CAAUF,OAAV,CAAlB,CAAL;AACA,mBAAOA,OAAO,CAACtD,SAAS,CAACsD,OAAO,CAAC,QAAD,CAAR,EAAoB,CAApB,CAAV,CAAd;AAAgD;AAAE,WAlCI,EAkCFqC,IAAI,CAACtC,GAAL,GAAWtF,IAlCT,EAkCe4H,IAAI,CAAClG,OAAL,GAAe,CAlC9B,EAkCiCkG,IAlC7E,EAAZ;AAmCD,SAhEO,EAgELzE,0BAA0B,CAACzB,OAA3B,GAAqC,CAhEhC,GAgEoCvB,GAhErC,KAgE6C,gBAhEpD;AAiED,OA5UD,EA4UGD,QAAQ,CAAC,CAAD,CA5UX,EA4UgBG,EAAE,CAACH,QAAD,EAAW,MAAX,CA5UlB,EA4UsCA,QA5UtC;AA6UD,KAlVD,EAkVGA,QAAQ,CAAC,CAAD,CAlVX,EAkVgBA,QAlVhB;AAmVD,GAxVM,CAwVJA,QAAQ,CAAC,CAAD,CAxVJ,EAwVSA,QAxVT,CAAP;AAyVD,CAtXD;AAwXA;;;AACA,CAAC,UAASJ,IAAT,EAAe;AACd,MAAIE,IAAI,GAAGF,IAAI,CAACG,GAAhB;AAAA,MAAqBC,QAAQ,GAAG,EAAhC;AAAA,MAAoCC,GAAG,GAAGL,IAAI,CAACK,GAA/C;AAAA,MAAoDC,GAAG,GAAGN,IAAI,CAACM,GAA/D;AAAA,MAAoEC,EAAE,GAAGP,IAAI,CAACO,EAA9E;AAAA,MAAkFC,OAAO,GAAGR,IAAI,CAACS,MAAjG;AAAA,MAAyG+B,MAAM,GAAGxC,IAAI,CAACyC,KAAvH;AAAA,MAA8HC,MAAM,GAAG1C,IAAI,CAAC2C,KAA5I;AAGAzC,MAAI,CAAC4C,QAAL,CAAc,4BAAd;AACA,SAAQ,UAAShC,KAAT,EAAgBC,eAAhB,EAAiC;AACvC,QAAIb,IAAI,GAAGM,OAAO,CAACM,KAAD,EAAQ,QAAR,CAAlB;AAEA,QAAIV,QAAQ,GAAG,CAACF,IAAD,EAAOc,MAAP,CAAcD,eAAd,CAAf;;AAEA,KAAC,UAASD,KAAT,EAAgBC,eAAhB,EAAiC;AAChC,UAAIb,IAAI,GAAGM,OAAO,CAACM,KAAD,EAAQ,YAAR,CAAlB;AAEA,UAAIV,QAAQ,GAAG,CAACF,IAAD,EAAOc,MAAP,CAAcD,eAAd,CAAf;;AAEA,OAAC,UAASD,KAAT,EAAgBiC,MAAhB,EAAwBhC,eAAxB,EAAyC;AACxC,YAAIb,IAAI,GAAGsC,MAAM,CAAC1B,KAAD,EAAQiC,MAAR,EAAgB,4BAAhB,CAAjB;AAEA,YAAI3C,QAAQ,GAAG,CAACF,IAAD,EAAOc,MAAP,CAAcD,eAAd,CAAf;AAAA,YAA+C0H,wCAA/C;AAGAzI,YAAI,CAAC4D,SAAL,CAAexD,QAAQ,CAAC,CAAD,CAAvB,EAA4B,IAA5B,EAAkC,4BAAlC;AACAJ,YAAI,CAAC4D,SAAL,CAAexD,QAAQ,CAAC,CAAD,CAAvB,EAA4B,MAA5B,EAAoC,OAApC;AACAJ,YAAI,CAAC4D,SAAL,CAAexD,QAAQ,CAAC,CAAD,CAAvB,EAA4B,UAA5B,EAAwC,+BAAxC;AACAJ,YAAI,CAAC4D,SAAL,CAAexD,QAAQ,CAAC,CAAD,CAAvB,EAA4B,cAA5B,EAA4C,KAAK,yBAAL,GAAiC,IAAjC,GAAwC,qCAAxC,GAAgF,IAAhF,GAAuF,cAAvF,GAAwG,IAAxG,GAA+G,0BAA/G,GAA4I,oBAA5I,GAAmK,IAAnK,GAA0K,mCAA1K,GAAgN,mCAAhN,GAAsP,IAAtP,GAA6P,WAA7P,GAA2Q,IAA3Q,GAAkR,uBAAlR,GAA4S,uBAA5S,GAAsU,IAAtU,GAA6U,UAA7U,GAA0V,uBAA1V,GAAoX,uBAApX,GAA8Y,IAA9Y,GAAqZ,UAArZ,GAAka,IAAla,GAAya,oBAAza,GAAgc,0CAAhc,GAA6e,qDAA7e,GAAqiB,IAAriB,GAA4iB,oBAA5iB,GAAmkB,MAAnkB,GAA4kB,IAAxnB;AACAF,YAAI,CAACwI,iCAAL;AACA,eAAO,CAAC1I,IAAI,CAACkB,GAAL,CAAShB,IAAT,EAAe,aAAf,EAA8BuI,wCAAwC,GAAG,SAAS3E,YAAT,CAAsBC,OAAtB,EAA+B;AAC9G,cAAIC,KAAK,GAAGyE,wCAAwC,CAACxE,GAArD;AAAA,cAA0DC,MAAM,GAAGF,KAAK,IAAI3D,GAA5E;AAAA,cAAiFH,IAAI,GAAG,IAAxF;AAEA,cAAI8D,KAAJ,EAAWyE,wCAAwC,CAACxE,GAAzC,GAA+C,IAA/C;AAEXvB,gBAAM,CAACxC,IAAD,EAAOF,IAAI,CAACmE,qBAAL,CAA2BjE,IAA3B,EAAiC,YAAjC,EAA+CuI,wCAA/C,EAAyF,KAAzF,EAAgG,IAAhG,CAAP,EAA8G,YAA9G,EAA4H,CAAC1E,OAAD,CAA5H,EAAuI,IAAvI,CAAN;AACA,iBAAQ7D,IAAI,CAACsD,MAAL,GAAc,SAAtB;AACD,SAPO,EAOLiF,wCAAwC,CAAC7G,OAAzC,GAAmD,CAP9C,GAOkDvB,GAPnD,KAO2D,YAPlE;AAQD,OAnBD,EAmBGD,QAAQ,CAAC,CAAD,CAnBX,EAmBgBG,EAAE,CAACH,QAAD,EAAW,SAAX,CAnBlB,EAmByCA,QAnBzC;AAoBD,KAzBD,EAyBGA,QAAQ,CAAC,CAAD,CAzBX,EAyBgBA,QAzBhB;AA0BD,GA/BM,CA+BJA,QAAQ,CAAC,CAAD,CA/BJ,EA+BSA,QA/BT,CAAP;AAgCD,CArCD,EAqCGJ,IArCH,E","file":"default~Cthulhu_ChineseTraditional~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/arithmetic_evaluator\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'ArithmeticEvaluator');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $eval$1;\n\n        return (Opal.def(self, '$eval', $eval$1 = function(expr, $kwargs) {\n          var round_type, self = this, $ret_or_1 = nil;\n\n          \n          \n          if ($kwargs == null) {\n            $kwargs = $hash2([], {});\n          } else if (!$kwargs.$$is_hash) {\n            throw Opal.ArgumentError.$new('expected kwargs');\n          };\n          \n          round_type = $kwargs.$$smap[\"round_type\"];\n          if (round_type == null) {\n            round_type = $$$($$($nesting, 'RoundType'), 'FLOOR')\n          };\n          if ($truthy(expr)) {\n          } else {\n            return 0\n          };\n          if ($truthy(($ret_or_1 = $$($nesting, 'Arithmetic').$eval(expr, round_type)))) {\n            return $ret_or_1\n          } else {\n            return 0\n          };\n        }, $eval$1.$$arity = -2), nil) && 'eval'\n      })(Opal.get_singleton_class(self), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/game_system/Cthulhu\"] = function(Opal) {\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send2 = Opal.send2, $truthy = Opal.truthy, $send = Opal.send;\n\n  \n  self.$require(\"bcdice/arithmetic_evaluator\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Cthulhu');\n\n        var $nesting = [self].concat($parent_nesting), $Cthulhu_initialize$1, $Cthulhu_eval_game_system_specific_command$2, $Cthulhu_getCheckResult$3, $Cthulhu_compare$9, $Cthulhu_getRegistResult$10, $Cthulhu_getCombineRoll$12;\n\n        self.$$prototype.randomizer = self.$$prototype.locale = self.$$prototype.special_percentage = self.$$prototype.critical_percentage = self.$$prototype.fumble_percentage = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"Cthulhu\");\n        Opal.const_set($nesting[0], 'NAME', \"クトゥルフ神話TRPG\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"くとうるふしんわTRPG\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"c=クリティカル値 ／ f=ファンブル値 ／ s=スペシャル\\n\" + \"\\n\" + \"1d100<=n    c・f・sすべてオフ（単純な数値比較判定のみ行います）\\n\" + \"\\n\" + \"・cfs判定付き判定コマンド\\n\" + \"\\n\" + \"CC\\t 1d100ロールを行う c=1、f=100\\n\" + \"CCB  同上、c=5、f=96\\n\" + \"\\n\" + \"例：CC<=80  （技能値80で行為判定。1%ルールでcf適用）\\n\" + \"例：CCB<=55 （技能値55で行為判定。5%ルールでcf適用）\\n\" + \"\\n\" + \"・組み合わせロールについて\\n\" + \"\\n\" + \"CBR(x,y)\\tc=1、f=100\\n\" + \"CBRB(x,y)\\tc=5、f=96\\n\" + \"\\n\" + \"・抵抗表ロールについて\\n\" + \"RES(x-y)\\tc=1、f=100\\n\" + \"RESB(x-y)\\tc=5、f=96\\n\" + \"\\n\" + \"※故障ナンバー判定\\n\" + \"\\n\" + \"・CC(x) c=1、f=100\\n\" + \"x=故障ナンバー。出目x以上が出た上で、ファンブルが同時に発生した場合、共に出力する（テキスト「ファンブル＆故障」）\\n\" + \"ファンブルでない場合、成功・失敗に関わらずテキスト「故障」のみを出力する（成功・失敗を出力せず、上書きしたものを出力する形）\\n\" + \"\\n\" + \"・CCB(x) c=5、f=96\\n\" + \"同上\\n\" + \"\\n\");\n        self.$register_prefix(\"CCB?\", \"RESB?\", \"CBRB?\");\n        \n        Opal.def(self, '$initialize', $Cthulhu_initialize$1 = function $$initialize(command) {\n          var $iter = $Cthulhu_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $Cthulhu_initialize$1.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $Cthulhu_initialize$1, false, true), 'initialize', [command], null);\n          self.special_percentage = 20;\n          self.critical_percentage = 1;\n          return (self.fumble_percentage = 1);\n        }, $Cthulhu_initialize$1.$$arity = 1);\n        \n        Opal.def(self, '$eval_game_system_specific_command', $Cthulhu_eval_game_system_specific_command$2 = function $$eval_game_system_specific_command(command) {\n          var self = this, $case = nil;\n\n          \n          $case = command;\n          if (/CCB/i['$===']($case)) {\n          self.critical_percentage = 5;\n          self.fumble_percentage = 5;\n          return self.$getCheckResult(command);}\n          else if (/CC/i['$===']($case)) {\n          self.critical_percentage = 1;\n          self.fumble_percentage = 1;\n          return self.$getCheckResult(command);}\n          else if (/RESB/i['$===']($case)) {\n          self.critical_percentage = 5;\n          self.fumble_percentage = 5;\n          return self.$getRegistResult(command);}\n          else if (/CBRB/i['$===']($case)) {\n          self.critical_percentage = 5;\n          self.fumble_percentage = 5;\n          return self.$getCombineRoll(command);}\n          else if (/RES/i['$===']($case)) {\n          self.critical_percentage = 1;\n          self.fumble_percentage = 1;\n          return self.$getRegistResult(command);}\n          else if (/CBR/i['$===']($case)) {\n          self.critical_percentage = 1;\n          self.fumble_percentage = 1;\n          return self.$getCombineRoll(command);};\n          return nil;\n        }, $Cthulhu_eval_game_system_specific_command$2.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$getCheckResult', $Cthulhu_getCheckResult$3 = function $$getCheckResult(command) {\n          var $$4, self = this, m = nil, broken_num = nil, diff = nil, total = nil, expr = nil, compare_result = nil;\n\n          \n          m = /^CCB?(\\d+)?(?:<=([+-\\/*\\d]+))?$/i.$match(command);\n          if ($truthy(m)) {\n          } else {\n            return nil\n          };\n          broken_num = m['$[]'](1).$to_i();\n          diff = $$($nesting, 'ArithmeticEvaluator').$eval(m['$[]'](2));\n          if ($truthy($rb_le(diff, 0))) {\n            \n            total = self.randomizer.$roll_once(100);\n            return $$($nesting, 'Result').$new(\"\" + \"(1D100) ＞ \" + (total));};\n          expr = \"\" + \"(1D100<=\" + (diff) + \")\";\n          if ($truthy($rb_gt(broken_num, 0))) {\n            expr = $rb_plus(expr, \"\" + \" \" + (self.$translate(\"Cthulhu.broken_number\")) + \"[\" + (broken_num) + \"]\")};\n          total = self.randomizer.$roll_once(100);\n          compare_result = self.$compare(total, diff, broken_num);\n          return $send(compare_result.$to_result(), 'tap', [], ($$4 = function(r){var self = $$4.$$s == null ? this : $$4.$$s, $writer = nil;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            $writer = [\"\" + (expr) + \" ＞ \" + (total) + \" ＞ \" + (compare_result.$text())];\n            $send(r, 'text=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];}, $$4.$$s = self, $$4.$$arity = 1, $$4));\n        }, $Cthulhu_getCheckResult$3.$$arity = 1);\n        (function($base, $super, $parent_nesting) {\n          var self = $klass($base, $super, 'CompareResult');\n\n          var $nesting = [self].concat($parent_nesting), $CompareResult_initialize$5, $CompareResult_text$6, $CompareResult_to_result$7;\n\n          \n          self.$include($$($nesting, 'Translate'));\n          self.$attr_accessor(\"success\", \"failure\", \"critical\", \"fumble\", \"special\", \"broken\");\n          \n          Opal.def(self, '$initialize', $CompareResult_initialize$5 = function $$initialize(locale) {\n            var self = this;\n\n            \n            self.locale = locale;\n            self.success = false;\n            self.failure = false;\n            self.critical = false;\n            self.fumble = false;\n            self.special = false;\n            return (self.broke = false);\n          }, $CompareResult_initialize$5.$$arity = 1);\n          \n          Opal.def(self, '$text', $CompareResult_text$6 = function $$text() {\n            var self = this, $ret_or_1 = nil, $ret_or_2 = nil;\n\n            if ($truthy((function() {if ($truthy(($ret_or_1 = self.$critical()))) {\n              return self.$special()\n            } else {\n              return $ret_or_1\n            }; return nil; })())) {\n              return self.$translate(\"Cthulhu.critical_special\")\n            } else if ($truthy(self.$critical())) {\n              return self.$translate(\"Cthulhu.critical\")\n            } else if ($truthy(self.$special())) {\n              return self.$translate(\"Cthulhu.special\")\n            } else if ($truthy(self.$success())) {\n              return self.$translate(\"success\")\n            } else if ($truthy((function() {if ($truthy(($ret_or_2 = self.$broken()))) {\n              return self.$fumble()\n            } else {\n              return $ret_or_2\n            }; return nil; })())) {\n              return \"\" + (self.$translate(\"Cthulhu.fumble\")) + \"/\" + (self.$translate(\"Cthulhu.broken\"))\n            } else if ($truthy(self.$broken())) {\n              return self.$translate(\"Cthulhu.broken\")\n            } else if ($truthy(self.$fumble())) {\n              return self.$translate(\"Cthulhu.fumble\")\n            } else if ($truthy(self.$failure())) {\n              return self.$translate(\"failure\")\n            } else {\n              return nil\n            }\n          }, $CompareResult_text$6.$$arity = 0);\n          return (Opal.def(self, '$to_result', $CompareResult_to_result$7 = function $$to_result() {\n            var $$8, self = this;\n\n            return $send($$($nesting, 'Result').$new(), 'tap', [], ($$8 = function(r){var self = $$8.$$s == null ? this : $$8.$$s, $writer = nil;\n\n            \n              \n              if (r == null) {\n                r = nil;\n              };\n              \n              $writer = [self.$success()];\n              $send(r, 'success=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [self.$failure()];\n              $send(r, 'failure=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [self.$critical()];\n              $send(r, 'critical=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [self.$fumble()];\n              $send(r, 'fumble=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;}, $$8.$$s = self, $$8.$$arity = 1, $$8))\n          }, $CompareResult_to_result$7.$$arity = 0), nil) && 'to_result';\n        })($nesting[0], null, $nesting);\n        \n        Opal.def(self, '$compare', $Cthulhu_compare$9 = function $$compare(total, target, broken_number) {\n          var self = this, result = nil, target_special = nil, $ret_or_3 = nil, $writer = nil, $ret_or_4 = nil;\n\n          \n          \n          if (broken_number == null) {\n            broken_number = 0;\n          };\n          result = $$($nesting, 'CompareResult').$new(self.locale);\n          target_special = $rb_divide($rb_times(target, self.special_percentage), 100).$to_i().$clamp(1, 100);\n          if ($truthy((function() {if ($truthy(($ret_or_3 = $rb_le(total, target)))) {\n            \n            return $rb_lt(total, 100);\n          } else {\n            return $ret_or_3\n          }; return nil; })())) {\n            \n            \n            $writer = [true];\n            $send(result, 'success=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [$rb_le(total, target_special)];\n            $send(result, 'special=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [$rb_le(total, self.critical_percentage)];\n            $send(result, 'critical=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            \n            \n            $writer = [true];\n            $send(result, 'failure=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [$rb_ge(total, $rb_minus(101, self.fumble_percentage))];\n            $send(result, 'fumble=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          };\n          if ($truthy((function() {if ($truthy(($ret_or_4 = $rb_gt(broken_number, 0)))) {\n            return $rb_ge(total, broken_number)\n          } else {\n            return $ret_or_4\n          }; return nil; })())) {\n            \n            \n            $writer = [true];\n            $send(result, 'broken=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [true];\n            $send(result, 'failure=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [false];\n            $send(result, 'success=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [false];\n            $send(result, 'special=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [false];\n            $send(result, 'critical=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;};\n          return result;\n        }, $Cthulhu_compare$9.$$arity = -3);\n        \n        Opal.def(self, '$getRegistResult', $Cthulhu_getRegistResult$10 = function $$getRegistResult(command) {\n          var $$11, self = this, m = nil, value = nil, target = nil, total_n = nil, compare_result = nil;\n\n          \n          m = /^RES(B)?([-\\d]+)$/i.$match(command);\n          if ($truthy(m)) {\n          } else {\n            return nil\n          };\n          value = m['$[]'](2).$to_i();\n          target = $rb_plus($rb_times(value, 5), 50);\n          if ($truthy($rb_lt(target, 5))) {\n            return $$($nesting, 'Result').$failure(\"\" + \"(1d100<=\" + (target) + \") ＞ \" + (self.$translate(\"Cthulhu.automatic_failure\")))};\n          if ($truthy($rb_gt(target, 95))) {\n            return $$($nesting, 'Result').$success(\"\" + \"(1d100<=\" + (target) + \") ＞ \" + (self.$translate(\"Cthulhu.automatic_success\")))};\n          total_n = self.randomizer.$roll_once(100);\n          compare_result = self.$compare(total_n, target);\n          return $send(compare_result.$to_result(), 'tap', [], ($$11 = function(r){var self = $$11.$$s == null ? this : $$11.$$s, $writer = nil;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            $writer = [\"\" + \"(1d100<=\" + (target) + \") ＞ \" + (total_n) + \" ＞ \" + (compare_result.$text())];\n            $send(r, 'text=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];}, $$11.$$s = self, $$11.$$arity = 1, $$11));\n        }, $Cthulhu_getRegistResult$10.$$arity = 1);\n        return (Opal.def(self, '$getCombineRoll', $Cthulhu_getCombineRoll$12 = function $$getCombineRoll(command) {\n          var $$13, self = this, m = nil, diff_1 = nil, diff_2 = nil, total = nil, result_1 = nil, result_2 = nil, rank = nil, $ret_or_5 = nil, $ret_or_6 = nil;\n\n          \n          m = /^CBR(B)?\\((\\d+),(\\d+)\\)$/i.$match(command);\n          if ($truthy(m)) {\n          } else {\n            return nil\n          };\n          diff_1 = m['$[]'](2).$to_i();\n          diff_2 = m['$[]'](3).$to_i();\n          total = self.randomizer.$roll_once(100);\n          result_1 = self.$compare(total, diff_1);\n          result_2 = self.$compare(total, diff_2);\n          rank = (function() {if ($truthy((function() {if ($truthy(($ret_or_5 = result_1.$success()))) {\n            return result_2.$success()\n          } else {\n            return $ret_or_5\n          }; return nil; })())) {\n            return self.$translate(\"success\")\n          } else if ($truthy((function() {if ($truthy(($ret_or_6 = result_1.$success()))) {\n            return $ret_or_6\n          } else {\n            return result_2.$success()\n          }; return nil; })())) {\n            return self.$translate(\"Cthulhu.partial_success\")\n          } else {\n            return self.$translate(\"failure\")\n          }; return nil; })();\n          return $send($$($nesting, 'Result').$new(), 'tap', [], ($$13 = function(r){var self = $$13.$$s == null ? this : $$13.$$s, $writer = nil, $ret_or_7 = nil, $ret_or_8 = nil, $ret_or_9 = nil;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            $writer = [\"\" + \"(1d100<=\" + (diff_1) + \",\" + (diff_2) + \") ＞ \" + (total) + \"[\" + (result_1.$text()) + \",\" + (result_2.$text()) + \"] ＞ \" + (rank)];\n            $send(r, 'text=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [(function() {if ($truthy(($ret_or_7 = result_1.$critical()))) {\n              return $ret_or_7\n            } else {\n              return result_2.$critical()\n            }; return nil; })()];\n            $send(r, 'critical=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [(function() {if ($truthy(($ret_or_8 = result_1.$fumble()))) {\n              return $ret_or_8\n            } else {\n              return result_2.$fumble()\n            }; return nil; })()];\n            $send(r, 'fumble=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [(function() {if ($truthy(($ret_or_9 = result_1.$success()))) {\n              return $ret_or_9\n            } else {\n              return result_2.$success()\n            }; return nil; })()];\n            $send(r, 'condition=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;}, $$13.$$s = self, $$13.$$arity = 1, $$13));\n        }, $Cthulhu_getCombineRoll$12.$$arity = 1), nil) && 'getCombineRoll';\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n};\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send2 = Opal.send2;\n\n  \n  self.$require(\"bcdice/game_system/Cthulhu\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Cthulhu_ChineseTraditional');\n\n        var $nesting = [self].concat($parent_nesting), $Cthulhu_ChineseTraditional_initialize$1;\n\n        \n        Opal.const_set($nesting[0], 'ID', \"Cthulhu:ChineseTraditional\");\n        Opal.const_set($nesting[0], 'NAME', \"克蘇魯神話\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"国際化:Chinese Traditional:克蘇魯神話\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"c=爆擊率 ／ f=大失敗值 ／ s=特殊\\n\" + \"\\n\" + \"1d100<=n    c・f・s全關閉（只進行單純數值比較判定）\\n\" + \"\\n\" + \"・cfs付註判定指令\\n\" + \"\\n\" + \"CC\\t 1d100擲骰 c=1、f=100\\n\" + \"CCB  同上、c=5、f=96\\n\" + \"\\n\" + \"例：CC<=80  （以技能值80來判定。cf適用於1%規則）\\n\" + \"例：CCB<=55 （以技能值55來判定。cf適用於5%規則）\\n\" + \"\\n\" + \"・關於組合骰組\\n\" + \"\\n\" + \"CBR(x,y)\\tc=1、f=100\\n\" + \"CBRB(x,y)\\tc=5、f=96\\n\" + \"\\n\" + \"・關於對抗骰\\n\" + \"RES(x-y)\\tc=1、f=100\\n\" + \"RESB(x-y)\\tc=5、f=96\\n\" + \"\\n\" + \"※故障率判定\\n\" + \"\\n\" + \"・CC(x) c=1、f=100\\n\" + \"x=故障率。擲出骰值x以上時、需在大失敗發生同時輸出（參照「大失敗＆故障」）\\n\" + \"沒有大失敗時，無論成功或失敗只需參考[故障]來輸出(並非成功或失敗來輸出，而是覆蓋上去並對其輸出)\\n\" + \"\\n\" + \"・CCB(x) c=5、f=96\\n\" + \"同上\\n\" + \"\\n\");\n        self.$register_prefix_from_super_class();\n        return (Opal.def(self, '$initialize', $Cthulhu_ChineseTraditional_initialize$1 = function $$initialize(command) {\n          var $iter = $Cthulhu_ChineseTraditional_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $Cthulhu_ChineseTraditional_initialize$1.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $Cthulhu_ChineseTraditional_initialize$1, false, true), 'initialize', [command], null);\n          return (self.locale = \"zh_hant\");\n        }, $Cthulhu_ChineseTraditional_initialize$1.$$arity = 1), nil) && 'initialize';\n      })($nesting[0], $$($nesting, 'Cthulhu'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n})(Opal);\n"],"sourceRoot":"webpack:///"}