{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/DetatokoSaga.js"],"names":["require","Opal","$rb_plus","lhs","rhs","$rb_minus","$rb_ge","$rb_gt","$rb_divide","$rb_times","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$send2","send2","$truthy","truthy","$send","send","$hash2","hash2","$base","$parent_nesting","concat","$super","$DetatokoSaga_initialize$1","$DetatokoSaga_eval_game_system_specific_command$2","$DetatokoSaga_checkRoll$3","$DetatokoSaga_getRollResult$4","$DetatokoSaga_getSuccess$5","$DetatokoSaga_getCheckFlagResult$6","$DetatokoSaga_getDownWill$7","$DetatokoSaga_checkJudgeValue$8","$DetatokoSaga_getModifyText$9","$DetatokoSaga_getTotalResultValue$10","$DetatokoSaga_getTotalResultValueWhenSlash$11","$DetatokoSaga_translate_tables$12","$$prototype","randomizer","const_set","$register_prefix","def","$$initialize","command","$iter","$$p","$yield","find_super_dispatcher","sort_add_dice","d66_sort_type","$$arity","$$eval_game_system_specific_command","result","$ret_or_1","$debug","$checkRoll","$checkJudgeValue","$roll_tables","$class","$$checkRoll","string","$a","$b","$c","m","skill","flag","operator","value","target","$ret_or_2","modifyText","total","rollText","totalResult","$case","success","$match","$to_i","$translate","$getModifyText","$getRollResult","to_ary","$getTotalResultValue","$getSuccess","$getCheckFlagResult","$$getRollResult","diceCount","dice","diceText","$roll_barabara","$join","$sort","$reverse","$$getSuccess","check","$$getCheckFlagResult","will","$getDownWill","$$getDownWill","$roll_once","$$checkJudgeValue","$$getModifyText","operatorText","$$getTotalResultValue","$getTotalResultValueWhenSlash","$$getTotalResultValueWhenSlash","quotient","$ceil","$to_proc","$freeze","defs","$$translate_tables","locale","$from_i18n","$translate_tables","$keys"],"mappings":";;;;;;;;;AAAAA,mBAAO,CAAC,uBAAD,CAAP;AAEA;;;AACA,CAAC,UAASC,IAAT,EAAe;AACd,WAASC,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AAC1B,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASC,SAAT,CAAmBF,GAAnB,EAAwBC,GAAxB,EAA6B;AAC3B,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASE,MAAT,CAAgBH,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,IAAIC,GAAhE,GAAsED,GAAG,CAAC,KAAD,CAAH,CAAWC,GAAX,CAA7E;AACD;;AACD,WAASG,MAAT,CAAgBJ,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASI,UAAT,CAAoBL,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASK,SAAT,CAAmBN,GAAnB,EAAwBC,GAAxB,EAA6B;AAC3B,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,MAAIM,IAAI,GAAGT,IAAI,CAACU,GAAhB;AAAA,MAAqBC,QAAQ,GAAG,EAAhC;AAAA,MAAoCC,GAAG,GAAGZ,IAAI,CAACY,GAA/C;AAAA,MAAoDC,GAAG,GAAGb,IAAI,CAACa,GAA/D;AAAA,MAAoEC,EAAE,GAAGd,IAAI,CAACc,EAA9E;AAAA,MAAkFC,OAAO,GAAGf,IAAI,CAACgB,MAAjG;AAAA,MAAyGC,MAAM,GAAGjB,IAAI,CAACkB,KAAvH;AAAA,MAA8HC,MAAM,GAAGnB,IAAI,CAACoB,KAA5I;AAAA,MAAmJC,OAAO,GAAGrB,IAAI,CAACsB,MAAlK;AAAA,MAA0KC,KAAK,GAAGvB,IAAI,CAACwB,IAAvL;AAAA,MAA6LC,MAAM,GAAGzB,IAAI,CAAC0B,KAA3M;AAEA,SAAQ,UAASC,KAAT,EAAgBC,eAAhB,EAAiC;AACvC,QAAInB,IAAI,GAAGM,OAAO,CAACY,KAAD,EAAQ,QAAR,CAAlB;AAEA,QAAIhB,QAAQ,GAAG,CAACF,IAAD,EAAOoB,MAAP,CAAcD,eAAd,CAAf;;AAEA,KAAC,UAASD,KAAT,EAAgBC,eAAhB,EAAiC;AAChC,UAAInB,IAAI,GAAGM,OAAO,CAACY,KAAD,EAAQ,YAAR,CAAlB;AAEA,UAAIhB,QAAQ,GAAG,CAACF,IAAD,EAAOoB,MAAP,CAAcD,eAAd,CAAf;;AAEA,OAAC,UAASD,KAAT,EAAgBG,MAAhB,EAAwBF,eAAxB,EAAyC;AACxC,YAAInB,IAAI,GAAGQ,MAAM,CAACU,KAAD,EAAQG,MAAR,EAAgB,cAAhB,CAAjB;AAEA,YAAInB,QAAQ,GAAG,CAACF,IAAD,EAAOoB,MAAP,CAAcD,eAAd,CAAf;AAAA,YAA+CG,0BAA/C;AAAA,YAA2EC,iDAA3E;AAAA,YAA8HC,yBAA9H;AAAA,YAAyJC,6BAAzJ;AAAA,YAAwLC,0BAAxL;AAAA,YAAoNC,kCAApN;AAAA,YAAwPC,2BAAxP;AAAA,YAAqRC,+BAArR;AAAA,YAAsTC,6BAAtT;AAAA,YAAqVC,oCAArV;AAAA,YAA2XC,6CAA3X;AAAA,YAA0aC,iCAA1a;AAEAjC,YAAI,CAACkC,WAAL,CAAiBC,UAAjB,GAA8BhC,GAA9B;AAEAZ,YAAI,CAAC6C,SAAL,CAAelC,QAAQ,CAAC,CAAD,CAAvB,EAA4B,IAA5B,EAAkC,cAAlC;AACAX,YAAI,CAAC6C,SAAL,CAAelC,QAAQ,CAAC,CAAD,CAAvB,EAA4B,MAA5B,EAAoC,SAApC;AACAX,YAAI,CAAC6C,SAAL,CAAelC,QAAQ,CAAC,CAAD,CAAvB,EAA4B,UAA5B,EAAwC,SAAxC;AACAX,YAAI,CAAC6C,SAAL,CAAelC,QAAQ,CAAC,CAAD,CAAvB,EAA4B,cAA5B,EAA4C,KAAK,mEAAL,GAA2E,sDAA3E,GAAoI,sDAApI,GAA6L,kDAA7L,GAAkP,0CAAlP,GAA+R,4BAA/R,GAA8T,oCAA9T,GAAqW,gCAArW,GAAwY,yCAAxY,GAAob,qCAAhe;AACAF,YAAI,CAACqC,gBAAL,CAAsB,QAAtB,EAAgC,QAAhC;AAEA9C,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,aAAf,EAA8BsB,0BAA0B,GAAG,SAASiB,YAAT,CAAsBC,OAAtB,EAA+B;AACxF,cAAIC,KAAK,GAAGnB,0BAA0B,CAACoB,GAAvC;AAAA,cAA4CC,MAAM,GAAGF,KAAK,IAAItC,GAA9D;AAAA,cAAmEH,IAAI,GAAG,IAA1E;AAEA,cAAIyC,KAAJ,EAAWnB,0BAA0B,CAACoB,GAA3B,GAAiC,IAAjC;AAEXhC,gBAAM,CAACV,IAAD,EAAOT,IAAI,CAACqD,qBAAL,CAA2B5C,IAA3B,EAAiC,YAAjC,EAA+CsB,0BAA/C,EAA2E,KAA3E,EAAkF,IAAlF,CAAP,EAAgG,YAAhG,EAA8G,CAACkB,OAAD,CAA9G,EAAyH,IAAzH,CAAN;AACAxC,cAAI,CAAC6C,aAAL,GAAqB,IAArB;AACA,iBAAQ7C,IAAI,CAAC8C,aAAL,GAAqB1C,GAAG,CAACC,EAAE,CAACH,QAAD,EAAW,aAAX,CAAH,EAA8B,KAA9B,CAAhC;AACD,SARD,EAQGoB,0BAA0B,CAACyB,OAA3B,GAAqC,CARxC;AAUAxD,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,oCAAf,EAAqDuB,iDAAiD,GAAG,SAASyB,mCAAT,CAA6CR,OAA7C,EAAsD;AAC7J,cAAIxC,IAAI,GAAG,IAAX;AAAA,cAAiBiD,MAAM,GAAG9C,GAA1B;AAAA,cAA+B+C,SAAS,GAAG/C,GAA3C;AAGAH,cAAI,CAACmD,MAAL,CAAY,gDAAZ,EAA8DX,OAA9D;AACAS,gBAAM,GAAGjD,IAAI,CAACoD,UAAL,CAAgBZ,OAAhB,CAAT;;AACA,cAAI5B,OAAO,CAACqC,MAAD,CAAX,EAAqB;AACnB,mBAAOA,MAAP;AAAc;;AAAA;AAChBA,gBAAM,GAAGjD,IAAI,CAACqD,gBAAL,CAAsBb,OAAtB,CAAT;;AACA,cAAI5B,OAAO,CAACqC,MAAD,CAAX,EAAqB;AACnB,mBAAOA,MAAP;AAAc;;AAAA;AAChBjD,cAAI,CAACmD,MAAL,CAAY,UAAZ;AACA,iBAAOnD,IAAI,CAACsD,YAAL,CAAmB,YAAW;AAAC,gBAAI1C,OAAO,CAAEsC,SAAS,GAAG7C,EAAE,CAACH,QAAD,EAAW,OAAX,CAAF,CAAsB,KAAtB,EAA6BsC,OAA7B,CAAd,CAAX,EAAkE;AACtG,qBAAOU,SAAP;AACD,aAFqC,MAE/B;AACL,qBAAOV,OAAP;AACD;;AAAA;AAAE,mBAAOrC,GAAP;AAAa,WAJS,EAAlB,EAIcC,GAAG,CAACJ,IAAI,CAACuD,MAAL,EAAD,EAAgB,QAAhB,CAJjB,CAAP;AAKD,SAjBD,EAiBGhC,iDAAiD,CAACwB,OAAlD,GAA4D,CAjB/D;AAmBAxD,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,YAAf,EAA6BwB,yBAAyB,GAAG,SAASgC,WAAT,CAAqBC,MAArB,EAA6B;AACpF,cAAIC,EAAJ;AAAA,cAAQC,EAAR;AAAA,cAAYC,EAAZ;AAAA,cAAgB5D,IAAI,GAAG,IAAvB;AAAA,cAA6B6D,CAAC,GAAG1D,GAAjC;AAAA,cAAsC2D,KAAK,GAAG3D,GAA9C;AAAA,cAAmD4D,IAAI,GAAG5D,GAA1D;AAAA,cAA+D6D,QAAQ,GAAG7D,GAA1E;AAAA,cAA+E8D,KAAK,GAAG9D,GAAvF;AAAA,cAA4F+D,MAAM,GAAG/D,GAArG;AAAA,cAA0GgE,SAAS,GAAGhE,GAAtH;AAAA,cAA2H8C,MAAM,GAAG9C,GAApI;AAAA,cAAyIiE,UAAU,GAAGjE,GAAtJ;AAAA,cAA2JkE,KAAK,GAAGlE,GAAnK;AAAA,cAAwKmE,QAAQ,GAAGnE,GAAnL;AAAA,cAAwLoE,WAAW,GAAGpE,GAAtM;AAAA,cAA2MqE,KAAK,GAAGrE,GAAnN;AAAA,cAAwNsE,OAAO,GAAGtE,GAAlO;AAGAH,cAAI,CAACmD,MAAL,CAAY,wBAAZ,EAAsCM,MAAtC;AACAI,WAAC,GAAG,+CAA+Ca,MAA/C,CAAsDjB,MAAtD,CAAJ;;AACA,cAAI7C,OAAO,CAACiD,CAAD,CAAX,EAAgB,CACf,CADD,MACO;AACL,mBAAO1D,GAAP;AACD;;AAAA;AACD2D,eAAK,GAAGD,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,EAAYc,KAAZ,EAAR;AACAZ,cAAI,GAAGF,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,EAAYc,KAAZ,EAAP;AACAX,kBAAQ,GAAGH,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,CAAX;AACAI,eAAK,GAAGJ,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,EAAYc,KAAZ,EAAR;;AACAT,gBAAM,GAAI,YAAW;AAAC,gBAAItD,OAAO,CAAEuD,SAAS,IAAIT,EAAE,GAAGG,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,CAAL,EAAmBH,EAAE,KAAKvD,GAAP,IAAcuD,EAAE,IAAI,IAArB,GAA6BvD,GAA7B,GAAmCW,KAAK,CAAC4C,EAAD,EAAK,MAAL,EAAa,EAAb,CAA9D,CAAX,CAAX,EAAyG;AAC7H,qBAAOS,SAAP;AACD,aAFqB,MAEf;AACL,qBAAO,CAAP;AACD;;AAAA;AAAE,mBAAOhE,GAAP;AAAa,WAJP,EAAT;;AAKA8C,gBAAM,GAAGjD,IAAI,CAAC4E,UAAL,CAAgB,+BAAhB,EAAiD5D,MAAM,CAAC,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAAD,EAA8B;AAAC,qBAAS8C,KAAV;AAAiB,oBAAQC,IAAzB;AAA+B,sBAAUG;AAAzC,WAA9B,CAAvD,CAAT;AACAE,oBAAU,GAAGpE,IAAI,CAAC6E,cAAL,CAAoBb,QAApB,EAA8BC,KAA9B,CAAb;;AACA,cAAIrD,OAAO,CAACwD,UAAU,CAAC,SAAD,CAAV,EAAD,CAAX,EAAsC,CACrC,CADD,MACO;AACLnB,kBAAM,GAAGzD,QAAQ,CAACyD,MAAD,EAASjD,IAAI,CAAC4E,UAAL,CAAgB,0BAAhB,EAA4C5D,MAAM,CAAC,CAAC,UAAD,CAAD,EAAe;AAAC,0BAAYoD;AAAb,aAAf,CAAlD,CAAT,CAAjB;AACD;;AAAA;AACDR,YAAE,GAAG5D,IAAI,CAAC8E,cAAL,CAAoBhB,KAApB,CAAL,EAAiCH,EAAE,GAAGpE,IAAI,CAACwF,MAAL,CAAYnB,EAAZ,CAAtC,EAAwDS,KAAK,GAAIV,EAAE,CAAC,CAAD,CAAF,IAAS,IAAT,GAAgBxD,GAAhB,GAAsBwD,EAAE,CAAC,CAAD,CAAzF,EAAiGW,QAAQ,GAAIX,EAAE,CAAC,CAAD,CAAF,IAAS,IAAT,GAAgBxD,GAAhB,GAAsBwD,EAAE,CAAC,CAAD,CAArI,EAA4IC,EAA5I;AACAX,gBAAM,GAAGzD,QAAQ,CAACyD,MAAD,EAAS,KAAK,KAAL,GAAcoB,KAAd,GAAuB,GAAvB,GAA8BC,QAA9B,GAA0C,GAA1C,GAAiDF,UAA1D,CAAjB;AACAG,qBAAW,GAAGvE,IAAI,CAACgF,oBAAL,CAA0BX,KAA1B,EAAiCJ,KAAjC,EAAwCD,QAAxC,CAAd;AACAf,gBAAM,GAAGzD,QAAQ,CAACyD,MAAD,EAAS,KAAK,KAAL,GAAcsB,WAAvB,CAAjB;;AACA,cAAI3D,OAAO,CAACwD,UAAU,CAAC,SAAD,CAAV,EAAD,CAAX,EAAsC,CACrC,CADD,MACO;AACLI,iBAAK,GAAGR,QAAR;;AACA,gBAAI,IAAI,MAAJ,EAAYQ,KAAZ,CAAJ,EAAwB;AAACH,mBAAK,GAAG7E,QAAQ,CAAC6E,KAAD,EAAQJ,KAAR,CAAhB;AAA+B,aAAxD,MACK,IAAI,IAAI,MAAJ,EAAYO,KAAZ,CAAJ,EAAwB;AAACH,mBAAK,GAAG1E,SAAS,CAAC0E,KAAD,EAAQJ,KAAR,CAAjB;AAAgC;AAC/D;;AAAA;AACDQ,iBAAO,GAAGzE,IAAI,CAACiF,WAAL,CAAiBZ,KAAjB,EAAwBH,MAAxB,CAAV;AACAjB,gBAAM,GAAGzD,QAAQ,CAACyD,MAAD,EAAS,KAAK,KAAL,GAAcwB,OAAvB,CAAjB;AACAxB,gBAAM,GAAGzD,QAAQ,CAACyD,MAAD,EAASjD,IAAI,CAACkF,mBAAL,CAAyBb,KAAzB,EAAgCN,IAAhC,CAAT,CAAjB;AACA,iBAAOd,MAAP;AACD,SAvCD,EAuCGzB,yBAAyB,CAACuB,OAA1B,GAAoC,CAvCvC;AAyCAxD,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,gBAAf,EAAiCyB,6BAA6B,GAAG,SAAS0D,eAAT,CAAyBrB,KAAzB,EAAgC;AAC/F,cAAI9D,IAAI,GAAG,IAAX;AAAA,cAAiBoF,SAAS,GAAGjF,GAA7B;AAAA,cAAkCkF,IAAI,GAAGlF,GAAzC;AAAA,cAA8CmF,QAAQ,GAAGnF,GAAzD;AAAA,cAA8DkE,KAAK,GAAGlE,GAAtE;AAGAiF,mBAAS,GAAG5F,QAAQ,CAACsE,KAAD,EAAQ,CAAR,CAApB;;AACA,cAAIA,KAAK,CAAC,KAAD,CAAL,CAAa,CAAb,CAAJ,EAAqB;AACnBsB,qBAAS,GAAG,CAAZ;AAAc;;AAAA;AAChBC,cAAI,GAAGrF,IAAI,CAACmC,UAAL,CAAgBoD,cAAhB,CAA+BH,SAA/B,EAA0C,CAA1C,CAAP;AACAE,kBAAQ,GAAGD,IAAI,CAACG,KAAL,CAAW,GAAX,CAAX;AACAH,cAAI,GAAGA,IAAI,CAACI,KAAL,EAAP;;AACA,cAAI7E,OAAO,CAACkD,KAAK,CAAC,KAAD,CAAL,CAAa,CAAb,CAAD,CAAX,EAA8B;AAC5BuB,gBAAI,GAAGA,IAAI,CAACK,QAAL,EAAP;AAAuB;;AAAA;AACzBrB,eAAK,GAAG7E,QAAQ,CAAC6F,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,CAAD,EAAiBA,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,CAAjB,CAAhB;AACA,iBAAO,CAAChB,KAAD,EAAQiB,QAAR,CAAP;AACD,SAdD,EAcG7D,6BAA6B,CAACsB,OAA9B,GAAwC,CAd3C;AAgBAxD,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,aAAf,EAA8B0B,0BAA0B,GAAG,SAASiE,YAAT,CAAsBC,KAAtB,EAA6B1B,MAA7B,EAAqC;AAC9F,cAAIlE,IAAI,GAAG,IAAX;;AAEA,cAAIY,OAAO,CAAChB,MAAM,CAACgG,KAAD,EAAQ1B,MAAR,CAAP,CAAX,EAAoC;AAClC,mBAAOlE,IAAI,CAAC4E,UAAL,CAAgB,yBAAhB,CAAP;AACD,WAFD,MAEO;AACL,mBAAO5E,IAAI,CAAC4E,UAAL,CAAgB,yBAAhB,CAAP;AACD;AACF,SARD,EAQGlD,0BAA0B,CAACqB,OAA3B,GAAqC,CARxC;AAUAxD,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,qBAAf,EAAsC2B,kCAAkC,GAAG,SAASkE,oBAAT,CAA8BxB,KAA9B,EAAqCN,IAArC,EAA2C;AACpH,cAAI/D,IAAI,GAAG,IAAX;AAAA,cAAiB8F,IAAI,GAAG3F,GAAxB;;AAGA,cAAIS,OAAO,CAACf,MAAM,CAACwE,KAAD,EAAQN,IAAR,CAAP,CAAX,EAAkC;AAChC,mBAAO,EAAP;AAAU;;AAAA;AACZ+B,cAAI,GAAG9F,IAAI,CAAC+F,YAAL,CAAkBhC,IAAlB,CAAP;AACA,iBAAO/D,IAAI,CAAC4E,UAAL,CAAgB,6BAAhB,EAA+C5D,MAAM,CAAC,CAAC,MAAD,CAAD,EAAW;AAAC,oBAAQ8E;AAAT,WAAX,CAArD,CAAP;AACD,SARD,EAQGnE,kCAAkC,CAACoB,OAAnC,GAA6C,CARhD;AAUAxD,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,cAAf,EAA+B4B,2BAA2B,GAAG,SAASoE,aAAT,CAAuBjC,IAAvB,EAA6B;AACxF,cAAI/D,IAAI,GAAG,IAAX;AAAA,cAAiBqF,IAAI,GAAGlF,GAAxB;;AAGA,cAAIS,OAAO,CAAChB,MAAM,CAACmE,IAAD,EAAO,EAAP,CAAP,CAAX,EAA+B;AAC7B,mBAAO,GAAP;AAAW;;AAAA;AACbsB,cAAI,GAAGrF,IAAI,CAACmC,UAAL,CAAgB8D,UAAhB,CAA2B,CAA3B,CAAP;AACA,iBAAO,KAAK,OAAL,GAAgBZ,IAAvB;AACD,SARD,EAQGzD,2BAA2B,CAACmB,OAA5B,GAAsC,CARzC;AAUAxD,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,kBAAf,EAAmC6B,+BAA+B,GAAG,SAASqE,iBAAT,CAA2BzC,MAA3B,EAAmC;AACtG,cAAIC,EAAJ;AAAA,cAAQC,EAAR;AAAA,cAAY3D,IAAI,GAAG,IAAnB;AAAA,cAAyB6D,CAAC,GAAG1D,GAA7B;AAAA,cAAkC2D,KAAK,GAAG3D,GAA1C;AAAA,cAA+C4D,IAAI,GAAG5D,GAAtD;AAAA,cAA2D6D,QAAQ,GAAG7D,GAAtE;AAAA,cAA2E8D,KAAK,GAAG9D,GAAnF;AAAA,cAAwF8C,MAAM,GAAG9C,GAAjG;AAAA,cAAsGiE,UAAU,GAAGjE,GAAnH;AAAA,cAAwHkE,KAAK,GAAGlE,GAAhI;AAAA,cAAqImE,QAAQ,GAAGnE,GAAhJ;AAAA,cAAqJoE,WAAW,GAAGpE,GAAnK;AAGAH,cAAI,CAACmD,MAAL,CAAY,8BAAZ,EAA4CM,MAA5C;AACAI,WAAC,GAAG,mCAAmCa,MAAnC,CAA0CjB,MAA1C,CAAJ;;AACA,cAAI7C,OAAO,CAACiD,CAAD,CAAX,EAAgB,CACf,CADD,MACO;AACL,mBAAO1D,GAAP;AACD;;AAAA;AACD2D,eAAK,GAAGD,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,EAAYc,KAAZ,EAAR;AACAZ,cAAI,GAAGF,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,EAAYc,KAAZ,EAAP;AACAX,kBAAQ,GAAGH,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,CAAX;AACAI,eAAK,GAAGJ,CAAC,CAAC,KAAD,CAAD,CAAS,CAAT,EAAYc,KAAZ,EAAR;AACA1B,gBAAM,GAAGjD,IAAI,CAAC4E,UAAL,CAAgB,+BAAhB,EAAiD5D,MAAM,CAAC,CAAC,OAAD,EAAU,MAAV,CAAD,EAAoB;AAAC,qBAAS8C,KAAV;AAAiB,oBAAQC;AAAzB,WAApB,CAAvD,CAAT;AACAK,oBAAU,GAAGpE,IAAI,CAAC6E,cAAL,CAAoBb,QAApB,EAA8BC,KAA9B,CAAb;;AACA,cAAIrD,OAAO,CAACwD,UAAU,CAAC,SAAD,CAAV,EAAD,CAAX,EAAsC,CACrC,CADD,MACO;AACLnB,kBAAM,GAAGzD,QAAQ,CAACyD,MAAD,EAASjD,IAAI,CAAC4E,UAAL,CAAgB,0BAAhB,EAA4C5D,MAAM,CAAC,CAAC,UAAD,CAAD,EAAe;AAAC,0BAAYoD;AAAb,aAAf,CAAlD,CAAT,CAAjB;AACD;;AAAA;AACDT,YAAE,GAAG3D,IAAI,CAAC8E,cAAL,CAAoBhB,KAApB,CAAL,EAAiCJ,EAAE,GAAGnE,IAAI,CAACwF,MAAL,CAAYpB,EAAZ,CAAtC,EAAwDU,KAAK,GAAIX,EAAE,CAAC,CAAD,CAAF,IAAS,IAAT,GAAgBvD,GAAhB,GAAsBuD,EAAE,CAAC,CAAD,CAAzF,EAAiGY,QAAQ,GAAIZ,EAAE,CAAC,CAAD,CAAF,IAAS,IAAT,GAAgBvD,GAAhB,GAAsBuD,EAAE,CAAC,CAAD,CAArI,EAA4IC,EAA5I;AACAV,gBAAM,GAAGzD,QAAQ,CAACyD,MAAD,EAAS,KAAK,KAAL,GAAcoB,KAAd,GAAuB,GAAvB,GAA8BC,QAA9B,GAA0C,GAA1C,GAAiDF,UAA1D,CAAjB;AACAG,qBAAW,GAAGvE,IAAI,CAACgF,oBAAL,CAA0BX,KAA1B,EAAiCJ,KAAjC,EAAwCD,QAAxC,CAAd;AACAf,gBAAM,GAAGzD,QAAQ,CAACyD,MAAD,EAAS,KAAK,KAAL,GAAcsB,WAAvB,CAAjB;AACAtB,gBAAM,GAAGzD,QAAQ,CAACyD,MAAD,EAASjD,IAAI,CAACkF,mBAAL,CAAyBb,KAAzB,EAAgCN,IAAhC,CAAT,CAAjB;AACA,iBAAOd,MAAP;AACD,SA1BD,EA0BGpB,+BAA+B,CAACkB,OAAhC,GAA0C,CA1B7C;AA4BAxD,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,gBAAf,EAAiC8B,6BAA6B,GAAG,SAASqE,eAAT,CAAyBnC,QAAzB,EAAmCC,KAAnC,EAA0C;AACzG,cAAIjE,IAAI,GAAG,IAAX;AAAA,cAAiBoG,YAAY,GAAGjG,GAAhC;AAAA,cAAqCqE,KAAK,GAAGrE,GAA7C;;AAGA,cAAI8D,KAAK,CAAC,KAAD,CAAL,CAAa,CAAb,CAAJ,EAAqB;AACnB,mBAAO,EAAP;AAAU;;AAAA;;AACZmC,sBAAY,GAAI,YAAW;AAAC5B,iBAAK,GAAGR,QAAR;;AAC5B,gBAAI,IAAI,MAAJ,EAAYQ,KAAZ,CAAJ,EAAwB;AAAC,qBAAO,GAAP;AAAW,aAApC,MACK,IAAI,IAAI,MAAJ,EAAYA,KAAZ,CAAJ,EAAwB;AAAC,qBAAO,GAAP;AAAW,aAApC,MACA,IAAI,IAAI,MAAJ,EAAYA,KAAZ,CAAJ,EAAwB;AAAC,qBAAO,GAAP;AAAW,aAApC,MACA;AAAC,qBAAO,EAAP;AAAU;AAAC,WAJF,EAAf;;AAKA,iBAAO,KAAM4B,YAAN,GAAuBnC,KAA9B;AACD,SAZD,EAYGnC,6BAA6B,CAACiB,OAA9B,GAAwC,CAZ3C;AAcAxD,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,sBAAf,EAAuC+B,oCAAoC,GAAG,SAASsE,qBAAT,CAA+BhC,KAA/B,EAAsCJ,KAAtC,EAA6CD,QAA7C,EAAuD;AACnI,cAAIhE,IAAI,GAAG,IAAX;AAAA,cAAiBwE,KAAK,GAAGrE,GAAzB;AAEA,iBAAQ,YAAW;AAACqE,iBAAK,GAAGR,QAAR;;AACpB,gBAAI,IAAI,MAAJ,EAAYQ,KAAZ,CAAJ,EAAwB;AAAC,qBAAOhF,QAAQ,CAAC,KAAM6E,KAAN,GAAe,GAAf,GAAsBJ,KAAtB,GAA+B,KAAhC,EAAuCjE,IAAI,CAAC4E,UAAL,CAAgB,0BAAhB,EAA4C5D,MAAM,CAAC,CAAC,OAAD,CAAD,EAAY;AAAC,yBAASxB,QAAQ,CAAC6E,KAAD,EAAQJ,KAAR;AAAlB,eAAZ,CAAlD,CAAvC,CAAf;AAAyJ,aAAlL,MACK,IAAI,IAAI,MAAJ,EAAYO,KAAZ,CAAJ,EAAwB;AAAC,qBAAOhF,QAAQ,CAAC,KAAM6E,KAAN,GAAe,GAAf,GAAsBJ,KAAtB,GAA+B,KAAhC,EAAuCjE,IAAI,CAAC4E,UAAL,CAAgB,0BAAhB,EAA4C5D,MAAM,CAAC,CAAC,OAAD,CAAD,EAAY;AAAC,yBAASrB,SAAS,CAAC0E,KAAD,EAAQJ,KAAR;AAAnB,eAAZ,CAAlD,CAAvC,CAAf;AAA0J,aAAnL,MACA,IAAI,IAAI,MAAJ,EAAYO,KAAZ,CAAJ,EAAwB;AAAC,qBAAOxE,IAAI,CAACsG,6BAAL,CAAmCjC,KAAnC,EAA0CJ,KAA1C,CAAP;AAAwD,aAAjF,MACA;AAAC,qBAAOjE,IAAI,CAAC4E,UAAL,CAAgB,0BAAhB,EAA4C5D,MAAM,CAAC,CAAC,OAAD,CAAD,EAAY;AAAC,yBAASqD;AAAV,eAAZ,CAAlD,CAAP;AAAwF;AAAC,WAJxF,EAAP;AAKD,SARD,EAQGtC,oCAAoC,CAACgB,OAArC,GAA+C,CARlD;AAUAxD,YAAI,CAAC+C,GAAL,CAAStC,IAAT,EAAe,+BAAf,EAAgDgC,6CAA6C,GAAG,SAASuE,8BAAT,CAAwClC,KAAxC,EAA+CJ,KAA/C,EAAsD;AACpJ,cAAIjE,IAAI,GAAG,IAAX;AAAA,cAAiBwG,QAAQ,GAAGrG,GAA5B;AAAA,cAAiC8C,MAAM,GAAG9C,GAA1C;;AAGA,cAAI8D,KAAK,CAAC,KAAD,CAAL,CAAa,CAAb,CAAJ,EAAqB;AACnB,mBAAOjE,IAAI,CAAC4E,UAAL,CAAgB,qCAAhB,CAAP;AAA8D;;AAAA;AAChE4B,kBAAQ,GAAG1G,UAAU,CAACC,SAAS,CAAC,GAAD,EAAMsE,KAAN,CAAV,EAAwBJ,KAAxB,CAAV,CAAyCwC,KAAzC,EAAX;AACAxD,gBAAM,GAAGzD,QAAQ,CAAC,KAAM6E,KAAN,GAAe,GAAf,GAAsBJ,KAAtB,GAA+B,KAAhC,EAAuCjE,IAAI,CAAC4E,UAAL,CAAgB,0BAAhB,EAA4C5D,MAAM,CAAC,CAAC,OAAD,CAAD,EAAY;AAAC,qBAASwF;AAAV,WAAZ,CAAlD,CAAvC,CAAjB;AACA,iBAAOvD,MAAP;AACD,SATD,EASGjB,6CAA6C,CAACe,OAA9C,GAAwD,CAT3D;AAUAxD,YAAI,CAAC6C,SAAL,CAAelC,QAAQ,CAAC,CAAD,CAAvB,EAA4B,OAA5B,EAAqCY,KAAK,CAACE,MAAM,CAAC,CAAC,qBAAD,EAAwB,iBAAxB,EAA2C,qBAA3C,EAAkE,iBAAlE,CAAD,EAAuF;AAAC,iCAAuB,KAAxB;AAA+B,6BAAmB,KAAlD;AAAyD,iCAAuB,MAAhF;AAAwF,6BAAmB;AAA3G,SAAvF,CAAP,EAAmN,gBAAnN,EAAqO,EAArO,EAAyO,SAAS0F,QAAT,EAAzO,CAAL,CAAmQC,OAAnQ,EAArC;AACApH,YAAI,CAACqH,IAAL,CAAU5G,IAAV,EAAgB,mBAAhB,EAAqCiC,iCAAiC,GAAG,SAAS4E,kBAAT,CAA4BC,MAA5B,EAAoC;AAC3G,cAAI9G,IAAI,GAAG,IAAX;AAEA,iBAAOgB,MAAM,CAAC,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,CAAD,EAAiC;AAAC,mBAAOZ,GAAG,CAACC,EAAE,CAACH,QAAD,EAAW,WAAX,CAAH,EAA4B,OAA5B,CAAH,CAAwC6G,UAAxC,CAAmD,wBAAnD,EAA6ED,MAA7E,CAAR;AAA8F,mBAAO1G,GAAG,CAACC,EAAE,CAACH,QAAD,EAAW,WAAX,CAAH,EAA4B,OAA5B,CAAH,CAAwC6G,UAAxC,CAAmD,wBAAnD,EAA6ED,MAA7E,CAArG;AAA2L,oBAAQ1G,GAAG,CAACC,EAAE,CAACH,QAAD,EAAW,WAAX,CAAH,EAA4B,OAA5B,CAAH,CAAwC6G,UAAxC,CAAmD,yBAAnD,EAA8ED,MAA9E,CAAnM;AAA0R,oBAAQ1G,GAAG,CAACC,EAAE,CAACH,QAAD,EAAW,WAAX,CAAH,EAA4B,OAA5B,CAAH,CAAwC6G,UAAxC,CAAmD,yBAAnD,EAA8ED,MAA9E;AAAlS,WAAjC,CAAb;AACD,SAJD,EAIG7E,iCAAiC,CAACc,OAAlC,GAA4C,CAJ/C;AAKAxD,YAAI,CAAC6C,SAAL,CAAelC,QAAQ,CAAC,CAAD,CAAvB,EAA4B,QAA5B,EAAsCF,IAAI,CAACgH,iBAAL,CAAuB,OAAvB,EAAgCL,OAAhC,EAAtC;AACA,eAAO3G,IAAI,CAACqC,gBAAL,CAAsBhC,EAAE,CAACH,QAAD,EAAW,QAAX,CAAF,CAAuB+G,KAAvB,EAAtB,EAAsD5G,EAAE,CAACH,QAAD,EAAW,OAAX,CAAF,CAAsB+G,KAAtB,EAAtD,CAAP;AACD,OAvMD,EAuMG/G,QAAQ,CAAC,CAAD,CAvMX,EAuMgBG,EAAE,CAACH,QAAD,EAAW,MAAX,CAvMlB,EAuMsCA,QAvMtC;AAwMD,KA7MD,EA6MGA,QAAQ,CAAC,CAAD,CA7MX,EA6MgBA,QA7MhB;AA8MD,GAnNM,CAmNJA,QAAQ,CAAC,CAAD,CAnNJ,EAmNSA,QAnNT,CAAP;AAoND,CAzOD,EAyOGX,IAzOH,E","file":"default~DetatokoSaga~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send2 = Opal.send2, $truthy = Opal.truthy, $send = Opal.send, $hash2 = Opal.hash2;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'DetatokoSaga');\n\n        var $nesting = [self].concat($parent_nesting), $DetatokoSaga_initialize$1, $DetatokoSaga_eval_game_system_specific_command$2, $DetatokoSaga_checkRoll$3, $DetatokoSaga_getRollResult$4, $DetatokoSaga_getSuccess$5, $DetatokoSaga_getCheckFlagResult$6, $DetatokoSaga_getDownWill$7, $DetatokoSaga_checkJudgeValue$8, $DetatokoSaga_getModifyText$9, $DetatokoSaga_getTotalResultValue$10, $DetatokoSaga_getTotalResultValueWhenSlash$11, $DetatokoSaga_translate_tables$12;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"DetatokoSaga\");\n        Opal.const_set($nesting[0], 'NAME', \"でたとこサーガ\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"てたとこさあか\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・通常判定　xDS or xDSy or xDS>=t or xDSy>=t or xDS+z>=t or xDSy+z>=t\\n\" + \"　(x＝スキルランク、y＝現在フラグ値(省略時0)、z＝修正値(省略時０)、t＝目標値(省略時８))\\n\" + \"　例）3DS　2DS5　0DS　3DS>=10　3DS7>=12 2DS3+1 3DS2+1>=10\\n\" + \"・判定値　xJD or xJDy or xJDy+z or xJDy-z or xJDy/z\\n\" + \"　(x＝スキルランク、y＝現在フラグ値(省略時0)、z＝修正値(省略時０))\\n\" + \"　例）3JD　2JD5　3JD7+1　4JD/3\\n\" + \"・体力烙印表　SST (StrengthStigmaTable)\\n\" + \"・気力烙印表　WST (WillStigmaTable)\\n\" + \"・体力バッドエンド表　SBET (StrengthBadEndTable)\\n\" + \"・気力バッドエンド表　WBET (WillBadEndTable)\\n\");\n        self.$register_prefix(\"\\\\d+DS\", \"\\\\d+JD\");\n        \n        Opal.def(self, '$initialize', $DetatokoSaga_initialize$1 = function $$initialize(command) {\n          var $iter = $DetatokoSaga_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $DetatokoSaga_initialize$1.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $DetatokoSaga_initialize$1, false, true), 'initialize', [command], null);\n          self.sort_add_dice = true;\n          return (self.d66_sort_type = $$$($$($nesting, 'D66SortType'), 'ASC'));\n        }, $DetatokoSaga_initialize$1.$$arity = 1);\n        \n        Opal.def(self, '$eval_game_system_specific_command', $DetatokoSaga_eval_game_system_specific_command$2 = function $$eval_game_system_specific_command(command) {\n          var self = this, result = nil, $ret_or_1 = nil;\n\n          \n          self.$debug(\"eval_game_system_specific_command begin string\", command);\n          result = self.$checkRoll(command);\n          if ($truthy(result)) {\n            return result};\n          result = self.$checkJudgeValue(command);\n          if ($truthy(result)) {\n            return result};\n          self.$debug(\"各種表として処理\");\n          return self.$roll_tables((function() {if ($truthy(($ret_or_1 = $$($nesting, 'ALIAS')['$[]'](command)))) {\n            return $ret_or_1\n          } else {\n            return command\n          }; return nil; })(), $$$(self.$class(), 'TABLES'));\n        }, $DetatokoSaga_eval_game_system_specific_command$2.$$arity = 1);\n        \n        Opal.def(self, '$checkRoll', $DetatokoSaga_checkRoll$3 = function $$checkRoll(string) {\n          var $a, $b, $c, self = this, m = nil, skill = nil, flag = nil, operator = nil, value = nil, target = nil, $ret_or_2 = nil, result = nil, modifyText = nil, total = nil, rollText = nil, totalResult = nil, $case = nil, success = nil;\n\n          \n          self.$debug(\"checkRoll begin string\", string);\n          m = /^(\\d+)DS(\\d+)?(([+-\\/])(\\d+))?(?:>=(\\d+))?$/i.$match(string);\n          if ($truthy(m)) {\n          } else {\n            return nil\n          };\n          skill = m['$[]'](1).$to_i();\n          flag = m['$[]'](2).$to_i();\n          operator = m['$[]'](4);\n          value = m['$[]'](5).$to_i();\n          target = (function() {if ($truthy(($ret_or_2 = ($a = m['$[]'](6), ($a === nil || $a == null) ? nil : $send($a, 'to_i', []))))) {\n            return $ret_or_2\n          } else {\n            return 8\n          }; return nil; })();\n          result = self.$translate(\"DetatokoSaga.DS.input_options\", $hash2([\"skill\", \"flag\", \"target\"], {\"skill\": skill, \"flag\": flag, \"target\": target}));\n          modifyText = self.$getModifyText(operator, value);\n          if ($truthy(modifyText['$empty?']())) {\n          } else {\n            result = $rb_plus(result, self.$translate(\"DetatokoSaga.DS.modifier\", $hash2([\"modifier\"], {\"modifier\": modifyText})))\n          };\n          $c = self.$getRollResult(skill), $b = Opal.to_ary($c), (total = ($b[0] == null ? nil : $b[0])), (rollText = ($b[1] == null ? nil : $b[1])), $c;\n          result = $rb_plus(result, \"\" + \" ＞ \" + (total) + \"[\" + (rollText) + \"]\" + (modifyText));\n          totalResult = self.$getTotalResultValue(total, value, operator);\n          result = $rb_plus(result, \"\" + \" ＞ \" + (totalResult));\n          if ($truthy(modifyText['$empty?']())) {\n          } else {\n            $case = operator;\n            if (\"+\"['$===']($case)) {total = $rb_plus(total, value)}\n            else if (\"-\"['$===']($case)) {total = $rb_minus(total, value)}\n          };\n          success = self.$getSuccess(total, target);\n          result = $rb_plus(result, \"\" + \" ＞ \" + (success));\n          result = $rb_plus(result, self.$getCheckFlagResult(total, flag));\n          return result;\n        }, $DetatokoSaga_checkRoll$3.$$arity = 1);\n        \n        Opal.def(self, '$getRollResult', $DetatokoSaga_getRollResult$4 = function $$getRollResult(skill) {\n          var self = this, diceCount = nil, dice = nil, diceText = nil, total = nil;\n\n          \n          diceCount = $rb_plus(skill, 1);\n          if (skill['$=='](0)) {\n            diceCount = 3};\n          dice = self.randomizer.$roll_barabara(diceCount, 6);\n          diceText = dice.$join(\",\");\n          dice = dice.$sort();\n          if ($truthy(skill['$!='](0))) {\n            dice = dice.$reverse()};\n          total = $rb_plus(dice['$[]'](0), dice['$[]'](1));\n          return [total, diceText];\n        }, $DetatokoSaga_getRollResult$4.$$arity = 1);\n        \n        Opal.def(self, '$getSuccess', $DetatokoSaga_getSuccess$5 = function $$getSuccess(check, target) {\n          var self = this;\n\n          if ($truthy($rb_ge(check, target))) {\n            return self.$translate(\"DetatokoSaga.DS.success\")\n          } else {\n            return self.$translate(\"DetatokoSaga.DS.failure\")\n          }\n        }, $DetatokoSaga_getSuccess$5.$$arity = 2);\n        \n        Opal.def(self, '$getCheckFlagResult', $DetatokoSaga_getCheckFlagResult$6 = function $$getCheckFlagResult(total, flag) {\n          var self = this, will = nil;\n\n          \n          if ($truthy($rb_gt(total, flag))) {\n            return \"\"};\n          will = self.$getDownWill(flag);\n          return self.$translate(\"DetatokoSaga.less_than_flag\", $hash2([\"will\"], {\"will\": will}));\n        }, $DetatokoSaga_getCheckFlagResult$6.$$arity = 2);\n        \n        Opal.def(self, '$getDownWill', $DetatokoSaga_getDownWill$7 = function $$getDownWill(flag) {\n          var self = this, dice = nil;\n\n          \n          if ($truthy($rb_ge(flag, 10))) {\n            return \"6\"};\n          dice = self.randomizer.$roll_once(6);\n          return \"\" + \"1D6->\" + (dice);\n        }, $DetatokoSaga_getDownWill$7.$$arity = 1);\n        \n        Opal.def(self, '$checkJudgeValue', $DetatokoSaga_checkJudgeValue$8 = function $$checkJudgeValue(string) {\n          var $a, $b, self = this, m = nil, skill = nil, flag = nil, operator = nil, value = nil, result = nil, modifyText = nil, total = nil, rollText = nil, totalResult = nil;\n\n          \n          self.$debug(\"checkJudgeValue begin string\", string);\n          m = /^(\\d+)JD(\\d+)?(([+-\\/])(\\d+))?$/i.$match(string);\n          if ($truthy(m)) {\n          } else {\n            return nil\n          };\n          skill = m['$[]'](1).$to_i();\n          flag = m['$[]'](2).$to_i();\n          operator = m['$[]'](4);\n          value = m['$[]'](5).$to_i();\n          result = self.$translate(\"DetatokoSaga.JD.input_options\", $hash2([\"skill\", \"flag\"], {\"skill\": skill, \"flag\": flag}));\n          modifyText = self.$getModifyText(operator, value);\n          if ($truthy(modifyText['$empty?']())) {\n          } else {\n            result = $rb_plus(result, self.$translate(\"DetatokoSaga.JD.modifier\", $hash2([\"modifier\"], {\"modifier\": modifyText})))\n          };\n          $b = self.$getRollResult(skill), $a = Opal.to_ary($b), (total = ($a[0] == null ? nil : $a[0])), (rollText = ($a[1] == null ? nil : $a[1])), $b;\n          result = $rb_plus(result, \"\" + \" ＞ \" + (total) + \"[\" + (rollText) + \"]\" + (modifyText));\n          totalResult = self.$getTotalResultValue(total, value, operator);\n          result = $rb_plus(result, \"\" + \" ＞ \" + (totalResult));\n          result = $rb_plus(result, self.$getCheckFlagResult(total, flag));\n          return result;\n        }, $DetatokoSaga_checkJudgeValue$8.$$arity = 1);\n        \n        Opal.def(self, '$getModifyText', $DetatokoSaga_getModifyText$9 = function $$getModifyText(operator, value) {\n          var self = this, operatorText = nil, $case = nil;\n\n          \n          if (value['$=='](0)) {\n            return \"\"};\n          operatorText = (function() {$case = operator;\n          if (\"+\"['$===']($case)) {return \"＋\"}\n          else if (\"-\"['$===']($case)) {return \"－\"}\n          else if (\"/\"['$===']($case)) {return \"÷\"}\n          else {return \"\"}})();\n          return \"\" + (operatorText) + (value);\n        }, $DetatokoSaga_getModifyText$9.$$arity = 2);\n        \n        Opal.def(self, '$getTotalResultValue', $DetatokoSaga_getTotalResultValue$10 = function $$getTotalResultValue(total, value, operator) {\n          var self = this, $case = nil;\n\n          return (function() {$case = operator;\n          if (\"+\"['$===']($case)) {return $rb_plus(\"\" + (total) + \"+\" + (value) + \" ＞ \", self.$translate(\"DetatokoSaga.total_value\", $hash2([\"total\"], {\"total\": $rb_plus(total, value)})))}\n          else if (\"-\"['$===']($case)) {return $rb_plus(\"\" + (total) + \"-\" + (value) + \" ＞ \", self.$translate(\"DetatokoSaga.total_value\", $hash2([\"total\"], {\"total\": $rb_minus(total, value)})))}\n          else if (\"/\"['$===']($case)) {return self.$getTotalResultValueWhenSlash(total, value)}\n          else {return self.$translate(\"DetatokoSaga.total_value\", $hash2([\"total\"], {\"total\": total}))}})()\n        }, $DetatokoSaga_getTotalResultValue$10.$$arity = 3);\n        \n        Opal.def(self, '$getTotalResultValueWhenSlash', $DetatokoSaga_getTotalResultValueWhenSlash$11 = function $$getTotalResultValueWhenSlash(total, value) {\n          var self = this, quotient = nil, result = nil;\n\n          \n          if (value['$=='](0)) {\n            return self.$translate(\"DetatokoSaga.division_by_zero_error\")};\n          quotient = $rb_divide($rb_times(1.0, total), value).$ceil();\n          result = $rb_plus(\"\" + (total) + \"÷\" + (value) + \" ＞ \", self.$translate(\"DetatokoSaga.total_value\", $hash2([\"total\"], {\"total\": quotient})));\n          return result;\n        }, $DetatokoSaga_getTotalResultValueWhenSlash$11.$$arity = 2);\n        Opal.const_set($nesting[0], 'ALIAS', $send($hash2([\"StrengthStigmaTable\", \"WillStigmaTable\", \"StrengthBadEndTable\", \"WillBadEndTable\"], {\"StrengthStigmaTable\": \"SST\", \"WillStigmaTable\": \"WST\", \"StrengthBadEndTable\": \"SBET\", \"WillBadEndTable\": \"WBET\"}), 'transform_keys', [], \"upcase\".$to_proc()).$freeze());\n        Opal.defs(self, '$translate_tables', $DetatokoSaga_translate_tables$12 = function $$translate_tables(locale) {\n          var self = this;\n\n          return $hash2([\"SST\", \"WST\", \"SBET\", \"WBET\"], {\"SST\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"DetatokoSaga.table.SST\", locale), \"WST\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"DetatokoSaga.table.WST\", locale), \"SBET\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"DetatokoSaga.table.SBET\", locale), \"WBET\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"DetatokoSaga.table.WBET\", locale)})\n        }, $DetatokoSaga_translate_tables$12.$$arity = 1);\n        Opal.const_set($nesting[0], 'TABLES', self.$translate_tables(\"ja_jp\").$freeze());\n        return self.$register_prefix($$($nesting, 'TABLES').$keys(), $$($nesting, 'ALIAS').$keys());\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n})(Opal);\n"],"sourceRoot":"webpack:///"}