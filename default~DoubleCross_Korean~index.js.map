{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/DoubleCross_Korean.js"],"names":["require","Opal","modules","self","top","$nesting","nil","$$$","$$","$module","module","$hash2","hash2","$truthy","truthy","$base","$parent_nesting","concat","$eval$1","def","expr","$kwargs","round_type","$ret_or_1","$$is_hash","ArgumentError","$new","$$smap","$eval","$$arity","get_singleton_class","$rb_minus","lhs","rhs","$rb_times","$rb_plus","$klass","klass","$send","send","$super","$RangeTable$1","$RangeTable_initialize$3","$RangeTable_fetch$4","$RangeTable_roll$6","$RangeTable_store$7","$RangeTable_coerce_to_int_range$11","$RangeTable_assert_min_sum_is_covered$12","$RangeTable_assert_max_sum_is_covered$13","$RangeTable_assert_no_gap_or_overlap_in_ranges$14","$$prototype","name","items","num_of_dice","num_of_sides","formatter","const_set","$$s","$alias_method","$freeze","$$2","table","result","$name","$sum","$content","$attr_reader","$$initialize","dice_roll_method","$iter","$$p","m","$match","$raise","$to_i","$store","$$fetch","value","$$5","item","i","$range","$$roll","randomizer","values","sum","$writer","$roll_barabara","$fetch","to_a","$private","$$store","$$8","$$9","$$10","items_with_range","sorted_items","r","c","$coerce_to_int_range","_","$min","$assert_min_sum_is_covered","$assert_max_sum_is_covered","$assert_no_gap_or_overlap_in_ranges","range","content","$$coerce_to_int_range","x","$case","$ret_or_2","$begin","$end","$class","$$assert_min_sum_is_covered","min_sum","$first","$$assert_max_sum_is_covered","max_sum","$last","$$assert_no_gap_or_overlap_in_ranges","$$15","i1","i2","r1","r2","max1","next_of_max1","$max","$rb_lt","$rb_gt","$rb_ge","$require","$DoubleCross_eval_game_system_specific_command$12","$DoubleCross_parse_dx$13","$DoubleCross_parse_dx_od$14","$DoubleCross_parse_dx_shippu_doto$15","$DoubleCross_roll_emotion_table$17","$register_prefix","$DX_initialize$1","$DX_execute$2","$DX_node_expression$3","$DX_result$4","modifier","critical_value","expression","num","modifier_str","target_value","$include","$modifier","$node_expression","locale","$$execute","$a","value_groups","loop_count","value_group","$translate","$failure","$push","$num_of_critical_occurrences","$result","$$node_expression","$$result","achieved_value","achieved_value_with_if_fumble","parts","success","compare_result_text","$values","$to_proc","$to_s","$join","$ValueGroup_initialize$5","$ValueGroup_to_s$6","$ValueGroup_max$7","$ValueGroup_num_of_critical_occurrences$9","$ValueGroup_critical$ques$11","$sort","$$to_s","$$max","$$num_of_critical_occurrences","$$eval_game_system_specific_command","command","dx","$parse_dx","$execute","$roll_emotion_table","$$parse_dx","$ret_or_3","$parse_dx_od","$parse_dx_shippu_doto","$$parse_dx_od","parser","parsed","$ret_or_4","$round_type","$enable_critical","$restrict_cmp_op_to","$parse","$command","$critical","$modify_number","$target_number","$$parse_dx_shippu_doto","$b","$$16","$ret_or_5","$split","$c","to_ary","$$roll_emotion_table","pos_result","neg_result","positive","pos_neg_text","output_parts","$roll","$roll_once","$positive_emotion_table$18","$negative_emotion_table$19","$$positive_emotion_table","$$negative_emotion_table","$positive_emotion_table","$negative_emotion_table","$send2","send2","$DoubleCross_Korean_initialize$1","$register_prefix_from_super_class","$yield","find_super_dispatcher","$DX_initialize$2"],"mappings":"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","file":"default~DoubleCross_Korean~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/arithmetic_evaluator\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'ArithmeticEvaluator');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $eval$1;\n\n        return (Opal.def(self, '$eval', $eval$1 = function(expr, $kwargs) {\n          var round_type, self = this, $ret_or_1 = nil;\n\n          \n          \n          if ($kwargs == null) {\n            $kwargs = $hash2([], {});\n          } else if (!$kwargs.$$is_hash) {\n            throw Opal.ArgumentError.$new('expected kwargs');\n          };\n          \n          round_type = $kwargs.$$smap[\"round_type\"];\n          if (round_type == null) {\n            round_type = $$$($$($nesting, 'RoundType'), 'FLOOR')\n          };\n          if ($truthy(expr)) {\n          } else {\n            return 0\n          };\n          if ($truthy(($ret_or_1 = $$($nesting, 'Arithmetic').$eval(expr, round_type)))) {\n            return $ret_or_1\n          } else {\n            return 0\n          };\n        }, $eval$1.$$arity = -2), nil) && 'eval'\n      })(Opal.get_singleton_class(self), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/dice_table/range_table\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'DiceTable');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'RangeTable');\n\n        var $nesting = [self].concat($parent_nesting), $RangeTable$1, $RangeTable_initialize$3, $RangeTable_fetch$4, $RangeTable_roll$6, $RangeTable_store$7, $RangeTable_coerce_to_int_range$11, $RangeTable_assert_min_sum_is_covered$12, $RangeTable_assert_max_sum_is_covered$13, $RangeTable_assert_no_gap_or_overlap_in_ranges$14;\n\n        self.$$prototype.name = self.$$prototype.items = self.$$prototype.num_of_dice = self.$$prototype.num_of_sides = self.$$prototype.formatter = nil;\n        \n        Opal.const_set($nesting[0], 'RollResult', $send($$($nesting, 'Struct'), 'new', [\"sum\", \"values\", \"content\", \"formatted\"], ($RangeTable$1 = function(){var self = $RangeTable$1.$$s == null ? this : $RangeTable$1.$$s;\n\n        return self.$alias_method(\"to_s\", \"formatted\")}, $RangeTable$1.$$s = self, $RangeTable$1.$$arity = 0, $RangeTable$1)));\n        Opal.const_set($nesting[0], 'Item', $$($nesting, 'Struct').$new(\"range\", \"content\"));\n        Opal.const_set($nesting[0], 'DICE_ROLL_METHOD_RE', /^(\\d+)D(\\d+)$/i.$freeze());\n        Opal.const_set($nesting[0], 'DEFAULT_FORMATTER', $send(self, 'lambda', [], ($$2 = function(table, result){var self = $$2.$$s == null ? this : $$2.$$s;\n\n        \n          \n          if (table == null) {\n            table = nil;\n          };\n          \n          if (result == null) {\n            result = nil;\n          };\n          return \"\" + (table.$name()) + \"(\" + (result.$sum()) + \") ＞ \" + (result.$content());}, $$2.$$s = self, $$2.$$arity = 2, $$2)));\n        self.$attr_reader(\"name\");\n        self.$attr_reader(\"num_of_dice\");\n        self.$attr_reader(\"num_of_sides\");\n        \n        Opal.def(self, '$initialize', $RangeTable_initialize$3 = function $$initialize(name, dice_roll_method, items) {\n          var $iter = $RangeTable_initialize$3.$$p, formatter = $iter || nil, self = this, $ret_or_1 = nil, m = nil;\n\n          if ($iter) $RangeTable_initialize$3.$$p = null;\n          \n          \n          if ($iter) $RangeTable_initialize$3.$$p = null;;\n          self.name = name.$freeze();\n          self.formatter = (function() {if ($truthy(($ret_or_1 = formatter))) {\n            return $ret_or_1\n          } else {\n            return $$($nesting, 'DEFAULT_FORMATTER')\n          }; return nil; })();\n          m = $$($nesting, 'DICE_ROLL_METHOD_RE').$match(dice_roll_method);\n          if ($truthy(m)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + (self.name) + \": invalid dice roll method: \" + (dice_roll_method))\n          };\n          self.num_of_dice = m['$[]'](1).$to_i();\n          self.num_of_sides = m['$[]'](2).$to_i();\n          return self.$store(items);\n        }, $RangeTable_initialize$3.$$arity = 3);\n        \n        Opal.def(self, '$fetch', $RangeTable_fetch$4 = function $$fetch(value) {\n          var $$5, self = this, item = nil;\n\n          \n          item = $send(self.items, 'find', [], ($$5 = function(i){var self = $$5.$$s == null ? this : $$5.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return i.$range()['$include?'](value);}, $$5.$$s = self, $$5.$$arity = 1, $$5));\n          if ($truthy(item)) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": value is out of range: \" + (value))\n          };\n          return item;\n        }, $RangeTable_fetch$4.$$arity = 1);\n        \n        Opal.def(self, '$roll', $RangeTable_roll$6 = function $$roll(randomizer) {\n          var self = this, values = nil, sum = nil, result = nil, $writer = nil;\n\n          \n          values = randomizer.$roll_barabara(self.num_of_dice, self.num_of_sides);\n          sum = values.$sum();\n          result = $$($nesting, 'RollResult').$new(sum, values, self.$fetch(sum).$content());\n          \n          $writer = [self.formatter['$[]'](self, result)];\n          $send(result, 'formatted=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return result;\n        }, $RangeTable_roll$6.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$store', $RangeTable_store$7 = function $$store(items) {\n          var $$8, $$9, $$10, self = this, items_with_range = nil, sorted_items = nil;\n\n          \n          items_with_range = $send(items, 'map', [], ($$8 = function(r, c){var self = $$8.$$s == null ? this : $$8.$$s;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            if (c == null) {\n              c = nil;\n            };\n            return [self.$coerce_to_int_range(r), c];}, $$8.$$s = self, $$8.$$arity = 2, $$8));\n          sorted_items = $send(items_with_range, 'sort_by', [], ($$9 = function(r, _){var self = $$9.$$s == null ? this : $$9.$$s;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            if (_ == null) {\n              _ = nil;\n            };\n            return r.$min();}, $$9.$$s = self, $$9.$$arity = 2, $$9));\n          self.$assert_min_sum_is_covered(sorted_items);\n          self.$assert_max_sum_is_covered(sorted_items);\n          self.$assert_no_gap_or_overlap_in_ranges(sorted_items);\n          self.items = $send(sorted_items, 'map', [], ($$10 = function(range, content){var self = $$10.$$s == null ? this : $$10.$$s;\n\n          \n            \n            if (range == null) {\n              range = nil;\n            };\n            \n            if (content == null) {\n              content = nil;\n            };\n            return $$($nesting, 'Item').$new(range, content.$freeze()).$freeze();}, $$10.$$s = self, $$10.$$arity = 2, $$10)).$freeze();\n          return self;\n        }, $RangeTable_store$7.$$arity = 1);\n        \n        Opal.def(self, '$coerce_to_int_range', $RangeTable_coerce_to_int_range$11 = function $$coerce_to_int_range(x) {\n          var self = this, $case = nil, $ret_or_2 = nil;\n\n          \n          $case = x;\n          if ($$($nesting, 'Integer')['$===']($case)) {return $$($nesting, 'Range').$new(x, x)}\n          else if ($$($nesting, 'Range')['$===']($case)) {if ($truthy((function() {if ($truthy(($ret_or_2 = x.$begin()['$is_a?']($$($nesting, 'Integer'))))) {\n            return x.$end()['$is_a?']($$($nesting, 'Integer'))\n          } else {\n            return $ret_or_2\n          }; return nil; })())) {\n            return x}};\n          return self.$raise($$($nesting, 'TypeError'), \"\" + (self.name) + \": \" + (x) + \" (\" + (x.$class()) + \") must be an Integer or a Range with Integers \");\n        }, $RangeTable_coerce_to_int_range$11.$$arity = 1);\n        \n        Opal.def(self, '$assert_min_sum_is_covered', $RangeTable_assert_min_sum_is_covered$12 = function $$assert_min_sum_is_covered(sorted_items) {\n          var self = this, min_sum = nil, range = nil;\n\n          \n          min_sum = self.num_of_dice;\n          range = sorted_items.$first()['$[]'](0);\n          if ($truthy(range['$include?'](min_sum))) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": min value (\" + (min_sum) + \") is not covered: \" + (range))\n          };\n          return self;\n        }, $RangeTable_assert_min_sum_is_covered$12.$$arity = 1);\n        \n        Opal.def(self, '$assert_max_sum_is_covered', $RangeTable_assert_max_sum_is_covered$13 = function $$assert_max_sum_is_covered(sorted_items) {\n          var self = this, max_sum = nil, range = nil;\n\n          \n          max_sum = $rb_times(self.num_of_dice, self.num_of_sides);\n          range = sorted_items.$last()['$[]'](0);\n          if ($truthy(range['$include?'](max_sum))) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": max value (\" + (max_sum) + \") is not covered: \" + (range))\n          };\n          return self;\n        }, $RangeTable_assert_max_sum_is_covered$13.$$arity = 1);\n        return (Opal.def(self, '$assert_no_gap_or_overlap_in_ranges', $RangeTable_assert_no_gap_or_overlap_in_ranges$14 = function $$assert_no_gap_or_overlap_in_ranges(sorted_items) {\n          var $$15, self = this;\n\n          \n          $send(sorted_items, 'each_cons', [2], ($$15 = function(i1, i2){var self = $$15.$$s == null ? this : $$15.$$s, r1 = nil, r2 = nil, max1 = nil, next_of_max1 = nil;\n            if (self.name == null) self.name = nil;\n\n          \n            \n            if (i1 == null) {\n              i1 = nil;\n            };\n            \n            if (i2 == null) {\n              i2 = nil;\n            };\n            r1 = i1['$[]'](0);\n            r2 = i2['$[]'](0);\n            max1 = r1.$max();\n            next_of_max1 = $rb_plus(max1, 1);\n            if ($truthy(r2['$include?'](max1))) {\n              self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": Range overlap: \" + (r1) + \" and \" + (r2))};\n            if ($truthy(r2['$include?'](next_of_max1))) {\n              return nil\n            } else {\n              return self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": Range gap: \" + (r1) + \" and \" + (r2))\n            };}, $$15.$$s = self, $$15.$$arity = 2, $$15));\n          return self;\n        }, $RangeTable_assert_no_gap_or_overlap_in_ranges$14.$$arity = 1), nil) && 'assert_no_gap_or_overlap_in_ranges';\n      })($nesting[0], null, $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/game_system/DoubleCross\"] = function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send, $hash2 = Opal.hash2, $range = Opal.range;\n\n  \n  self.$require(\"bcdice/arithmetic_evaluator\");\n  self.$require(\"bcdice/dice_table/range_table\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'DoubleCross');\n\n        var $nesting = [self].concat($parent_nesting), $DoubleCross_eval_game_system_specific_command$12, $DoubleCross_parse_dx$13, $DoubleCross_parse_dx_od$14, $DoubleCross_parse_dx_shippu_doto$15, $DoubleCross_roll_emotion_table$17;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"DoubleCross\");\n        Opal.const_set($nesting[0], 'NAME', \"ダブルクロス2nd,3rd\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"たふるくろす2\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・判定コマンド（xDX+y@c or xDXc+y）\\n\" + \"　\\\"(個数)DX(修正)@(クリティカル値)\\\" もしくは \\\"(個数)DX(クリティカル値)(修正)\\\" で指定します。\\n\" + \"　修正値も付けられます。\\n\" + \"　例）10dx　　10dx+5@8（OD tool式)　　5DX7+7-3（疾風怒濤式）\\n\" + \"\\n\" + \"・各種表\\n\" + \"　・感情表（ET）\\n\" + \"　　ポジティブとネガティブの両方を振って、表になっている側に○を付けて表示します。\\n\" + \"　　もちろん任意で選ぶ部分は変更して構いません。\\n\" + \"\\n\" + \"・D66ダイスあり\\n\");\n        self.$register_prefix(\"\\\\d+DX\", \"ET\");\n        (function($base, $super, $parent_nesting) {\n          var self = $klass($base, $super, 'DX');\n\n          var $nesting = [self].concat($parent_nesting), $DX_initialize$1, $DX_execute$2, $DX_node_expression$3, $DX_result$4;\n\n          self.$$prototype.modifier = self.$$prototype.critical_value = self.$$prototype.expression = self.$$prototype.num = self.$$prototype.modifier_str = self.$$prototype.target_value = nil;\n          \n          self.$include($$($nesting, 'Translate'));\n          \n          Opal.def(self, '$initialize', $DX_initialize$1 = function $$initialize(num, critical_value, modifier, target_value) {\n            var self = this;\n\n            \n            self.num = num;\n            self.critical_value = critical_value;\n            self.modifier = modifier;\n            self.target_value = target_value;\n            self.modifier_str = $$($nesting, 'Format').$modifier(self.modifier);\n            self.expression = self.$node_expression();\n            return (self.locale = \"ja_jp\");\n          }, $DX_initialize$1.$$arity = 4);\n          \n          Opal.def(self, '$execute', $DX_execute$2 = function $$execute(randomizer) {\n            var $a, self = this, value_groups = nil, num_of_dice = nil, loop_count = nil, $ret_or_1 = nil, values = nil, value_group = nil;\n\n            \n            if ($truthy($rb_lt(self.critical_value, 2))) {\n              return $$($nesting, 'Result').$new(\"\" + \"(\" + (self.expression) + \") ＞ \" + (self.$translate(\"DoubleCross.DX.invalid_critical\")))};\n            if ($truthy($rb_lt(self.num, 1))) {\n              return $$($nesting, 'Result').$failure(\"\" + \"(\" + (self.expression) + \") ＞ \" + (self.$translate(\"DoubleCross.DX.auto_failure\")))};\n            value_groups = [];\n            num_of_dice = self.num;\n            loop_count = 0;\n            while ($truthy((function() {if ($truthy(($ret_or_1 = $rb_gt(num_of_dice, 0)))) {\n              return $rb_lt(loop_count, $$$($$$($$($nesting, 'CommonCommand'), 'RerollDice'), 'REROLL_LIMIT'))\n            } else {\n              return $ret_or_1\n            }; return nil; })())) {\n              \n              values = randomizer.$roll_barabara(num_of_dice, 10);\n              value_group = $$($nesting, 'ValueGroup').$new(values, self.critical_value);\n              value_groups.$push(value_group);\n              num_of_dice = value_group.$num_of_critical_occurrences();\n              loop_count = $rb_plus(loop_count, 1);\n            };\n            return self.$result(value_groups);\n          }, $DX_execute$2.$$arity = 1);\n          self.$private();\n          \n          Opal.def(self, '$node_expression', $DX_node_expression$3 = function $$node_expression() {\n            var self = this, lhs = nil;\n\n            \n            lhs = \"\" + (self.num) + \"DX\" + (self.critical_value) + (self.modifier_str);\n            return (function() {if ($truthy(self.target_value)) {\n              return \"\" + (lhs) + \">=\" + (self.target_value)\n            } else {\n              return lhs\n            }; return nil; })();\n          }, $DX_node_expression$3.$$arity = 0);\n          return (Opal.def(self, '$result', $DX_result$4 = function $$result(value_groups) {\n            var self = this, r = nil, $writer = nil, sum = nil, achieved_value = nil, achieved_value_with_if_fumble = nil, parts = nil, success = nil, $ret_or_2 = nil, compare_result_text = nil;\n\n            \n            r = $$($nesting, 'Result').$new();\n            \n            $writer = [value_groups['$[]'](0).$values()['$all?'](1)];\n            $send(r, 'fumble=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            sum = $send(value_groups, 'map', [], \"max\".$to_proc()).$sum();\n            achieved_value = (function() {if ($truthy(r['$fumble?']())) {\n              return 0\n            } else {\n              \n              return $rb_plus(sum, self.modifier);\n            }; return nil; })();\n            achieved_value_with_if_fumble = (function() {if ($truthy(r['$fumble?']())) {\n              return \"\" + (achieved_value) + \" (\" + (self.$translate(\"fumble\")) + \")\"\n            } else {\n              return achieved_value.$to_s()\n            }; return nil; })();\n            parts = [\"\" + \"(\" + (self.expression) + \")\", \"\" + (value_groups.$join(\"+\")) + (self.modifier_str), achieved_value_with_if_fumble];\n            if ($truthy(self.target_value)) {\n              \n              success = (function() {if ($truthy(($ret_or_2 = r['$fumble?']()['$!']()))) {\n                \n                return $rb_ge(achieved_value, self.target_value);\n              } else {\n                return $ret_or_2\n              }; return nil; })();\n              if ($truthy(success)) {\n                \n                $writer = [true];\n                $send(r, 'success=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              } else {\n                \n                $writer = [true];\n                $send(r, 'failure=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };\n              compare_result_text = self.$translate((function() {if ($truthy(success)) {\n                return \"success\"\n              } else {\n                return \"failure\"\n              }; return nil; })());\n              parts.$push(compare_result_text);};\n            \n            $writer = [parts.$join(\" ＞ \")];\n            $send(r, 'text=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return r;\n          }, $DX_result$4.$$arity = 1), nil) && 'result';\n        })($nesting[0], null, $nesting);\n        (function($base, $super, $parent_nesting) {\n          var self = $klass($base, $super, 'ValueGroup');\n\n          var $nesting = [self].concat($parent_nesting), $ValueGroup_initialize$5, $ValueGroup_to_s$6, $ValueGroup_max$7, $ValueGroup_num_of_critical_occurrences$9, $ValueGroup_critical$ques$11;\n\n          self.$$prototype.values = self.$$prototype.critical_value = nil;\n          \n          self.$attr_reader(\"values\");\n          self.$attr_reader(\"critical_value\");\n          \n          Opal.def(self, '$initialize', $ValueGroup_initialize$5 = function $$initialize(values, critical_value) {\n            var self = this;\n\n            \n            self.values = values.$sort();\n            return (self.critical_value = critical_value);\n          }, $ValueGroup_initialize$5.$$arity = 2);\n          \n          Opal.def(self, '$to_s', $ValueGroup_to_s$6 = function $$to_s() {\n            var self = this;\n\n            return \"\" + (self.$max()) + \"[\" + (self.values.$join(\",\")) + \"]\"\n          }, $ValueGroup_to_s$6.$$arity = 0);\n          \n          Opal.def(self, '$max', $ValueGroup_max$7 = function $$max() {\n            var $$8, self = this;\n\n            if ($truthy($send(self.values, 'any?', [], ($$8 = function(value){var self = $$8.$$s == null ? this : $$8.$$s;\n\n            \n              \n              if (value == null) {\n                value = nil;\n              };\n              return self['$critical?'](value);}, $$8.$$s = self, $$8.$$arity = 1, $$8)))) {\n              return 10\n            } else {\n              return self.values.$max()\n            }\n          }, $ValueGroup_max$7.$$arity = 0);\n          \n          Opal.def(self, '$num_of_critical_occurrences', $ValueGroup_num_of_critical_occurrences$9 = function $$num_of_critical_occurrences() {\n            var $$10, self = this;\n\n            return $send(self.values, 'count', [], ($$10 = function(value){var self = $$10.$$s == null ? this : $$10.$$s;\n\n            \n              \n              if (value == null) {\n                value = nil;\n              };\n              return self['$critical?'](value);}, $$10.$$s = self, $$10.$$arity = 1, $$10))\n          }, $ValueGroup_num_of_critical_occurrences$9.$$arity = 0);\n          self.$private();\n          return (Opal.def(self, '$critical?', $ValueGroup_critical$ques$11 = function(value) {\n            var self = this;\n\n            return $rb_ge(value, self.critical_value)\n          }, $ValueGroup_critical$ques$11.$$arity = 1), nil) && 'critical?';\n        })($nesting[0], null, $nesting);\n        \n        Opal.def(self, '$eval_game_system_specific_command', $DoubleCross_eval_game_system_specific_command$12 = function $$eval_game_system_specific_command(command) {\n          var self = this, dx = nil;\n\n          \n          if ($truthy((dx = self.$parse_dx(command)))) {\n            return dx.$execute(self.randomizer)};\n          if (command['$=='](\"ET\")) {\n            return self.$roll_emotion_table()};\n          return nil;\n        }, $DoubleCross_eval_game_system_specific_command$12.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$parse_dx', $DoubleCross_parse_dx$13 = function $$parse_dx(command) {\n          var self = this, $ret_or_3 = nil;\n\n          if ($truthy(($ret_or_3 = self.$parse_dx_od(command)))) {\n            return $ret_or_3\n          } else {\n            return self.$parse_dx_shippu_doto(command)\n          }\n        }, $DoubleCross_parse_dx$13.$$arity = 1);\n        \n        Opal.def(self, '$parse_dx_od', $DoubleCross_parse_dx_od$14 = function $$parse_dx_od(command) {\n          var self = this, parser = nil, parsed = nil, num = nil, critical_value = nil, $ret_or_4 = nil;\n\n          \n          parser = $$$($$($nesting, 'Command'), 'Parser').$new(/\\d+DX/, $hash2([\"round_type\"], {\"round_type\": self.$round_type()})).$enable_critical().$restrict_cmp_op_to(nil, \">=\");\n          parsed = parser.$parse(command);\n          if ($truthy(parsed)) {\n          } else {\n            return nil\n          };\n          num = parsed.$command().$to_i();\n          critical_value = (function() {if ($truthy(($ret_or_4 = parsed.$critical()))) {\n            return $ret_or_4\n          } else {\n            return 10\n          }; return nil; })();\n          return $$$(self.$class(), 'DX').$new(num, critical_value, parsed.$modify_number(), parsed.$target_number());\n        }, $DoubleCross_parse_dx_od$14.$$arity = 1);\n        \n        Opal.def(self, '$parse_dx_shippu_doto', $DoubleCross_parse_dx_shippu_doto$15 = function $$parse_dx_shippu_doto(command) {\n          var $a, $b, $$16, self = this, parser = nil, parsed = nil, num = nil, critical_value = nil, $ret_or_5 = nil;\n\n          \n          parser = $$$($$($nesting, 'Command'), 'Parser').$new(/\\d+DX\\d*/, $hash2([\"round_type\"], {\"round_type\": self.$round_type()})).$restrict_cmp_op_to(nil, \">=\");\n          parsed = parser.$parse(command);\n          if ($truthy(parsed)) {\n          } else {\n            return nil\n          };\n          $b = $send(parsed.$command().$split(\"DX\", 2), 'map', [], ($$16 = function(x){var self = $$16.$$s == null ? this : $$16.$$s, $c;\n\n          \n            \n            if (x == null) {\n              x = nil;\n            };\n            return ($c = x, ($c === nil || $c == null) ? nil : $send($c, 'to_i', []));}, $$16.$$s = self, $$16.$$arity = 1, $$16)), $a = Opal.to_ary($b), (num = ($a[0] == null ? nil : $a[0])), (critical_value = ($a[1] == null ? nil : $a[1])), $b;\n          critical_value = (function() {if ($truthy(($ret_or_5 = critical_value))) {\n            return $ret_or_5\n          } else {\n            return 10\n          }; return nil; })();\n          return $$$(self.$class(), 'DX').$new(num, critical_value, parsed.$modify_number(), parsed.$target_number());\n        }, $DoubleCross_parse_dx_shippu_doto$15.$$arity = 1);\n        \n        Opal.def(self, '$roll_emotion_table', $DoubleCross_roll_emotion_table$17 = function $$roll_emotion_table() {\n          var self = this, pos_result = nil, neg_result = nil, positive = nil, pos_neg_text = nil, name = nil, output_parts = nil;\n\n          \n          pos_result = $$$(self.$class(), 'POSITIVE_EMOTION_TABLE').$roll(self.randomizer);\n          neg_result = $$$(self.$class(), 'NEGATIVE_EMOTION_TABLE').$roll(self.randomizer);\n          positive = self.randomizer.$roll_once(2)['$=='](1);\n          pos_neg_text = (function() {if ($truthy(positive)) {\n            return [\"\" + \"○\" + (pos_result.$content()), neg_result.$content()]\n          } else {\n            return [pos_result.$content(), \"\" + \"○\" + (neg_result.$content())]\n          }; return nil; })();\n          name = self.$translate(\"DoubleCross.ET.name\");\n          output_parts = [\"\" + (name) + \"(\" + (pos_result.$sum()) + \"-\" + (neg_result.$sum()) + \")\", pos_neg_text.$join(\" - \")];\n          return $$($nesting, 'Result').$new(output_parts.$join(\" ＞ \"));\n        }, $DoubleCross_roll_emotion_table$17.$$arity = 0);\n        (function(self, $parent_nesting) {\n          var $nesting = [self].concat($parent_nesting), $positive_emotion_table$18, $negative_emotion_table$19;\n\n          \n          self.$private();\n          \n          Opal.def(self, '$positive_emotion_table', $positive_emotion_table$18 = function $$positive_emotion_table(locale) {\n            var self = this;\n\n            return $$$($$($nesting, 'DiceTable'), 'RangeTable').$new($$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.name\", $hash2([\"locale\"], {\"locale\": locale})), \"1D100\", [[$range(1, 5, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.1_5\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(6, 10, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.6_10\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(11, 15, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.11_15\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(16, 20, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.16_20\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(21, 25, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.21_25\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(26, 30, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.26_30\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(31, 35, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.31_35\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(36, 40, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.36_40\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(41, 45, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.41_45\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(46, 50, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.46_50\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(51, 55, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.51_55\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(56, 60, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.56_60\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(61, 65, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.61_65\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(66, 70, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.66_70\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(71, 75, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.71_75\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(76, 80, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.76_80\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(81, 85, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.81_85\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(86, 90, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.86_90\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(91, 95, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.91_95\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(96, 100, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.positive.items.96_100\", $hash2([\"locale\"], {\"locale\": locale}))]])\n          }, $positive_emotion_table$18.$$arity = 1);\n          return (Opal.def(self, '$negative_emotion_table', $negative_emotion_table$19 = function $$negative_emotion_table(locale) {\n            var self = this;\n\n            return $$$($$($nesting, 'DiceTable'), 'RangeTable').$new($$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.name\", $hash2([\"locale\"], {\"locale\": locale})), \"1D100\", [[$range(1, 5, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.1_5\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(6, 10, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.6_10\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(11, 15, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.11_15\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(16, 20, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.16_20\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(21, 25, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.21_25\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(26, 30, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.26_30\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(31, 35, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.31_35\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(36, 40, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.36_40\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(41, 45, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.41_45\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(46, 50, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.46_50\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(51, 55, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.51_55\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(56, 60, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.56_60\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(61, 65, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.61_65\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(66, 70, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.66_70\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(71, 75, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.71_75\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(76, 80, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.76_80\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(81, 85, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.81_85\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(86, 90, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.86_90\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(91, 95, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.91_95\", $hash2([\"locale\"], {\"locale\": locale}))], [$range(96, 100, false), $$($nesting, 'I18n').$translate(\"DoubleCross.ET.negative.items.96_100\", $hash2([\"locale\"], {\"locale\": locale}))]]).$freeze()\n          }, $negative_emotion_table$19.$$arity = 1), nil) && 'negative_emotion_table';\n        })(Opal.get_singleton_class(self), $nesting);\n        Opal.const_set($nesting[0], 'POSITIVE_EMOTION_TABLE', self.$positive_emotion_table(\"ja_jp\").$freeze());\n        return Opal.const_set($nesting[0], 'NEGATIVE_EMOTION_TABLE', self.$negative_emotion_table(\"ja_jp\").$freeze());\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n};\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send2 = Opal.send2;\n\n  \n  self.$require(\"bcdice/game_system/DoubleCross\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'DoubleCross_Korean');\n\n        var $nesting = [self].concat($parent_nesting), $DoubleCross_Korean_initialize$1;\n\n        \n        Opal.const_set($nesting[0], 'ID', \"DoubleCross:Korean\");\n        Opal.const_set($nesting[0], 'NAME', \"더블크로스2nd,3rd\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"国際化:Korean:더블크로스\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・판정 커맨드（xDX+y@c or xDXc+y）\\n\" + \"　\\\"(개수)DX(수정)@(크리티컬치)\\\" 혹은 \\\"(개수)DX(크리티컬치)(수정)\\\" 으로 지정합니다.\\n\" + \"　수정치도 붙일 수 있습니다.\\n\" + \"　예）10dx　　10dx+5@8（OD tool식)　　5DX7+7-3（질풍노도식）\\n\" + \"・각종표\\n\" + \"　・감정표（ET）\\n\" + \"　　포지티브와 네거티브 양쪽을 굴려, 겉으로 나타는 쪽에 O를 붙여 표시합니다.\\n\" + \"　　물론 임의로 정하는 부분을 변경해도 괜찮습니다.\\n\" + \"・D66다이스 있음\\n\");\n        self.$register_prefix_from_super_class();\n        \n        Opal.def(self, '$initialize', $DoubleCross_Korean_initialize$1 = function $$initialize(command) {\n          var $iter = $DoubleCross_Korean_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $DoubleCross_Korean_initialize$1.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $DoubleCross_Korean_initialize$1, false, true), 'initialize', [command], null);\n          return (self.locale = \"ko_kr\");\n        }, $DoubleCross_Korean_initialize$1.$$arity = 1);\n        (function($base, $super, $parent_nesting) {\n          var self = $klass($base, $super, 'DX');\n\n          var $nesting = [self].concat($parent_nesting), $DX_initialize$2;\n\n          return (Opal.def(self, '$initialize', $DX_initialize$2 = function $$initialize(num, critical_value, modifier, target_value) {\n            var $iter = $DX_initialize$2.$$p, $yield = $iter || nil, self = this;\n\n            if ($iter) $DX_initialize$2.$$p = null;\n            \n            $send2(self, Opal.find_super_dispatcher(self, 'initialize', $DX_initialize$2, false, true), 'initialize', [num, critical_value, modifier, target_value], null);\n            return (self.locale = \"ko_kr\");\n          }, $DX_initialize$2.$$arity = 4), nil) && 'initialize'\n        })($nesting[0], $$$($$($nesting, 'DoubleCross'), 'DX'), $nesting);\n        Opal.const_set($nesting[0], 'POSITIVE_EMOTION_TABLE', self.$positive_emotion_table(\"ko_kr\").$freeze());\n        return Opal.const_set($nesting[0], 'NEGATIVE_EMOTION_TABLE', self.$negative_emotion_table(\"ko_kr\").$freeze());\n      })($nesting[0], $$($nesting, 'DoubleCross'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n})(Opal);\n"],"sourceRoot":"webpack:///"}