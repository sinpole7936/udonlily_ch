(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~FilledWith~index"],{

/***/ "HRgP":
/*!******************************************************************!*\
  !*** ./node_modules/bcdice/lib/bcdice/game_system/FilledWith.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./../opal */ "pQ1d");
/* Generated by Opal 1.1.1 */


Opal.modules["bcdice/dice_table/range_table"] = function (Opal) {
  function $rb_minus(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs - rhs : lhs['$-'](rhs);
  }

  function $rb_times(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs * rhs : lhs['$*'](rhs);
  }

  function $rb_plus(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs + rhs : lhs['$+'](rhs);
  }

  var self = Opal.top,
      $nesting = [],
      nil = Opal.nil,
      $$$ = Opal.$$$,
      $$ = Opal.$$,
      $module = Opal.module,
      $klass = Opal.klass,
      $send = Opal.send,
      $truthy = Opal.truthy;
  return function ($base, $parent_nesting) {
    var self = $module($base, 'BCDice');
    var $nesting = [self].concat($parent_nesting);

    (function ($base, $parent_nesting) {
      var self = $module($base, 'DiceTable');
      var $nesting = [self].concat($parent_nesting);

      (function ($base, $super, $parent_nesting) {
        var self = $klass($base, $super, 'RangeTable');

        var $nesting = [self].concat($parent_nesting),
            _$RangeTable$,
            $RangeTable_initialize$3,
            $RangeTable_fetch$4,
            $RangeTable_roll$6,
            $RangeTable_store$7,
            $RangeTable_coerce_to_int_range$11,
            $RangeTable_assert_min_sum_is_covered$12,
            $RangeTable_assert_max_sum_is_covered$13,
            $RangeTable_assert_no_gap_or_overlap_in_ranges$14;

        self.$$prototype.name = self.$$prototype.items = self.$$prototype.num_of_dice = self.$$prototype.num_of_sides = self.$$prototype.formatter = nil;
        Opal.const_set($nesting[0], 'RollResult', $send($$($nesting, 'Struct'), 'new', ["sum", "values", "content", "formatted"], (_$RangeTable$ = function $RangeTable$1() {
          var self = _$RangeTable$.$$s == null ? this : _$RangeTable$.$$s;
          return self.$alias_method("to_s", "formatted");
        }, _$RangeTable$.$$s = self, _$RangeTable$.$$arity = 0, _$RangeTable$)));
        Opal.const_set($nesting[0], 'Item', $$($nesting, 'Struct').$new("range", "content"));
        Opal.const_set($nesting[0], 'DICE_ROLL_METHOD_RE', /^(\d+)D(\d+)$/i.$freeze());
        Opal.const_set($nesting[0], 'DEFAULT_FORMATTER', $send(self, 'lambda', [], ($$2 = function (_$$) {
          function $$2(_x, _x2) {
            return _$$.apply(this, arguments);
          }

          $$2.toString = function () {
            return _$$.toString();
          };

          return $$2;
        }(function (table, result) {
          var self = $$2.$$s == null ? this : $$2.$$s;

          if (table == null) {
            table = nil;
          }

          ;

          if (result == null) {
            result = nil;
          }

          ;
          return "" + table.$name() + "(" + result.$sum() + ") ＞ " + result.$content();
        }), $$2.$$s = self, $$2.$$arity = 2, $$2)));
        self.$attr_reader("name");
        self.$attr_reader("num_of_dice");
        self.$attr_reader("num_of_sides");
        Opal.def(self, '$initialize', $RangeTable_initialize$3 = function $$initialize(name, dice_roll_method, items) {
          var $iter = $RangeTable_initialize$3.$$p,
              formatter = $iter || nil,
              self = this,
              $ret_or_1 = nil,
              m = nil;
          if ($iter) $RangeTable_initialize$3.$$p = null;
          if ($iter) $RangeTable_initialize$3.$$p = null;
          ;
          self.name = name.$freeze();

          self.formatter = function () {
            if ($truthy($ret_or_1 = formatter)) {
              return $ret_or_1;
            } else {
              return $$($nesting, 'DEFAULT_FORMATTER');
            }

            ;
            return nil;
          }();

          m = $$($nesting, 'DICE_ROLL_METHOD_RE').$match(dice_roll_method);

          if ($truthy(m)) {} else {
            self.$raise($$($nesting, 'ArgumentError'), "" + self.name + ": invalid dice roll method: " + dice_roll_method);
          }

          ;
          self.num_of_dice = m['$[]'](1).$to_i();
          self.num_of_sides = m['$[]'](2).$to_i();
          return self.$store(items);
        }, $RangeTable_initialize$3.$$arity = 3);
        Opal.def(self, '$fetch', $RangeTable_fetch$4 = function $$fetch(value) {
          var $$5,
              self = this,
              item = nil;
          item = $send(self.items, 'find', [], ($$5 = function (_$$2) {
            function $$5(_x3) {
              return _$$2.apply(this, arguments);
            }

            $$5.toString = function () {
              return _$$2.toString();
            };

            return $$5;
          }(function (i) {
            var self = $$5.$$s == null ? this : $$5.$$s;

            if (i == null) {
              i = nil;
            }

            ;
            return i.$range()['$include?'](value);
          }), $$5.$$s = self, $$5.$$arity = 1, $$5));

          if ($truthy(item)) {} else {
            self.$raise($$($nesting, 'RangeError'), "" + self.name + ": value is out of range: " + value);
          }

          ;
          return item;
        }, $RangeTable_fetch$4.$$arity = 1);
        Opal.def(self, '$roll', $RangeTable_roll$6 = function $$roll(randomizer) {
          var self = this,
              values = nil,
              sum = nil,
              result = nil,
              $writer = nil;
          values = randomizer.$roll_barabara(self.num_of_dice, self.num_of_sides);
          sum = values.$sum();
          result = $$($nesting, 'RollResult').$new(sum, values, self.$fetch(sum).$content());
          $writer = [self.formatter['$[]'](self, result)];
          $send(result, 'formatted=', Opal.to_a($writer));
          $writer[$rb_minus($writer["length"], 1)];
          ;
          return result;
        }, $RangeTable_roll$6.$$arity = 1);
        self.$private();
        Opal.def(self, '$store', $RangeTable_store$7 = function $$store(items) {
          var $$8,
              $$9,
              $$10,
              self = this,
              items_with_range = nil,
              sorted_items = nil;
          items_with_range = $send(items, 'map', [], ($$8 = function (_$$3) {
            function $$8(_x4, _x5) {
              return _$$3.apply(this, arguments);
            }

            $$8.toString = function () {
              return _$$3.toString();
            };

            return $$8;
          }(function (r, c) {
            var self = $$8.$$s == null ? this : $$8.$$s;

            if (r == null) {
              r = nil;
            }

            ;

            if (c == null) {
              c = nil;
            }

            ;
            return [self.$coerce_to_int_range(r), c];
          }), $$8.$$s = self, $$8.$$arity = 2, $$8));
          sorted_items = $send(items_with_range, 'sort_by', [], ($$9 = function (_$$4) {
            function $$9(_x6, _x7) {
              return _$$4.apply(this, arguments);
            }

            $$9.toString = function () {
              return _$$4.toString();
            };

            return $$9;
          }(function (r, _) {
            var self = $$9.$$s == null ? this : $$9.$$s;

            if (r == null) {
              r = nil;
            }

            ;

            if (_ == null) {
              _ = nil;
            }

            ;
            return r.$min();
          }), $$9.$$s = self, $$9.$$arity = 2, $$9));
          self.$assert_min_sum_is_covered(sorted_items);
          self.$assert_max_sum_is_covered(sorted_items);
          self.$assert_no_gap_or_overlap_in_ranges(sorted_items);
          self.items = $send(sorted_items, 'map', [], ($$10 = function (_$$5) {
            function $$10(_x8, _x9) {
              return _$$5.apply(this, arguments);
            }

            $$10.toString = function () {
              return _$$5.toString();
            };

            return $$10;
          }(function (range, content) {
            var self = $$10.$$s == null ? this : $$10.$$s;

            if (range == null) {
              range = nil;
            }

            ;

            if (content == null) {
              content = nil;
            }

            ;
            return $$($nesting, 'Item').$new(range, content.$freeze()).$freeze();
          }), $$10.$$s = self, $$10.$$arity = 2, $$10)).$freeze();
          return self;
        }, $RangeTable_store$7.$$arity = 1);
        Opal.def(self, '$coerce_to_int_range', $RangeTable_coerce_to_int_range$11 = function $$coerce_to_int_range(x) {
          var self = this,
              $case = nil,
              $ret_or_2 = nil;
          $case = x;

          if ($$($nesting, 'Integer')['$===']($case)) {
            return $$($nesting, 'Range').$new(x, x);
          } else if ($$($nesting, 'Range')['$===']($case)) {
            if ($truthy(function () {
              if ($truthy($ret_or_2 = x.$begin()['$is_a?']($$($nesting, 'Integer')))) {
                return x.$end()['$is_a?']($$($nesting, 'Integer'));
              } else {
                return $ret_or_2;
              }

              ;
              return nil;
            }())) {
              return x;
            }
          }

          ;
          return self.$raise($$($nesting, 'TypeError'), "" + self.name + ": " + x + " (" + x.$class() + ") must be an Integer or a Range with Integers ");
        }, $RangeTable_coerce_to_int_range$11.$$arity = 1);
        Opal.def(self, '$assert_min_sum_is_covered', $RangeTable_assert_min_sum_is_covered$12 = function $$assert_min_sum_is_covered(sorted_items) {
          var self = this,
              min_sum = nil,
              range = nil;
          min_sum = self.num_of_dice;
          range = sorted_items.$first()['$[]'](0);

          if ($truthy(range['$include?'](min_sum))) {} else {
            self.$raise($$($nesting, 'RangeError'), "" + self.name + ": min value (" + min_sum + ") is not covered: " + range);
          }

          ;
          return self;
        }, $RangeTable_assert_min_sum_is_covered$12.$$arity = 1);
        Opal.def(self, '$assert_max_sum_is_covered', $RangeTable_assert_max_sum_is_covered$13 = function $$assert_max_sum_is_covered(sorted_items) {
          var self = this,
              max_sum = nil,
              range = nil;
          max_sum = $rb_times(self.num_of_dice, self.num_of_sides);
          range = sorted_items.$last()['$[]'](0);

          if ($truthy(range['$include?'](max_sum))) {} else {
            self.$raise($$($nesting, 'RangeError'), "" + self.name + ": max value (" + max_sum + ") is not covered: " + range);
          }

          ;
          return self;
        }, $RangeTable_assert_max_sum_is_covered$13.$$arity = 1);
        return (Opal.def(self, '$assert_no_gap_or_overlap_in_ranges', $RangeTable_assert_no_gap_or_overlap_in_ranges$14 = function $$assert_no_gap_or_overlap_in_ranges(sorted_items) {
          var _$$6,
              self = this;

          $send(sorted_items, 'each_cons', [2], (_$$6 = function $$15(i1, i2) {
            var self = _$$6.$$s == null ? this : _$$6.$$s,
                r1 = nil,
                r2 = nil,
                max1 = nil,
                next_of_max1 = nil;
            if (self.name == null) self.name = nil;

            if (i1 == null) {
              i1 = nil;
            }

            ;

            if (i2 == null) {
              i2 = nil;
            }

            ;
            r1 = i1['$[]'](0);
            r2 = i2['$[]'](0);
            max1 = r1.$max();
            next_of_max1 = $rb_plus(max1, 1);

            if ($truthy(r2['$include?'](max1))) {
              self.$raise($$($nesting, 'RangeError'), "" + self.name + ": Range overlap: " + r1 + " and " + r2);
            }

            ;

            if ($truthy(r2['$include?'](next_of_max1))) {
              return nil;
            } else {
              return self.$raise($$($nesting, 'RangeError'), "" + self.name + ": Range gap: " + r1 + " and " + r2);
            }

            ;
          }, _$$6.$$s = self, _$$6.$$arity = 2, _$$6));
          return self;
        }, $RangeTable_assert_no_gap_or_overlap_in_ranges$14.$$arity = 1), nil) && 'assert_no_gap_or_overlap_in_ranges';
      })($nesting[0], null, $nesting);
    })($nesting[0], $nesting);
  }($nesting[0], $nesting);
};
/* Generated by Opal 1.1.1 */


Opal.modules["bcdice/game_system/filled_with/lot_tables"] = function (Opal) {
  var self = Opal.top,
      $nesting = [],
      nil = Opal.nil,
      $$$ = Opal.$$$,
      $$ = Opal.$$,
      $module = Opal.module,
      $klass = Opal.klass,
      $hash = Opal.hash,
      $range = Opal.range,
      $send = Opal.send;
  self.$require("bcdice/dice_table/range_table");
  return function ($base, $parent_nesting) {
    var self = $module($base, 'BCDice');
    var $nesting = [self].concat($parent_nesting);

    (function ($base, $parent_nesting) {
      var self = $module($base, 'GameSystem');
      var $nesting = [self].concat($parent_nesting);

      (function ($base, $super, $parent_nesting) {
        var self = $klass($base, $super, 'FilledWith');
        var $nesting = [self].concat($parent_nesting);
        Opal.const_set($nesting[0], 'LOT_NORMAL_TABLES', $hash(1, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンノーマルくじ（phase 1）", "1D6", [[$range(1, 3, false), "イレブンチキン"], [$range(4, 5, false), $send(self, 'lambda', [], ($$1 = function (_$$7) {
          function $$1() {
            return _$$7.apply(this, arguments);
          }

          $$1.toString = function () {
            return _$$7.toString();
          };

          return $$1;
        }(function () {
          var self = $$1.$$s == null ? this : $$1.$$s;
          return $$($nesting, 'LOT_NORMAL_TABLES')['$[]'](2);
        }), $$1.$$s = self, $$1.$$arity = 0, $$1))], [6, $send(self, 'lambda', [], ($$2 = function (_$$8) {
          function $$2() {
            return _$$8.apply(this, arguments);
          }

          $$2.toString = function () {
            return _$$8.toString();
          };

          return $$2;
        }(function () {
          var self = $$2.$$s == null ? this : $$2.$$s;
          return $$($nesting, 'LOT_NORMAL_TABLES')['$[]'](3);
        }), $$2.$$s = self, $$2.$$arity = 0, $$2))]]).$freeze(), 2, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンノーマルくじ（phase 2）", "1D6", [[1, "バロールたわし"], [2, "イグニスジッポ"], [3, "ヤコ仮面or梟の文鎮(選択可)"], [4, "ナレッジのハンモックorジンジャビースト"], [$range(5, 6, false), $send(self, 'lambda', [], ($$3 = function (_$$9) {
          function $$3() {
            return _$$9.apply(this, arguments);
          }

          $$3.toString = function () {
            return _$$9.toString();
          };

          return $$3;
        }(function () {
          var self = $$3.$$s == null ? this : $$3.$$s;
          return $$($nesting, 'LOT_NORMAL_TABLES')['$[]'](3);
        }), $$3.$$s = self, $$3.$$arity = 0, $$3))]]).$freeze(), 3, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンノーマルくじ（phase 3）", "1D6", [[1, "特性HPポーション"], [2, "特性MPポーション"], [3, "黒い甲冑"], [4, "天体望遠鏡"], [5, "金獅子の剥製"], [6, $send(self, 'lambda', [], ($$4 = function (_$$10) {
          function $$4() {
            return _$$10.apply(this, arguments);
          }

          $$4.toString = function () {
            return _$$10.toString();
          };

          return $$4;
        }(function () {
          var self = $$4.$$s == null ? this : $$4.$$s;
          return $$($nesting, 'LOT_NORMAL_TABLES')['$[]'](4);
        }), $$4.$$s = self, $$4.$$arity = 0, $$4))]]).$freeze(), 4, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンノーマルくじ（phase 4）", "1D6", [[1, "特性スタミナポーション"], [2, "戦乙女の兜"], [3, "フェンリルの首輪"], [4, "フェニックスカーペット"], [5, "動くアダマンゴーレム"], [6, $send(self, 'lambda', [], ($$5 = function (_$$11) {
          function $$5() {
            return _$$11.apply(this, arguments);
          }

          $$5.toString = function () {
            return _$$11.toString();
          };

          return $$5;
        }(function () {
          var self = $$5.$$s == null ? this : $$5.$$s;
          return $$($nesting, 'LOT_NORMAL_TABLES')['$[]'](5);
        }), $$5.$$s = self, $$5.$$arity = 0, $$5))]]).$freeze(), 5, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンノーマルくじ（phase 5）", "1D6", [[1, "キャンディークッション"], [2, "屑鉄の金床"], [3, "薪割り王の斧"], [4, "ロジエの水差し"], [5, "箱舟の模型"], [6, $send(self, 'lambda', [], ($$6 = function (_$$12) {
          function $$6() {
            return _$$12.apply(this, arguments);
          }

          $$6.toString = function () {
            return _$$12.toString();
          };

          return $$6;
        }(function () {
          var self = $$6.$$s == null ? this : $$6.$$s;
          return $$($nesting, 'LOT_PREMIUM_TABLES')['$[]'](5);
        }), $$6.$$s = self, $$6.$$arity = 0, $$6))]]).$freeze()).$freeze());
        return Opal.const_set($nesting[0], 'LOT_PREMIUM_TABLES', $hash(1, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンプレミアムくじ（phase 1）", "1D6", [[$range(1, 3, false), "プレミアムチキン"], [4, $send(self, 'lambda', [], ($$7 = function (_$$13) {
          function $$7() {
            return _$$13.apply(this, arguments);
          }

          $$7.toString = function () {
            return _$$13.toString();
          };

          return $$7;
        }(function () {
          var self = $$7.$$s == null ? this : $$7.$$s;
          return $$($nesting, 'LOT_NORMAL_TABLES')['$[]'](3);
        }), $$7.$$s = self, $$7.$$arity = 0, $$7))], [$range(5, 6, false), $send(self, 'lambda', [], ($$8 = function (_$$14) {
          function $$8() {
            return _$$14.apply(this, arguments);
          }

          $$8.toString = function () {
            return _$$14.toString();
          };

          return $$8;
        }(function () {
          var self = $$8.$$s == null ? this : $$8.$$s;
          return $$($nesting, 'LOT_PREMIUM_TABLES')['$[]'](2);
        }), $$8.$$s = self, $$8.$$arity = 0, $$8))]]).$freeze(), 2, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンプレミアムくじ（phase 2）", "1D6", [[1, "親衛隊バッジ"], [2, "ハタモトチャブダイ"], [3, "星のコンパス"], [4, "白銀の甲冑"], [5, $send(self, 'lambda', [], ($$9 = function (_$$15) {
          function $$9() {
            return _$$15.apply(this, arguments);
          }

          $$9.toString = function () {
            return _$$15.toString();
          };

          return $$9;
        }(function () {
          var self = $$9.$$s == null ? this : $$9.$$s;
          return $$($nesting, 'LOT_NORMAL_TABLES')['$[]'](4);
        }), $$9.$$s = self, $$9.$$arity = 0, $$9))], [6, $send(self, 'lambda', [], ($$10 = function (_$$16) {
          function $$10() {
            return _$$16.apply(this, arguments);
          }

          $$10.toString = function () {
            return _$$16.toString();
          };

          return $$10;
        }(function () {
          var self = $$10.$$s == null ? this : $$10.$$s;
          return $$($nesting, 'LOT_PREMIUM_TABLES')['$[]'](3);
        }), $$10.$$s = self, $$10.$$arity = 0, $$10))]]).$freeze(), 3, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンプレミアムくじ（phase 3）", "1D6", [[1, "特性クイックHPポーション"], [2, "特性クイックMPポーション"], [3, "特製クイックスタミナポーション"], [4, "火龍のフィギュアor氷龍のフィギュア(選択可)"], [5, "ヒメショーグンドレス"], [6, $send(self, 'lambda', [], ($$11 = function (_$$17) {
          function $$11() {
            return _$$17.apply(this, arguments);
          }

          $$11.toString = function () {
            return _$$17.toString();
          };

          return $$11;
        }(function () {
          var self = $$11.$$s == null ? this : $$11.$$s;
          return $$($nesting, 'LOT_PREMIUM_TABLES')['$[]'](4);
        }), $$11.$$s = self, $$11.$$arity = 0, $$11))]]).$freeze(), 4, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンプレミアムくじ（phase 4）", "1D6", [[1, "クイックユグドラポーション"], [2, "銀河龍のフィギュア/ドラゴン"], [3, "銀河龍のフィギュア/魔族"], [4, "魔族チェスセット"], [5, "イグニスコンロ"], [6, $send(self, 'lambda', [], ($$12 = function (_$$18) {
          function $$12() {
            return _$$18.apply(this, arguments);
          }

          $$12.toString = function () {
            return _$$18.toString();
          };

          return $$12;
        }(function () {
          var self = $$12.$$s == null ? this : $$12.$$s;
          return $$($nesting, 'LOT_PREMIUM_TABLES')['$[]'](5);
        }), $$12.$$s = self, $$12.$$arity = 0, $$12))]]).$freeze(), 5, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンプレミアムくじ（phase 5）", "1D6", [[1, "グレヴディバリウス"], [2, "天使の望遠鏡orデスの目覚まし時計(選択可)"], [3, "世界樹の蔦"], [4, "死神の飾りドレス"], [5, "ザバーニヤ等身大フィギュア"], [6, $send(self, 'lambda', [], ($$13 = function (_$$19) {
          function $$13() {
            return _$$19.apply(this, arguments);
          }

          $$13.toString = function () {
            return _$$19.toString();
          };

          return $$13;
        }(function () {
          var self = $$13.$$s == null ? this : $$13.$$s;
          return $$($nesting, 'LOT_PREMIUM_TABLES')['$[]'](6);
        }), $$13.$$s = self, $$13.$$arity = 0, $$13))]]).$freeze(), 6, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("ナンバーワンプレミアムくじ（phase 6）", "1D6", [[1, "イレブンチキン"], [2, "イレブンチキン(2ピース)"], [3, "イレブンチキン(3ピース)"], [4, "イレブンチキン(6ピース)"], [5, "イレブンチキン(12ピース)"], [6, "wish star"]]).$freeze()).$freeze());
      })($nesting[0], null, $nesting);
    })($nesting[0], $nesting);
  }($nesting[0], $nesting);
};
/* Generated by Opal 1.1.1 */


Opal.modules["bcdice/game_system/filled_with/enemy_data_tables"] = function (Opal) {
  function $rb_minus(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs - rhs : lhs['$-'](rhs);
  }

  var self = Opal.top,
      $nesting = [],
      nil = Opal.nil,
      $$$ = Opal.$$$,
      $$ = Opal.$$,
      $module = Opal.module,
      $klass = Opal.klass,
      $truthy = Opal.truthy,
      $hash2 = Opal.hash2;
  return function ($base, $parent_nesting) {
    var self = $module($base, 'BCDice');
    var $nesting = [self].concat($parent_nesting);

    (function ($base, $parent_nesting) {
      var self = $module($base, 'GameSystem');
      var $nesting = [self].concat($parent_nesting);

      (function ($base, $super, $parent_nesting) {
        var self = $klass($base, $super, 'FilledWith');
        var $nesting = [self].concat($parent_nesting),
            $FilledWith_fetch_enemy_data$1;
        Opal.def(self, '$fetch_enemy_data', $FilledWith_fetch_enemy_data$1 = function $$fetch_enemy_data(command) {
          var self = this,
              m = nil,
              difficulty = nil,
              key = nil,
              area_name = nil,
              chosen = nil;
          m = /^RED([ENHLX])(256|265|465|665|666|[1-6]4[1-6])$/.$match(command);

          if ($truthy(m)) {} else {
            return nil;
          }

          ;
          difficulty = $$($nesting, 'Difficulty').$new(m['$[]'](1));
          key = m['$[]'](2);
          area_name = $$($nesting, 'AREA_LIST')['$[]']($rb_minus(key['$[]'](0).$to_i(), 1));
          chosen = $$($nesting, 'ENEMY_DATA')['$[]'](key)['$[]'](difficulty.$index());
          return "" + "エネミーデータ表(" + key + "):" + area_name + "<" + difficulty.$name() + ">:" + chosen;
        }, $FilledWith_fetch_enemy_data$1.$$arity = 1);
        Opal.const_set($nesting[0], 'AREA_LIST', ["洞窟", "遺跡", "山岳", "水辺", "森林", "墓場"].$freeze());
        return Opal.const_set($nesting[0], 'ENEMY_DATA', $hash2(["141", "142", "143", "144", "145", "146", "241", "242", "243", "244", "245", "246", "341", "342", "343", "344", "345", "346", "441", "442", "443", "444", "445", "446", "541", "542", "543", "544", "545", "546", "641", "642", "643", "644", "645", "646", "256", "265", "465", "665", "666"], {
          "141": ["キャンディークラウン(CL40)1匹", "キャンディクラウン(CL40)「1D-3」匹(最低1匹)", "キャンディークラウン「1D-2」匹(最低1匹)出目が6だった場合ゴールデンクラウン(CL177)1匹", "ゴールデンクラウン(CL177)とエンカウント", "キャンディークラウン(CL40/オリジン)1匹"],
          "142": ["ベルセルク(CL7)3匹", "ベルセルク(CL7)3匹(〔命中〕+4、〔HP〕+30、〔FP〕+10、あらゆる致傷力+20)", "ベルセルク(CL7)3匹(〔命中〕+8、〔HP〕+60、〔FP〕+20、あらゆる致傷力+40)", "ベルセルク(CL7)3匹(〔命中〕+16、〔HP〕+120、〔FP〕+40、あらゆる致傷力+80)", "ベルセルク(CL7/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)"],
          "143": ["ガーゴイル(CL10)2匹", "ガーゴイル(CL10)2匹(〔命中〕+4、〔HP〕+20、〔FP〕+10、あらゆる致傷力と防護点+20)", "ガーゴイル(CL10)2匹(〔命中〕+8、〔HP〕+40、〔FP〕+20、あらゆる致傷力と防護点+40)", "ザッハーク(CL39)3匹", "ガーゴイル(CL10/オリジン)2匹(〔HP〕+500、あらゆる致傷力と防護点+100)"],
          "144": ["デビルホイール(CL18)1匹", "デビルホイール(CL18)1匹、あらゆる致傷力+20", "デビルホイール(CL18)1匹、あらゆる致傷力+40", "ムスペルヘイムの獣(CL65)、あらゆる防護点+20", "デビルホイール(CL18/オリジン)1匹(〔HP〕+1000、あらゆる致傷力+100)"],
          "145": ["ヘルハウンド(CL12)1匹、インプ(CL3)2匹", "フェニックス(CL25)2匹", "火龍ヘルブレイザー(CL50)1匹、ケルベロス(CL33)1匹", "煉獄龍バーガトリ(CL100)1匹", "ヘルハウンド(CL12/オリジン)1匹、インプ(CL3/オリジン)2匹(〔HP〕+500、あらゆる致傷力+100)"],
          "146": ["アイスメイデン(CL10)1匹、アイスリザード(CL7)2匹", "クリスタルビースト(CL25)2匹", "氷河龍グレイシャル(CL65)1匹", "冥界龍コキュートス(CL110)1匹", "アイスメイデン(CL10/オリジン)1匹、アイスリザード(CL7/オリジン)2匹(〔HP〕+500、あらゆる致傷力+100)"],
          "241": ["スケルトン(CL3)、アルテミス(CL8)、スターゲイザー(CL10)、ヤシャ(CL10)、ヘルハウンド(CL12)、ゴーレム(CL13)", "ナイトスケルトン(CL12)、カラクリフラウ弐式(CL16)、コスモロジスト(CL20)、クリスタルビースト(CL25)、ミスリルゴーレム(CL27)", "コガラシ(CL27)、アダマンゴーレム(CL45)、アシュラ(CL48)、火龍ヘルブレイザー(CL50)、氷龍グレイシャル(CL65)", "ロックダンサー(CL39)、デスサジタリー(CL45)、コンゴウ(CL60)、カラクリヒメショーグン(CL75)、フェンリル(CL85)、ゴールデンクラウン(CL177)\nゴールデンクラウンが最後に残り【逃走】した場合ドロップ品は入手できない", "スケルトン(CL3/オリジン)、アルテミス(CL8/オリジン)、スターゲイザー(CL10/オリジン)、ヤシャ(CL10/オリジン)、ヘルハウンド(CL12/オリジン)、ゴーレム(CL13/オリジン)(〔HP〕+500、あらゆる致傷力+100)"],
          "242": ["アルテミス(CL8)3匹", "アルテミス(CL8)3匹(〔命中〕+4、〔HP〕+30、〔FP〕+20、あらゆる致傷力+20)", "アルテミス(CL8)3匹(〔命中〕+8、〔HP〕+60、〔FP〕+30、あらゆる致傷力+40)", "アルテミス(CL8)3匹(〔命中〕+16、〔HP〕+120、〔FP〕+40、あらゆる致傷力+80)", "アルテミス(CL8/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)"],
          "243": ["スターゲイザー(CL10)2匹", "コスモロジスト(CL20)2匹", "コスモロジスト(CL20)4匹", "デスサジタリー(CL45)2匹", "スターゲイザー(CL10/オリジン)2匹(〔HP〕+500、あらゆる致傷力+100)"],
          "244": ["ヤシャ(CL10)1匹、スケルトン(CL3)3匹", "ヤシャ(CL10)3匹(〔命中〕+4、〔HP〕+30、〔FP〕+10、あらゆる致傷力+15)", "アシュラ(CL48)2匹", "コンゴウ(CL60)2匹", "ヤシャ(CL10/オリジン)1匹、スケルトン(CL3/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)"],
          "245": ["ヘルハウンド(CL12)2匹", "クリスタルビースト(CL25)2匹", "火龍ヘルブレイザー(CL50)1匹、氷河龍グレイシャル(CL65)", "『単眼の巨神』アイングロース(CL100/ネームド)", "ヘルハウンド(CL12/オリジン)2匹(〔HP〕+500、あらゆる致傷力+100)"],
          "246": ["ゴーレム(CL13)1匹", "ミスリルゴーレム(CL27)1匹", "アダマンゴーレム(CL45)1匹", "カラクリヒメショーグン(CL75)1匹", "ゴーレム(CL13/オリジン)1匹(〔HP〕+1000、あらゆる致傷力+100)"],
          "341": ["アイアンプリチン(CL5)5匹", "アイアンプリチン(CL5)5匹(〔命中〕+4、〔HP〕+30、〔FP〕+10)", "アイアンプリチン(CL5)5匹(〔命中〕+8、〔HP〕+60、〔FP〕+20)", "アイアンプリチン(CL5)5匹(〔命中〕+16、〔HP〕+120、〔FP〕+40)", "アイアンプリチン(CL5/オリジン)5匹(〔HP〕+300、あらゆる致傷力+100)"],
          "342": ["ウイングスレイブ(CL4)5匹", "ウイングスレイブ(CL4)5匹(〔命中〕+4、〔HP〕+30、〔FP〕+10、あらゆる致傷力+20)", "ガルーダ(CL40)2匹", "栄光の天使(CL60)2匹", "ウイングスレイブ(CL4/オリジン)5匹(〔HP〕+300、あらゆる致傷力+100)"],
          "343": ["ブラックナイト(CL10)1匹、ソルジャー(CL4)3匹", "デュラハン(CL22)1匹、ブラックナイト(CL10)2匹", "サーバントマスター(CL35)1匹、デュラハン(CL22)2匹", "ジェネラル(CL55)1匹、サーバントマスター(CL35)2匹", "ブラックナイト(CL10/オリジン)1匹、ソルジャー(CL4/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)"],
          "344": ["ソルジャーアント(CL8)2匹", "ソルジャーアント(CL8)2匹(〔命中〕+4、〔HP〕+30、〔FP〕+10、あらゆる致傷力+20)", "インペリアルアント(CL30)2匹", "『女王キノコ』アカシックツリー(CL50/ネームド)1匹、インペリアルアント(CL30)2匹", "ソルジャーアント(CL8/オリジン)2匹(〔HP〕+500、あらゆる致傷力+100)"],
          "345": ["カボチャの魔女(CL8)2匹", "カボチャの魔女(CL8)2匹(〔命中〕+4、〔HP〕+30、〔FP〕+10、あらゆる致傷力+20)", "カボチャの大魔女(CL35)2匹", "堕落の黒天使(CL60)2匹", "カボチャの魔女(CL8/オリジン)2匹(〔HP〕+500、あらゆる致傷力+100)"],
          "346": ["フェニックス(CL25)2匹", "フェニックス(CL25)2匹(〔命中〕+4、〔HP〕+40、〔FP〕+10、あらゆる致傷力+30)", "フェニックス(CL25)2匹(〔命中〕+8、〔HP〕+80、〔FP〕+20、あらゆる致傷力+60)", "煉獄フェニックス(CL85)2匹", "フェニックス(CL25/オリジン)2匹(〔HP〕+1000、あらゆる致傷力+200)"],
          "441": ["フロストクラブ(CL6)2匹", "フロストクラブ(CL6)3匹", "『氷海の主』ギガントキャンサー(CL20/ネームド)", "『氷海の主』ギガントキャンサー(CL20/ネームド)、フロストクラブ(CL6)3匹", "フロストクラブ(CL6/オリジン)2匹(〔HP〕+500、あらゆる致傷力+100)"],
          "442": ["アシガル(CL4)3匹", "ハタモト(CL10)3匹", "ヒトキリ(CL33)2匹", "スカーレス(CL38)3匹", "アシガル(CL4/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)"],
          "443": ["アンブッシュマン(CL5)3匹", "アンブッシュマン(CL5)3匹(〔命中〕+4、〔HP〕+20、〔FP〕+10、あらゆる致傷力+10)", "シャドウストーカー(CL35)2匹", "シャドウストーカー(CL35)3匹", "アンブッシュマン(CL5/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)"],
          "444": ["アップルドール(CL12)2匹", "アップルドール(CL12)2匹、ポイズンリリー(CL7)2匹", "テラードール(CL30)2匹", "テラードール(CL30)2匹、バリアリーフ(CL27)2匹", "アップルドール(CL12/オリジン)2匹(〔HP〕+500、あらゆる致傷力+100)"],
          "445": ["ナイトライダー(CL15)1匹", "ナイトライダー(CL15)2匹", "ジェネラル(CL55)1匹", "ジェネラル(CL55)2匹", "ナイトライダー(CL15/オリジン)1匹(〔HP〕+800、あらゆる致傷力+100)"],
          "446": ["ジェルスケルトン(CL10)1匹", "ジェルスケルトン(CL10)1匹(〔命中〕+4、〔FP〕+10、あらゆる致傷力+20)", "ジェルスケルトン(CL10)1匹(〔命中〕+8、〔FP〕+20、あらゆる致傷力+40)", "ジェルスケルトン(CL10)1匹(〔命中〕+12、〔FP〕+40、あらゆる致傷力+80)", "ジェルスケルトン(CL10/オリジン)1匹(〔HP〕+1500、あらゆる致傷力+200)"],
          "541": ["スナッチャー(CL4)3匹", "ゴールデンビースト(CL10)3匹", "ヨウコ(CL30)2匹", "イビルオーメン(CL42)2匹", "スナッチャー(CL4/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)"],
          "542": ["スターゲイザー(CL10)1匹、オーク(CL3)3匹", "スターゲイザー(CL10)1匹、ヘルハウンド(CL12)2匹", "コスモロジスト(CL20)1匹、ケルベロス(CL33)1匹", "サーバントマスター(CL35)1匹、ケルベロス(CL33)2匹", "スターゲイザー(CL10/オリジン)1匹、オーク(CL3/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)"],
          "543": ["オウルセージ(CL5)1匹、インプ(CL3)3匹。指定エネミー:オウルセージ", "オウルセージ(CL5)3匹。指定エネミー:オウルセージ", "オウルコマンダー(CL18)1匹、キメラ(CL15)2匹。指定エネミー:オウルコマンダー", "オウルコマンダー(CL18)2匹、キメラグレート(CL60)1匹。指定エネミー:オウルコマンダー", "オウルセージ(CL/オリジン5)1匹、インプ(CL3/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)。指定エネミー:オウルセージ"],
          "544": ["グリーンアクトレス(CL22)1匹", "魔将樹の騎士(CL40)1匹", "魔将樹の番人(CL80)1匹", "『魔将樹の剣姫』ロジエモール(CL120/ネームド)1匹", "グリーンアクトレス(CL22/オリジン)1匹(〔HP〕+200、あらゆる致傷力+200、分類「ネームド」と【始原の力】を追加)"],
          "545": ["ポイズンリリー(CL7)1匹、リリーの尖兵(CL5)1匹", "ポイズンリリー(CL7)1匹、リリーの尖兵(CL5)1匹(〔命中〕+4、〔HP〕+30、〔FP〕+10、あらゆる致傷力+20)", "バリアリーフ(CL27)1匹、リリーの尖兵(CL5)1匹(〔命中〕+8、〔HP〕+60、〔FP〕+20、あらゆる致傷力+40)", "『密林の女王』クイーンリリー(CL70/ネームド)1匹、リリーの尖兵(CL5)1匹(〔命中〕+16、〔HP〕+120、〔FP〕+40、あらゆる致傷力+80)", "ポイズンリリー(CL7/オリジン)1匹、リリーの尖兵(CL5/オリジン)1匹(〔HP〕+800、あらゆる致傷力+100)"],
          "546": ["ブラックナイト(CL10)1匹、ソルジャー(CL4)3匹", "ヴァルキリー(CL20)1匹、ブラックナイト(CL10)2匹", "フレイヤ(CL45)1匹、ヴァルキリー(CL20)2匹", "ジェネラル(CL55)1匹、フレイヤ(CL45)2匹", "ブラックナイト(CL10/オリジン)1匹、ソルジャー(CL4/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)"],
          "641": ["ヤコ(CL6)3匹(【狐の送り火】のデータを「疲労:なし」に変更)", "ヨウコ(CL30)1匹(【狐の送り火】のデータを「疲労:なし」に変更)", "ヨウコ(CL30)3匹(【狐の送り火】のデータを「疲労:なし」に変更)", "タタリドラゴン(CL60/ネームド)1匹(【狐の送り火】のデータを「疲労:なし」に変更)", "ヤコ(CL6/オリジン)3匹((〔HP〕+500、あらゆる致傷力+100、【狐の送り火】のデータを「疲労:なし」に変更)"],
          "642": ["スケルトン(CL3)4匹", "ナイトスケルトン(CL12)3匹", "ヒトキリ(CL33)2匹(「分類:アンデッド」を追加)", "堕ちた黒龍(CL48)2匹", "スケルトン(CL3/オリジン)4匹(〔HP〕+500、あらゆる致傷力+200)"],
          "643": ["ポイズンリリー(CL7)1匹(【華劇:リリーオブザバレー】使用済み)、ファントム(CL5)2匹", "ポイズンリリー(CL7)1匹(【華劇:リリーオブザバレー】使用済み)、ゴースト(CL10)3匹", "グリーンアクトレス(CL22)1匹(【華劇:フォレストステップ】使用済み)、デュラハン(CL22)2匹", "グリーンアクトレス(CL22)1匹(【華劇:フォレストステップ】使用済み)、カラクリヒメショーグン(CL75)1匹", "ポイズンリリー(CL7/オリジン)1匹(【華劇:リリーオブザバレー】使用済み)、ファントム(CL5)2匹(〔HP〕+500、あらゆる致傷力+100)"],
          "644": ["君たちの冒険はここで終了だ。", "君たちの冒険はここで終了だ。", "君たちの冒険はここで終了だ。", "第二魔将『葬送者』グレイヴディガー(CL200/魔将)1匹、『ディガー様親衛隊長』フュネライユ(CL66/ネームド)1匹、『トラップマスター』アンテルモン(CL65/ネームド)1匹", "[現在エネミー未実装の為振り直ししてください]"],
          "645": ["ゴースト(CL10)1匹(通常ドロップ「1000GP」)、ソルジャー(CL4)2匹", "ゴースト(CL10)1匹(通常ドロップ「2000GP」)、ハタモト(CL10)3匹", "リッチ(CL44)1匹(通常ドロップ「4000GP」)、ミスリルゴーレム(CL27)1匹", "エルダーリッチ(CL55)1匹(通常ドロップ「8000GP」)、アダマンゴーレム(CL45)1匹", "ゴースト(CL10/オリジン)1匹(通常ドロップ「1000GP」)、ソルジャー(CL4/オリジン)2匹(〔HP〕+500、あらゆる致傷力+100)"],
          "646": ["ボーンスネーク(CL20)1匹", "ボーンスネーク(CL20)2匹", "ラダマンティスの蛇(CL50)1匹", "ラダマンティスの蛇(CL50)1匹(ネームド仕様[HP4倍、【ネームドエネミー】習得])", "ボーンスネーク(CL20/オリジン)1匹(〔HP〕+1500、あらゆる致傷力+200)"],
          "256": ["ボーンスネーク(CL50)1匹", "ラダマンティスの蛇(CL50)1匹", "銀河龍ラクテア/ドラゴン形態(CL90)1匹", "『三つ首の災厄』トライディザスター(CL100/ネームド)1匹", "ボーンスネーク(CL50/オリジン)1匹(〔HP〕+2000、あらゆる致傷力+200)"],
          "265": ["キャンディークラウン(CL40)「1D6」匹", "キャンディークラウン(CL40)「1D6+1」匹", "キャンディークラウン(CL40)「1D6」匹、ゴールデンクラウン(CL177)1匹", "キャンディークラウン(CL40)「1D6」匹、ゴールデンクラウン(CL177)2匹", "キャンディークラウン(CL40/オリジン)「1D6」匹"],
          "465": ["リビングデッド(CL5)3匹", "ゴースト(CL10)3匹", "デュラハン(CL22)3匹", "リッチ(CL44)3匹", "リビングデッド(CL5/オリジン)3匹(〔HP〕+500、あらゆる致傷力+100)"],
          "665": ["カロン(CL12)2匹", "カロンキャプテン(CL25)2匹", "リッチ(CL44)2匹", "エルダーリッチ(CL55)2匹(〔HP〕+10)", "カロンキャプテン(CL25/オリジン)2匹"],
          "666": ["『漆黒の戦鬼』ブラックナイト(CL10/ネームド)1匹", "『漆黒の戦鬼』ブラックナイト(CL10/ネームド)1匹(〔命中〕+4、あらゆる致傷力+20、〔HP〕+200)", "『白銀の猛将』ジェネラル(CL55/ネームド)1匹", "『白銀の猛将』ジェネラル(CL55/ネームド)1匹(〔命中〕+4、あらゆる致傷力+20、〔HP〕+500)", "[現在エネミー未実装の為振り直ししてください]"]
        }).$freeze());
      })($nesting[0], $$($nesting, 'Base'), $nesting);
    })($nesting[0], $nesting);
  }($nesting[0], $nesting);
};
/* Generated by Opal 1.1.1 */


Opal.modules["bcdice/game_system/filled_with/event_tables"] = function (Opal) {
  function $rb_plus(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs + rhs : lhs['$+'](rhs);
  }

  function $rb_times(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs * rhs : lhs['$*'](rhs);
  }

  var self = Opal.top,
      $nesting = [],
      nil = Opal.nil,
      $$$ = Opal.$$$,
      $$ = Opal.$$,
      $module = Opal.module,
      $klass = Opal.klass,
      $hash2 = Opal.hash2,
      $truthy = Opal.truthy,
      $hash = Opal.hash;
  return function ($base, $parent_nesting) {
    var self = $module($base, 'BCDice');
    var $nesting = [self].concat($parent_nesting);

    (function ($base, $parent_nesting) {
      var self = $module($base, 'GameSystem');
      var $nesting = [self].concat($parent_nesting);

      (function ($base, $super, $parent_nesting) {
        var self = $klass($base, $super, 'FilledWith');
        var $nesting = [self].concat($parent_nesting),
            cave = nil,
            ruin = nil,
            mountain = nil,
            waterside = nil,
            forest = nil,
            graveyard = nil;

        (function ($base, $super, $parent_nesting) {
          var self = $klass($base, $super, 'EventTable');
          var $nesting = [self].concat($parent_nesting),
              $EventTable_initialize$1,
              $EventTable_roll$2;
          self.$$prototype.rows = self.$$prototype.area_id = self.$$prototype.area_name = nil;
          Opal.def(self, '$initialize', $EventTable_initialize$1 = function $$initialize(area_name, area_id, rows) {
            var self = this;
            self.area_name = area_name;
            self.area_id = area_id;
            return self.rows = rows;
          }, $EventTable_initialize$1.$$arity = 3);
          return (Opal.def(self, '$roll', $EventTable_roll$2 = function $$roll(randomizer, difficality, $kwargs) {
            var type,
                self = this,
                tens = nil,
                $ret_or_1 = nil,
                ones = nil,
                value = nil,
                chosen = nil;

            if ($kwargs == null) {
              $kwargs = $hash2([], {});
            } else if (!$kwargs.$$is_hash) {
              throw Opal.ArgumentError.$new('expected kwargs');
            }

            ;
            type = $kwargs.$$smap["type"];

            if (type == null) {
              type = nil;
            }

            ;

            tens = function () {
              if ($truthy($ret_or_1 = type)) {
                return $ret_or_1;
              } else {
                return randomizer.$roll_once(6);
              }

              ;
              return nil;
            }();

            ones = randomizer.$roll_once(6);
            value = $rb_plus($rb_times(tens, 10), ones);
            chosen = self.rows['$[]'](value);
            return "" + "ランダムイベント表(" + self.area_id + value + "):" + self.area_name + "<" + difficality.$name() + ">:" + chosen.$format(difficality);
          }, $EventTable_roll$2.$$arity = -3), nil) && 'roll';
        })($nesting[0], null, $nesting);

        cave = $$($nesting, 'EventTable').$new("洞窟", 1, $hash(11, $$($nesting, 'Row').$new("回復の泉。PC全員の〔HP〕〔FP〕が完全に回復する。「★死亡」以外のあらゆるBSも回復する。"), 12, $$($nesting, 'Row').$new("淡い光を放つ鉱石に包まれた部屋に出る。Ftが%s点回復する。", [1, 2, 3, 4, 1]), 13, $$($nesting, 'Row').$new("天井が開いていて植物の育っている洞窟内庭園。[知力-%s]判定に成功すると、力の沸く木の実を見つけてPC全員の〔HP〕〔FP〕を%s点回復できる。有効：「自然と生きる」【賢人の知恵】", [3, 6, 9, 12, 15], [20, 30, 40, 50, 100]), 14, $$($nesting, 'Row').$new("「きのこっきのこっげんきでろ～♪」洞窟内で栽培できる特殊なキノコを栽培する、キノコのフラウに出会う。100GP支払うことでキノコを1つ譲ってもらうことができ、〔HP〕が全回復してシナリオ終了まで〔HP〕の最大値に+%sのボーナスを得る。", [10, 15, 20, 25, 30]), 15, $$($nesting, 'Row').$new("ギア技術を用いた強力な懐中電灯のおいてある休憩室。迷宮を出るまでPC全員に有利な特異点「猫の目」があるものとして扱う。迷宮を出ると懐中電灯は寿命が来たのか壊れてしまう。"), 16, $$($nesting, 'Row').$new("" + "不思議な光を放つ水が湧いている。PCの〔HP〕〔FP〕のいずれかが減少している場合、このイベントは拒否できない。また全快でも不利な特異点「好奇心は猫を殺す」を持つPCは飲みにいこうとする。飲んだキャラクターは1D6を振り、以下の様な効果が発生する。\n" + "----------\n" + "1:〔HP〕〔FP〕と「★死亡」以外のBS全回復\n" + "2:シナリオ終了まで不利な特異点が全て消滅する\n" + "3:シナリオ終了まで「真実を知る者」「お金持ち」などのキャラクターの地位や立場に関連するものを除いた有利な特異点が全て消滅する\n" + "4:〔HP〕が1点になってしまう。〔HP〕が0以下の場合は〔HP〕〔FP〕が全回復\n" + "5:シナリオ終了まで余分な獣っぽい耳や尻尾が生える。既に生えているキャラクターはそれが大きくなる。聴覚に関する[感覚]判定+4。\n" + "6:あいやー！それ呪いの泉アルよ！シナリオ終了まで性別が男女入れ替わる。ロールプレイが面白かった場合、シナリオ終了時に「アタッチメント割引券」を与えても良い"), 21, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。カギやトラップはかかっていない。行動を消費することで開けることができる。", [0, 2, 4, 6, 8]), 22, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのカギがかかっている。行動を消費して[感覚-%s]判定でカギを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 23, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのトラップがかかっている。行動を消費して[感覚-%s]判定でトラップを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 24, $$($nesting, 'Row').$new("頑丈な岩壁に阻まれた隠し財宝の部屋を発見する。岩壁は「打撃」属性で合計%s点のダメージを与えると破壊され、財宝ランク%sのアイテムを入手可能。岩壁はどのヘクスからでも隣接扱いで攻撃可能。", [100, 200, 300, 500, 1000], [2, 4, 6, 8, 10]), 25, $$($nesting, 'Row').$new("ミミックの罠。ランダムなキャラクターに「3D+%s」の「斬撃」属性ダメージを与える。[知力-%s]判定に成功すればこの罠を見抜いて無効化でき、なおかつ%sGPを入手可能。有効：【盗賊の心得】【ロックスミス】", [30, 50, 70, 100, 300], [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 26, $$($nesting, 'Row').$new("トレジャーイーターの罠。冒険中に入手したアイテム(消耗品・GP以外)を全て失う。[知力-%s]判定に成功すればこの罠を見抜いて無効化することができ、なおかつ%sGP入手可能。", [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 31, $$($nesting, 'Row').$new("洞窟内で暗がりの中に近道を発見!有利な特異点「猫の目」を持つキャラクターがいればクリア時の財宝ランク+1。"), 32, $$($nesting, 'Row').$new("洞窟内で近道を発見!だが狭くて通れるかどうか…?有利な特異点「軟体動物」を持つキャラクターがいればクリア時の財宝ランク+1。"), 33, $$($nesting, 'Row').$new("6つの分かれ道だ、どちらに進めばいいのだろうか…?1D6を振って1～3が出ればクリア時の財宝ランク+1。4～6が出ればクリア時の財宝ランク-1。有効:「非凡な直感」"), 34, $$($nesting, 'Row').$new("足場の悪い道だ。うまく降りられればいいが…。[敏捷-%s]判定に成功すればクリア時の財宝ランク+1。失敗すると判定を行ったキャラクターに[3D+20]の防護点無視ダメージ。有効:「軟体動物」", [3, 6, 9, 12, 20]), 35, $$($nesting, 'Row').$new("大きな岩でふさがれた近道。力づくでどかせてやる！[体力-%s]判定に成功すれば売り味の財宝ランク+1。失敗すると判定を行ったキャラクターは〔FP〕を5点消費する。", [2, 4, 6, 8, 15]), 36, $$($nesting, 'Row').$new("6つの分かれ道だ、どうやら正解の道以外はエネミーの巣だが…。1D6を振って1が出ればクリア時の財宝ランク+1。2～6が出れば即座に洞窟のエンカウントイベントが発生する!有効:「非凡な直感」"), 41, $$($nesting, 'Row').$new("水あめ状のボディに王冠をのせた、珍しいエネミーだ!エネミーとエンカウント。"), 42, $$($nesting, 'Row').$new("獣の皮をかぶった魔族が狩った獲物の取り分でもめているようだ。彼らは興奮して争っているが、PCたちを見つけると向きを変えて襲い掛かってくる!エネミーとエンカウント。「マジカルクッキング」で持ち歩くタイプのものを作っていた場合、それを渡すことで戦闘を回避することもできる。"), 43, $$($nesting, 'Row').$new("岩だと思って通りすぎようとしたら魔族だった!?エネミーとエンカウント。相手は洞窟で巧妙に擬態しており、〔先制〕に+10のボーナスを得る。有利な特異点「虫の知らせ」があれば〔先制〕ボーナスを無効化できる。"), 44, $$($nesting, 'Row').$new("洞窟でトロッコに乗ったら暴走するギア魔族に追いかけられた!エネミーとエンカウント。トロッコに乗って逃げつつの戦闘になり、2ラウンド以内に倒せなければ轢かれてPC全員が「%s」の防護点無視ダメージを受ける。また、1ラウンドに1人誰かが行動を消費してトロッコを運転する必要があり、これに失敗すると即座に轢かれてしまう。轢かれると戦闘は終了する。PCにケイヴウォーカーがいればトロッコの運転を「支援ターン」で行える。", ["3D6+30", "3D6+30", "3D6+30", "3D6+100", "300"]), 45, $$($nesting, 'Row').$new("炎の燃え盛る洞窟だ!運の悪いことに魔獣までいるようだ…。イベント詳細決定時に敵味方全員が「3D6+%s」の「火炎」属性ダメージを受ける。さらにエネミーとエンカウント。", [10, 20, 30, 50, 150]), 46, $$($nesting, 'Row').$new("冷気に包まれた洞窟だ。更に氷の魔族や魔獣まで棲息している!イベント詳細決定時に敵味方全員が「3D+%s」の「冷気」属性ダメージを受ける。さらにエネミーとエンカウント。", [10, 20, 30, 50, 150]), 51, $$($nesting, 'Row').$new("突然の落盤がエネミーを押しつぶす!戦闘中の場合、ランダムにエネミー1体を即死させ、ドロップ品も入手可能。それ以外の場合は特に何も起きない。「分類:ネームド」「分類:魔将」のエネミーには「3D+50」の防護点無視ダメージ。"), 52, $$($nesting, 'Row').$new("採掘用のダイナマイトが打ち捨てられている。ケイヴウォーカー用の消耗品%sを持てるだけ持つことができる。", ["「ダイナマイト」", "「特性ダイナマイト」2個と「ダイナマイト」", "「特性ダイナマイト」4個と「ダイナマイト」", "「特性ダイナマイト」", "「ボンバーキング」(「電子の国のアリス」適用時）もしくは「特性ダイナマイト」（非適用時）"]), 53, $$($nesting, 'Row').$new("洞窟内に有毒ガスが発生している!敵味方全員[抵抗-%s]で判定し、失敗したキャラクターは%s点の防護点無視ダメージを受ける。有効:【ガシンショウタン】", [4, 6, 8, 10, 15], [15, 30, 45, 60, 100]), 54, $$($nesting, 'Row').$new("溶岩の流れる部屋だ、早くおさらばしたいところだが…。[敏捷-%s]判定に成功すれば何事も無く渡り切ることができる。失敗するとPC全員に「3D6+%s」の「火炎」属性ダメージ。PCにドラコニアンがいれば判定不要。有効:【野伏の歩み】", [3, 6, 9, 12, 20], [20, 40, 60, 90, 200]), 55, $$($nesting, 'Row').$new("突然の落盤がPCのうちランダムに1人を押しつぶす!「3D6+%s」の防護点無視ダメージを受ける。「ドッジ-%s」で回避可能。有利な特異点「猫の目」か「虫の知らせ」があれば判定不要。", [40, 60, 80, 120, 400], [4, 6, 8, 10, 20]), 56, $$($nesting, 'Row').$new("突然の地震が起きて洞窟全体が崩落を始める!このイベントが発生すると戦闘は強制終了する。PC全員[敏捷%s]で判定し、失敗したキャラクターは〔HP〕が0になる。〔HP〕が0以下だった場合は死亡してしまう。全員が判定に成功した場合、クリア時の財宝ランク+1。", ["", "-1", "-2", "-4", "-8"]), 61, $$($nesting, 'Row').$new("プラネタリウムのように鉱石が輝く部屋。星の配置に関する謎かけになっている。行動を消費して[知力-%s]判定に成功するとこの謎を解くことができる。謎が解けると%sを入手可能。有効:【賢人の知恵】", [6, 9, 12, 15, 30], ["「うぃっしゅすたー」(大事なもの)か、10000GPの好きな方", "「うぃっしゅすたー」(大事なもの)2個か、20000GPの好きな方", "「うぃっしゅすたー」(大事なもの)3個か、30000GPの好きな方", "「うぃっしゅすたー」(大事なもの)5個か、50000GPの好きな方", "「wish star」（消耗品）"]), 62, $$($nesting, 'Row').$new("地熱で温泉が湧いている!みんなで一休みできそうだ。このイベントが発生すると戦闘は強制終了する。PC全員の〔HP〕〔FP〕[Ft]が全回復する。また、シナリオ終了まで「ターン開始」時に〔HP〕が%s点ずつ回復する。", [5, 10, 15, 20, 30]), 63, $$($nesting, 'Row').$new("地下渓流を発見する。どうやらここを進んでいくしかないようだ…。このラウンドではPCが「水中」にいるものとする。また、[敏捷-%s]判定に成功すると水中に沈んだ宝箱を発見する。中身は「%s」で、カギやトラップはかかっていない。行動を消費することで開けることができる。有効:【野伏の歩み】", [6, 9, 12, 15, 25], ["3D6x100GP", "(3D6+10)x100GP", "(3D6+30)x100GP", "3D6x1000GP", "3D6x10000GP"]), 64, $$($nesting, 'Row').$new("とてつもない量のアダマン合金の原石を発見する!持ち帰り放題だ!「アダマン原石」は1つ%sGPで売却可能で、行動を消費することで自分のアイテム欄に好きなだけ入手可能。", [300, 500, 1000, 2000, 5000]), 65, $$($nesting, 'Row').$new("地面から強力な重力で引きつけられる!敵味方全員が〔移動〕に-5のペナルティを受ける。さらに洞窟のエンカウントイベントが発生。「4-5」と「4-6」の部屋のダメージは適用しない。"), 66, $$($nesting, 'Row').$new("怪しい光を放つ鉱石の部屋。鉱石は不気味な振動を放っており、ラウンド終了時にランダムなPC1人の武器が1つ壊れてシナリオ終了まで使用できなくなる。鉱石は「打撃」属性で合計%s点のダメージを与えると破壊される。鉱石はどのヘクスからでも隣接扱いで攻撃可能。", [100, 200, 300, 500, 1000])));
        ruin = $$($nesting, 'EventTable').$new("遺跡", 2, $hash(11, $$($nesting, 'Row').$new("回復の泉。PC全員の〔HP〕〔FP〕が完全に回復する。「★死亡」以外のあらゆるBSも回復する。"), 12, $$($nesting, 'Row').$new("随分進んだし一休みしよう。ラウンド数が奇数の場合は〔FP〕が「%s」回復する。ラウンド数が偶数の場合は進んだように見せかけて迷っているだけだった。どっと疲れてしまい〔FP〕は回復せず、クリア時の財宝ランク-1。有利な特異点「精緻な記憶」があれば、偶数ラウンドでも〔FP〕が回復して財宝ランクも減少しない。", ["3D6", "3D6+5", "3D6+10", "3D6+15", "3D6+30"]), 13, $$($nesting, 'Row').$new("どうやらここは古代の医務室らしい。なにやら怪しげな機械がたくさんあるが…。[知力-%s]判定に成功すればPC全員の〔HP〕〔FP〕が完全に回復する。「★死亡」以外のあらゆるBSも回復する。有効：【魔導工学のススメ】", [3, 6, 9, 12, 18]), 14, $$($nesting, 'Row').$new("「きみたちの道に光あれ…お金？いらないよ」道標の光ゴケを栽培している、苔のフラウに出会う。以後「いくつかの道から正解を選ぶ」イベントが発生した場合、光ゴケがそのうちの1つに飛んでいき、必ず正解の道を選ぶことができる。次が最終イベントだった場合、クリア時の財宝ランク+1。"), 15, $$($nesting, 'Row').$new("ダンジョンの見取り図を書いた部屋に出る。次のランダムイベントでは、好きな地形を選択してからイベント表を振ることができる。次が最終イベントだった場合、クリア時の財宝ランク+1。"), 16, $$($nesting, 'Row').$new("" + "「パワーアップ装置!」と書かれた怪しげな機械が置いてある。%sGPを支払って使用するとキャラクターを強化(?)可能。使用するかは自由だが、不利な特異点「好奇心は猫を殺す」を持っているキャラクターはGPがあるなら入ってしまう。使用したキャラクターは1D6を振り、以下のような効果が発生する。\n" + "----------\n" + "1:なんと、ランダムな[主能力]が1点上昇する!（永久）\n" + "2:ただの日焼けサロンだ!健康的に焼け、シナリオ終了まで「火炎」に対する防護点+10。\n" + "3:CLが1上昇する!やったね!【特技】はシナリオが終了してから習得する。\n" + "4:装置は突然爆発する!ダメージは受けないが髪型がアフロに。装置は壊れる。\n" + "5:巨大化してシナリオ終了まで〔HP〕の最大値が+50!〔HP〕〔FP〕も全回復。装置は壊れる。\n" + "6:故障のせいかランダムな[主能力]が1点下降する…大ショック…（永久）\n" + "\n" + "[主能力]変動時は1D6を振ってどの能力が変動するか決定する。\n" + "1:体力　2:敏捷　3:感覚　4:知力　5:意志　6:使用者が選ぶ", [3000, 5000, 10000, 20000, 30000]), 21, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。カギやトラップはかかっていない。行動を消費することで開けることができる。", [0, 2, 4, 6, 8]), 22, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのカギがかかっている。行動を消費して[感覚-%s]判定でカギを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 23, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのトラップがかかっている。行動を消費して[感覚-%s]判定でトラップを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 24, $$($nesting, 'Row').$new("部屋で脱出ゲームのような様々な仕掛けをとかないと開かない宝箱。行動を消費して[知力-%s]判定に成功すれば開けることができ、財宝ランク%sのアイテムを入手可能。判定に失敗すると宝箱は爆発してしまい、中身も失われる。有効:【盗賊の心得】", [6, 9, 12, 15, 25], [2, 4, 6, 8, 10]), 25, $$($nesting, 'Row').$new("ミミックの罠。ランダムなキャラクターに「3D+%s」の「斬撃」属性ダメージを与える。[知力-%s]判定に成功すればこの罠を見抜いて無効化でき、なおかつ%sGPを入手可能。有効：【盗賊の心得】【ロックスミス】", [30, 50, 70, 100, 300], [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 26, $$($nesting, 'Row').$new("トレジャーイーターの罠。冒険中に入手したアイテム(消耗品・GP以外)を全て失う。[知力-%s]判定に成功すればこの罠を見抜いて無効化することができ、なおかつ%sGP入手可能。", [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 31, $$($nesting, 'Row').$new("鏡に映る怪人が自分の真似をしろとジェスチャーしている。[敏捷-%s]判定に成功するとうまく真似してパントマイムすることができ、鏡が消滅して隠し通路が開かれる。クリア時の財宝ランク+1。【華劇:○○】を習得したフラウがいれば判定不要。", [6, 8, 10, 12, 16]), 32, $$($nesting, 'Row').$new("小さな魔将の像がフィルトウィズの地図上で乱雑に置かれている。[知力-%s]判定に成功すれば魔将の所在地を正しく配置することができ、隠し通路が開かれる。クリア時の財宝ランク+1。有効:【賢人の知恵】", [6, 9, 12, 15, 20]), 33, $$($nesting, 'Row').$new("シュートの罠に引っかかるが、結果的に新たな道を発見できた!このイベントが発生すると戦闘は強制終了する。PC全員が「3D+10」の「打撃」属性ダメージを受けるが、クリア時の財宝ランク+1。"), 34, $$($nesting, 'Row').$new("ラダマンティス崇拝者が創りだした巨大な甲羅のようなものが置かれた部屋。登っていけば近道することができそうだが、これはかなり骨が折れそうだ…。行動を消費して[敏捷-%s]判定を行い、成功すればクリア時の財宝ランク+1。判定に挑戦したキャラクターは次のターンまで〔回避〕判定を行えない。有効:「軟体動物」【野伏の歩み】", [6, 9, 12, 15, 20]), 35, $$($nesting, 'Row').$new("後ろから重い物が転がってくる音がする。ローリングストーンだ!このイベントが発生すると戦闘は強制終了する。ラウンド終了時に全員の〔移動〕が%s以上であればクリア時の財宝ランク+1。〔移動〕が%s未満のPCは「%s」の防護点無視ダメージを受ける。", [6, 8, 10, 12], [6, 8, 10, 12, 15], ["3D6+30", "3D6+50", "3D6+70", "3D6+100", "300"]), 36, $$($nesting, 'Row').$new("通路が複雑に入り組んでおり道に迷いそうだ…。2D6を振り、ゾロ目ならクリア時の財宝ランク+1。それ以外の場合はクリア時の財宝ランク-1。有効:「非凡な直感」"), 41, $$($nesting, 'Row').$new("絶体絶命、モンスターハウスだ!危機感を煽るBGMも流れてくる。これらのエネミーを全滅させた際、最後に倒したエネミーからは必ず「レア」を入手できる。イベント決定後に逃亡を宣言しても良い。その場合クリア時の財宝ランク-2。"), 42, $$($nesting, 'Row').$new("石像が並んでいる通路があるが…なんと石像は警備装置だった!エネミーとエンカウント。奇襲攻撃のため、エネミーからの攻撃の〔回避〕に-4のペナルティを受ける。【魔導工学のススメ】があれば警戒していたため、このペナルティは受けない。"), 43, $$($nesting, 'Row').$new("魔族が障害物に身を隠しながら狙撃してきた!エネミーとエンカウント。障害物のため、エネミーは近接攻撃に対する防護点に+30のボーナス。"), 44, $$($nesting, 'Row').$new("「汝が戦う理由とは何か?答えい人間!」ブツゼンにモンスターが仁王立ちしており、問答を行ってくる。[意思-6]判定に成功すると戦闘を回避することができ、ドロップ品も入手可能。判定に失敗するか戦闘を望んだ場合、エネミーとエンカウント。有効:【詩人の交渉術】"), 45, $$($nesting, 'Row').$new("進路上に鎖に繋がれたモンスターを発見する。どうやら普通のモンスターより凶暴なようだ、戦うべきか避けるべきか…エネミーとエンカウント。エネミーはあらゆる致傷力に+%sのボーナスを得る。戦闘を避けた場合クリア時の財宝ランク-1。", [10, 20, 30, 40, 100]), 46, $$($nesting, 'Row').$new("暴れゴーレムが襲い掛かってくる!暴走しているせいか凄まじいスピードだ!エネミーとエンカウント。このエネミーは〔移動〕〔先制〕に+10のボーナスを得ており、全員が行動終了した後、ラウンド終了前にもう1度ターンがまわってくる。"), 51, $$($nesting, 'Row').$new("一斉に周囲の壁の射出口が開き、無数の矢が放たれる!PC全員に「%s」の「刺突」属性ダメージ。「ドッジ-%s」で〔回避〕が可能。有利な特異点「虫の知らせ」があれば〔回避〕に+4のボーナスを得る。", ["3D6+20", "3D6+40", "3D6+60", "3D6+90", "200"], [4, 6, 8, 10, 20]), 52, $$($nesting, 'Row').$new("突然部屋に白いガスが充満して睡魔が襲ってくる!PC全員が「☆眠り」を受ける。[抵抗-%s]判定で無効化。", [2, 4, 6, 8, 12]), 53, $$($nesting, 'Row').$new("フロアイミテーターの罠だ!突然部屋の入口が閉まり、君たちを消化し始める!「斬撃」属性で合計%s点のダメージを与えると入り口が開き脱出できるが、それまでPC全員は「ターン開始」時に%s点の防護点無視ダメージを受ける。ラウンドごとの地形変化やイベントは行われず、最終イベントにも進めなくなる。入り口はどのヘクスからでも隣接扱いで攻撃可能。誰も「斬撃」属性の攻撃ができないなら君たちの冒険はここまでだ。", [100, 200, 300, 500, 1000], [10, 20, 30, 40, 60]), 54, $$($nesting, 'Row').$new("休憩室のようだ。寝心地のよさそうなふかふかのベッドまである。このイベントが発生すると戦闘は強制終了する。PC全員が[意思-%s]判定を行い、失敗したPCは「☆眠り」を受ける。この「☆眠り」は誰かが行動を消費して叩き起こさない限り、シナリオ終了まで持続する。全員が判定に失敗した場合、君たちの冒険はここまでだ。もう目覚めることはないが、せめていい夢を見られるといいだろう。ホムンクルスは「居眠り禁止」を厳命されているため、「☆眠り」を受けない。", [2, 4, 6, 8, 12]), 55, $$($nesting, 'Row').$new("「ラダマンティスの蛇」の像と目が合ってしまった。どうやらダンジョンの監視者に見つかってしまったらしい!以後探索中にエネミーと遭遇した場合、CLの最も高いエネミーが1体増加する。このイベントの効果は累積せず、「分類：ネームド」「分類：魔将」のエネミーの数は変化しない。"), 56, $$($nesting, 'Row').$new("" + "怪しげな卵が置かれた部屋。君たちが近寄ると卵が割れて…?1D6を振り、その出目によって中から様々なものが出現する。\n" + "----------\n" + "1～2:これは財宝だ!財宝ランク%sのアイテムが入手可能。\n" + "3～4:卵はそのまま大爆発!PC全員に「%s」の「打撃」「火炎」属性ダメージ。\n" + "5～6:卵からドラゴンが!エネミーとエンカウント。", [2, 4, 6, 8, 10], ["3D6+30", "3D6+50", "3D6+70", "3D6+100", "300"]), 61, $$($nesting, 'Row').$new("突然ダンジョンの明かりが消えてほぼ真っ暗になってしまう!次のラウンドに入るまであらゆる判定に-6のペナルティを受ける。有利な特異点「猫の目」があればペナルティを受けない。また「洞窟1-5の懐中電灯」や「遺跡1-4の光ゴケ」などがあれば無効。"), 62, $$($nesting, 'Row').$new("" + "どうやら古代の訓練施設のようだ。「パンチングマシーン」と書かれたものがあり、行動を消費すれば100GPを支払って挑戦可能。「格闘」武器でのダメージ判定を1回行い、与えたダメージによってファンファーレとともに景品が出る。1回挑戦すると、ガタが来ていたのか壊れてしまう。\n" + "----------\n" + "ダメージ%s以上:財宝ランク%sのアイテム\n" + "ダメージ%s以上:財宝ランク%sのアイテム\n" + "ダメージ%s以上:財宝ランク%sのアイテム", [20, 40, 60, 80, 200], [0, 2, 4, 6, 8], [30, 50, 70, 90, 400], [1, 3, 5, 7, 9], [40, 60, 80, 100, 600], [2, 4, 6, 8, 10]), 63, $$($nesting, 'Row').$new("謎の装置のせいで気になるあの子と体が入れ替わってしまった!?シナリオ終了までPCのうち2人の体や能力が入れ替わってしまう。入れ替わるキャラクターはランダムで決定するか、面白くなるようにGMが選ぶ。戦闘で扱うデータは今までどおりだが、入れ替わったキャラクターのロールプレイを行うこと。"), 64, $$($nesting, 'Row').$new("やった、きんきらきんの宝物庫だ!「2-1」「2-2」「2-3」の宝箱が3つ同時に出現する。ただし、「2-3」の罠の解除に失敗すると、宝箱を開けようとしたキャラクターは黄金像になってしまう。めでたく財宝の仲間入りだ。「☆石化」と同様に扱うが、シナリオ終了までいかなる手段でも治せない。"), 65, $$($nesting, 'Row').$new("キャンディークラウンハウスだ!エネミーとエンカウント。4ラウンド終了までに1体も倒せなかった場合、チャンスを逃した悔しさからPC全員が〔FP〕に「逃げたキャンディークラウンの数x5」の防護点無視ダメージを受ける。"), 66, $$($nesting, 'Row').$new("なぜここに呼ばれたかお分かりになりますでしょうか?ラダマンティス崇拝者の作りだした審判の部屋に飛ばされてしまった!ラウンド終了時に部屋の中央のラダマンティス像から裁きの光が放たれ、PC全員が「%s」の防護点無視ダメージを受ける。%s点のダメージを与えれば破壊可能でダメージも受けない。ラダマンティス像はどのヘクスからでも隣接扱いで攻撃可能。破壊に成功すると財宝ランク%sのアイテムが入手可能。", ["3D6+50", "3D6+80", "3D6+110", "3D6+150", "400"], [200, 400, 600, 1000, 2000], [3, 5, 7, 9, 11])));
        mountain = $$($nesting, 'EventTable').$new("山岳", 3, $hash(11, $$($nesting, 'Row').$new("回復の泉。PC全員の〔HP〕〔FP〕が完全に回復する。「★死亡」以外のあらゆるBSも回復する。"), 12, $$($nesting, 'Row').$new("休憩に丁度いい広場を見つけた。〔FP〕が3D6%s点回復する!だが、居心地が良すぎて離れづらくなってしまう。PC全員が[意思-%s]判定を行う。PCのうち半分以上が失敗した場合、次のラウンドもこのイベントが発生して、クリア時の財宝ランク-1。", ["", "+5", "+10", "+15", "+30"], [2, 3, 4, 6, 9]), 13, $$($nesting, 'Row').$new("山小屋を発見し一休み。〔HP〕と〔FP〕が3D6%s点回復する。PCが4人の時にこのイベントが発生した場合、休憩中の暇つぶしに山小屋の四隅をぐるぐるまわって運動し始める。だが、後から妙なことに気が付きFtが1点減少する…", ["", "+5", "+10", "+15", "+30"]), 14, $$($nesting, 'Row').$new("" + "「へーっ、こんなとこまでよく来たね!これ、食べる?食べる?」キイチゴを栽培しているフラウに出会う。栄養満点で幸せになる。PC全員の〔HP〕と〔FP〕を10点、Ftを1点回復することができる。さらに、【魔法の料理人】を持つPCがいれば、消耗品「いちごジャム」をSLv個入手可能。\n" + "----------\n" + "名称:いちごジャム\n" + "価格:非売品\n" + "解説:〔HP〕と〔FP〕を10点、Ftを1点回復する。戦闘中には使用できない。"), 15, $$($nesting, 'Row').$new("少し休憩できそうな洞窟を発見する。PC全員の〔FP〕を10点回復する。中には他のエクスプローラーが残していったと思われる道具もあった。「%s」を入手することができる。大雨が降っていたり、火災が起こったりしていた場合、その効果も消滅する。", ["高級HPポーション", "最高級HPポーション", "特性HPポーション", "うぃっしゅすたー", "うぃっしゅすたーx3"]), 16, $$($nesting, 'Row').$new("" + "回復の泉。PC全員の〔HP〕〔FP〕が完全に回復する。%s「★死亡」以外のあらゆるBSも回復する。しかし山間の貴重な水源のため亜人によって管理されており、使用するには%sGPが必要。PCのパーティーに管理している亜人と同じ種族がいるか、【詩人の交渉術%s】を持つキャラクターがいれば無料で使用可能。どの種族が管理しているかは1D6を振って決定する。\n" + "----------\n" + "1:ドラコニアン\n" + "2:リザードとワイズマン\n" + "3:フラウ\n" + "4:シルヴァテイル\n" + "5:ストームコーザー\n" + "6:グラント", ["", "", "", "", "また、フォーチュンも最大値を越えて1増加する。"], [500, 1000, 2000, 4000, 30000], [1, 2, 3, 4, 5]), 21, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。カギやトラップはかかっていない。行動を消費することで開けることができる。", [0, 2, 4, 6, 8]), 22, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのカギがかかっている。行動を消費して[感覚-%s]判定でカギを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 23, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのトラップがかかっている。行動を消費して[感覚-%s]判定でトラップを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 24, $$($nesting, 'Row').$new("狭い谷底に宝箱があるのが見える。そして手元には岩とロープが。これはもうバンジージャンプで取ってくるしかない!行動を消費して[敏捷-%s][意思-%s]で判定を行い、両方に成功すれば財宝ランク%sのアイテムを入手できる。[敏捷]判定がファンブルだった場合ロープがちぎれてしまい、4ラウンド目が終了するまで戻ってこれない。有効:【野伏の歩み】([敏捷]判定のみ)", [3, 6, 9, 12, 16], [3, 5, 7, 9, 12], [3, 5, 7, 9, 11]), 25, $$($nesting, 'Row').$new("ミミックの罠。ランダムなキャラクターに「3D+%s」の「斬撃」属性ダメージを与える。[知力-%s]判定に成功すればこの罠を見抜いて無効化でき、なおかつ%sGPを入手可能。有効：【盗賊の心得】【ロックスミス】", [30, 50, 70, 100, 300], [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 26, $$($nesting, 'Row').$new("トレジャーイーターの罠。冒険中に入手したアイテム(消耗品・GP以外)を全て失う。[知力-%s]判定に成功すればこの罠を見抜いて無効化することができ、なおかつ%sGP入手可能。", [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 31, $$($nesting, 'Row').$new("山歩きの達人だけが発見できるショートカットコース。%sを持つキャラクターがいればクリア時の財宝ランク+1。", ["有利な特異点「鷹の目」か【野伏の歩み】", "有利な特異点「鷹の目」２段階か【野伏の歩み2】", "有利な特異点「鷹の目」２段階か【野伏の歩み3】", "有利な特異点「鷹の目」２段階か【野伏の歩み4】", "有利な特異点「鷹の目」必須かつ【野伏の歩み4】"]), 32, $$($nesting, 'Row').$new("鉱物を運んでいたのであろう、運搬用トロッコを発見する。うまく運転できれば素早く進行できそうだが…?[敏捷-%s]判定に成功すればクリア時の財宝ランク+1。判定に失敗すると脱線して放り出されてしまい、PC全員が「3D+10」の防護点無視ダメージを受ける。PCにケイヴウォーカーがいれば判定不要。", [3, 6, 9, 12, 16]), 33, $$($nesting, 'Row').$new("険しい斜面が続く。これは体力勝負になりそうだ…。PC全員が[体力%s]判定を行い、全員が成功すればクリア時の財宝ランク+1。判定に失敗したキャラクターは〔FP〕を%s点失う。", ["", "-1", "-2", "-4", "-8"], [5, 10, 15, 20, 30]), 34, $$($nesting, 'Row').$new("空を飛べればショートカットできそうな崖を発見する。なんらかの飛行手段のあるPCがいる場合、クリア時の財宝ランク+1。元々飛行できなくてもラウンド中に【フライト】などの【特技】を使用してラウンド終了時に「飛行状態」であれば良い。"), 35, $$($nesting, 'Row').$new("遠くから山彦のような不思議な声が聞こえる。山彦と会話をすると迷いやすい道を教えてくれるが、大声で会話をしているのでエネミーに見つかりやすくなる。会話をするなら次のイベントは必ず山岳のエンカウントイベントになり、会話を諦めるならクリア時の財宝ランク-1。有利な特異点「天体時計」があれば会話を諦めてもデメリットはない。"), 36, $$($nesting, 'Row').$new("急に突風が吹いてきて、体力のないものは吹き飛ばされてしまう!もっとも[体力]の低いPC1人が[体力-%s]判定を行い、失敗すると「%s」の防護点無視ダメージを受ける。さらに、救助に時間がかかるためクリア時の財宝ランク-1。PCにストームコーザーがいればイベントの効果を無視できる(演出は自由)。", [2, 3, 4, 6, 9], ["3D6+20", "3D6+40", "3D6+60", "3D6+90", "200"]), 41, $$($nesting, 'Row').$new("高いところから多数の岩がごろごろと…いや、これは魔物だ!エネミーとエンカウント。高低差で勢いがついているため、エネミーは〔移動〕に+5、%sのボーナスを得る", ["物理攻撃の致傷力に+10", "物理攻撃の致傷力に+30", "物理攻撃の致傷力に+60", "物理攻撃の致傷力に+120", "あらゆる攻撃の致傷力に+100"]), 42, $$($nesting, 'Row').$new("空中から羽をもった魔物があちこちから攻撃を仕掛けてきた!エネミーとエンカウント。エネミーのうち%s体は任意の「PC配置ヘクス」に設置される。", [3, 3, 1, 1, 3]), 43, $$($nesting, 'Row').$new("「た、隊長、もうダメです!」「バカもん!この程度で根を上げるな!」登山訓練中の魔族の小隊と出くわす。だが相手は疲れているようだ?エネミーとエンカウント。〔FP〕は最大値から10点減少している。"), 44, $$($nesting, 'Row').$new("山道の横から突然穴が空き、魔物と鉢合わせしてしまう!エネミーとエンカウント。PC全員が[感覚-3]判定を行い、失敗したキャラクターはそのラウンド中に行動することができない。(〔回避〕や[抵抗]の判定、自分のターン以外で行う【特技】は可能)有効:「狐の耳」"), 45, $$($nesting, 'Row').$new("ケタケタ笑いながら空から襲撃される。エネミーとエンカウント。彼女達はとても飽きっぽいので2ラウンド行動した後、3ラウンド目の開始前に立ち去ってしまう。(ドロップは入手できない)"), 46, $$($nesting, 'Row').$new("フェニックスがつがいで暮らす縄張りに足を踏み入れてしまった!エネミーとエンカウント。すぐに引き返せば戦闘を回避できるが、クリア時の財宝ランク-1。そのまま進むのであれば[意思-6]で判定を行い、成功すれば見逃してもらうことができる。失敗するとフェニックスは怒り狂い、襲ってくる。有効:【詩人の交渉術】"), 51, $$($nesting, 'Row').$new("ジャーンジャーン!げぇ、落石だ!!上から魔族が岩を落とし始める。PC全員に「%s」点の「打撃」属性ダメージ。「ドッジ-%s」で〔回避〕が可能。", ["3D6+20", "3D6+40", "3D6+60", "3D6+90", "200"], [3, 5, 7, 9, 15]), 52, $$($nesting, 'Row').$new("ファイトー!いっぱーつ!!足場が崩れ出す。PC全員が[敏捷-%s]判定を行い、失敗すると「%s」点の防護点無視ダメージを受ける。成功したPCは[体力]判定を行い、失敗したPC1人を支えることができる。この判定に失敗した場合、支えようとしたキャラクターも一緒にダメージを受ける。有効:【野伏の歩み】", [3, 6, 9, 12, 20], ["3D6+20", "3D6+40", "3D6+60", "3D6+90", "200"]), 53, $$($nesting, 'Row').$new("滑りやすい岩を飛び移っていく道が続いている。敵味方全員が[敏捷-%s]で判定を行い、失敗したキャラクターは「☆転倒」を受ける。飛行可能なキャラクターはこの影響を受けない。有効:【野伏の歩み】", [2, 2, 4, 6, 10]), 54, $$($nesting, 'Row').$new("先に進む道に『銀糸の甲殻』アルゲントゥムの巣がびっしり張られている。幸い主はいないようだが、巣が邪魔で移動がしにくい…敵味方全員が4ラウンド目まで飛行状態になれなくなり、〔移動〕にも-5のペナルティを受ける。不利な特異点「トラウマ:虫」などがあればそれも適用する。"), 55, $$($nesting, 'Row').$new("美しい万年雪の中を進んでいたと思ったのも束の間、雪崩に遭遇してしまう!全員が「%s」点の「打撃」「冷気」属性ダメージを受け、クリア時の財宝ランク-2。[感覚-%s]の判定に成功すれば、すぐに洞窟に避難してやり過ごすことができる。洞窟の中には%sがあり、入手可能。有効:「狐の耳」【野伏の歩み】", ["3D6+30", "3D6+50", "3D6+70", "3D6+100", "300"], [6, 9, 12, 15, 20], ["スノーの結晶(装飾品/3000GP)", "紺碧の瞳(装飾品/10000GP)", "氷狼の爪(装飾品/25000GP)", "氷河龍の盾(盾/65000GP)", "コキュートスダガー(ナイフ/110000GP)"]), 56, $$($nesting, 'Row').$new("���から魔族の大群が登ってくる!ジャーンジャーン!石を落として撃退だ!魔族の群れは射撃攻撃で合計%s点のダメージを与えれば撃退可能。複数の対象を攻撃できる【特技】を使用した場合は、ダメージを2回計算可能。ラウンド終了時までに撃退できなかった場合、PC全員が撃破に足りなかったダメージに等しい防護点無視ダメージを受ける。魔族の群れはどのヘクスからでも攻撃可能だが、射程が10ヘクス以上の攻撃でなければならない。石を落としても攻撃可能で、「3D+%s」点の「打撃」属性ダメージを与える。この攻撃は判定なしで自動的に命中する。", [100, 200, 300, 500, 1200], [10, 20, 30, 50, 100]), 61, $$($nesting, 'Row').$new("急に大雨が降り出した、屋内に避難したいところだが…地形が「洞窟」か「遺跡」に変更されるまで、ラウンド終了時、〔FP〕に「%s」点の防護点無視ダメージを受ける。〔FP〕に受けるダメージはPCがそれぞれダイスを振って決定する。「水中行動」が可能なPCはこの効果を受けない。", ["1D6", "2D6", "3D6", "3D6+5", "3D6+15"]), 62, $$($nesting, 'Row').$new("色とりどりの石が岩肌に…これはカラーストーンの原石だ![知力-%s]判定に成功すればカラーストーン原石を持ち帰ることができる。「カラーストーン原石」は1つ%sGPで売却可能で、行動を消費することで自分のアイテム欄に好きなだけ入手可能。有効:【魔導工学のススメ】", [6, 9, 12, 15, 20], [500, 1000, 2000, 3000, 5000]), 63, $$($nesting, 'Row').$new("不思議な岩がある。1D6を振って1～2であれば「火炎」属性、3～4であれば「冷気」属性、5～6であれば「電撃」属性の攻撃で、4ラウンド目終了までに%s点のダメージを与えれば破壊可能。不思議な岩はどのヘクスからでも隣接扱いで攻撃可能で、破壊したあとには財宝ランク%sのアイテムが発見できる。", [30, 60, 100, 200, 500], [2, 4, 6, 8, 10]), 64, $$($nesting, 'Row').$new("「こんなところで人間に会うなんて珍しいな、お前らも食っていくか?」ストームコーザーが獲物を取った後調理している。このイベントが発生するとエネミーは消滅する。マジカルクッキングLv4「ジャンボ串焼き」を食べさせてもらえる。【魔法の料理人】を習得したPCがいれば、Lv5「グラント風香草焼き」にパワーアップする。この料理の効果は、自分たちが「マジカルクッキング」で作った料理と累積する。"), 65, $$($nesting, 'Row').$new("高山植物の群生地を発見する。ポーションの材料になるものもありそうだ?[知力-%s]判定に成功すれば、薬草を持ち帰ることができる。「高山の薬草」は1つ%sGPで売却可能で、行動を消費することで自分のアイテム欄に好きなだけ入手可能。【ポーションナレッジ】があれば判定は不要。有効:【賢人の知恵】「自然と生きる」", [6, 9, 12, 15, 20], [500, 1000, 2000, 3000, 5000]), 66, $$($nesting, 'Row').$new("岩壁が大きく崩れていく!崩落に巻き込まれて入口付近まで戻されてしまい、クリア時の財宝ランク-2。だが、崩落した後に鈍く輝くアイテムが転がっている…?[感覚-%s]判定に成功すれば%sを入手可能。有効:「鷹の目」", [6, 9, 12, 15, 20], ["アダマンソード(剣/8000GP)", "アダマンスケイル(鎧/15000GP)", "アダマンプレート(鎧/30000GP)", "ヒュージーブレード(剣/45000GP)", "封印の手錠(盾/200000GP)"])));
        waterside = $$($nesting, 'EventTable').$new("水辺", 4, $hash(11, $$($nesting, 'Row').$new("回復の泉。PC全員の〔HP〕〔FP〕が完全に回復する。「★死亡」以外のあらゆるBSも回復する。"), 12, $$($nesting, 'Row').$new("甲羅干しに適した暖かい小島を見つける。少しだけ休憩しよう。〔HP〕と〔FP〕が「3D%s」点回復する。ワイズマンのPCは全回復する。何か面白い寝言を言ったPCに「%s」が空から降ってくる。", ["", "+5", "+10", "+15", "+30"], ["HPポーション", "高級HPポーション", "最高級HPポーション", "うぃっしゅすたー", "蘇生ポーション"]), 13, $$($nesting, 'Row').$new("魚の群れを発見!捕まえてたらふくいただくとしよう!【魔法の料理人】があればマジカルクッキングの「魔界魚の目玉」(Lv3)%sの効果を得られる。この効果はすでにマジカルクッキングを使用していても累積する。", ["", "、【魔法の料理人2】があれば「シルヴァまっしぐら」(Lv4)と「エドマエスシ」(Lv5)の全て", "、【魔法の料理人2】があれば「シルヴァまっしぐら」(Lv4)と「エドマエスシ」(Lv5)、【魔法の料理人3】があれば「刺身盛り合わせ」(Lv6)と「オオトロスシ」(Lv7)の全て", "、【魔法の料理人2】があれば「シルヴァまっしぐら」(Lv4)と「エドマエスシ」(Lv5)、【魔法の料理人3】があれば「刺身盛り合わせ」(Lv6)と「オオトロスシ」(Lv7)、【魔法の料理人4】があれば「特上うな丼」(Lv8)の全て", "、【魔法の料理人2】があれば「シルヴァまっしぐら」(Lv4)と「エドマエスシ」(Lv5)、【魔法の料理人3】があれば「刺身盛り合わせ」(Lv6)と「オオトロスシ」(Lv7)、【魔法の料理人4】があれば「特上うな丼」(Lv8)、【魔法の料理人５】で全員のフォーチュン+1（最大値をこえる）の全て"]), 14, $$($nesting, 'Row').$new("「こんにちは、スーっとして気持ちいいよ。…ふふ、一緒に入ろうか?」ミントや菖蒲を育てているフラウに出会い、薬湯に浸かって〔FP〕が全回復する。さらに、「火炎」属性に対する防護点に+10のボーナス。"), 15, $$($nesting, 'Row').$new("リザードの集落につく。〔HP〕の減ったキャラクターがいれば持て囃され、マジカルクッキング「カリカリミミズ肉」(Lv2)をごちそうしてもらい、この先の道案内も買って出てくれる。クリア時の財宝ランク+1。全員の〔HP〕が満タンの場合は、そっけない扱いをされ何も起こらない。この効果はすでにマジカルクッキングを使用していても累積する。"), 16, $$($nesting, 'Row').$new("回復の泉に見せかけた毒の泉。パーティーメンバーの〔HP〕〔FP〕のいずれかが減少している場合このイベントは拒否できない。毒の水で「%s」点の防護点無視ダメージを受ける。〔HP〕〔FP〕が全快のキャラクターと「虫の知らせ」があるPCはこの効果を受けない。[知力-6]判定に成功すればこれが毒の泉だとわかる。有効:【野伏の歩み】【賢人の知恵】", ["3D6+10", "3D6+20", "3D6+30", "3D6+50", "100"]), 21, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。カギやトラップはかかっていない。行動を消費することで開けることができる。", [0, 2, 4, 6, 8]), 22, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのカギがかかっている。行動を消費して[感覚-%s]判定でカギを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 23, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのトラップがかかっている。行動を消費して[感覚-%s]判定でトラップを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 24, $$($nesting, 'Row').$new("水中の奥深くに宝箱があるのが見える。とってくるのは無理そうに見えるが…行動を消費して[敏捷-%s]判定を行い、成功すれば財宝ランク%sのアイテムを入手できる。有利な特異点「水中行動」があれば判定不要。有効:【野伏の歩み】", [9, 12, 15, 18, 25], [3, 5, 7, 9, 11]), 25, $$($nesting, 'Row').$new("ミミックの罠。ランダムなキャラクターに「3D6+%s」の「斬撃」属性ダメージを与える。[知力-%s]判定に成功すればこの罠を見抜いて無効化でき、なおかつ%sGPを入手可能。有効：【盗賊の心得】【ロックスミス】", [30, 50, 70, 100, 300], [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 26, $$($nesting, 'Row').$new("トレジャーイーターの罠。冒険中に入手したアイテム(消耗品・GP以外)を全て失う。[知力-%s]判定に成功すればこの罠を見抜いて無効化することができ、なおかつ%sGP入手可能。", [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 31, $$($nesting, 'Row').$new("進みやすい浅瀬が続き、すいすいと進める。クリア時の財宝ランク+1。有利な特異点「水中行動」や【ミズグモ】をもつPCがいればクリア時の財宝ランク+2。ただしグラントがいると浅瀬にもかかわらず溺れてしまい、財宝ランクは変化しない。(RP次第でグラントがいるデメリットをなくしても良い)"), 32, $$($nesting, 'Row').$new("様々な漂流物が流れこむ船の墓場だ。お宝もありそうだが探索は大変そうだ…〔FP〕を3点消費する代わりに水辺の財宝系イベント「2-1～2-6」が発生する。この効果を望まない場合は特に何も起きない。"), 33, $$($nesting, 'Row').$new("ヒャッハー、ウォータースライダーだ!巨大な植物の幹を滑って進むことができるが、かなり怖いので勇気が必要。PC全員が[意思%s]判定を行い、全員成功すればクリア時の財宝ランク+1。この判定に成功したPCは、失敗したPCを1人まで抱えて滑り落ちることで成功扱いにできる。", ["", "-1", "-2", "-4", "-8"]), 34, $$($nesting, 'Row').$new("大蓮のような植物の群生地を渡っていく。重たい装備を身に着けていると沈んでしまいそうだ…[必要体力]が15以上の装備を所有しているPCがいるとクリア時の財宝ランク-1。そのPCに有利な特異点「水中行動」や【ミズグモ】があればこのデメリットは受けない。"), 35, $$($nesting, 'Row').$new("水流が複雑になっており、思うように進めず戻されてしまう。[体力-%s]判定に失敗するとクリア時の財宝ランク-1。", [4, 5, 6, 8, 12]), 36, $$($nesting, 'Row').$new("突然の激流にイカダが巻き込まれる!身を任せている場合じゃない!敵味方全員が[敏捷-%s]判定を行い、失敗したキャラクターは4ラウンド終了まで帰ってこれなくなる。全員が失敗してしまった場合、冒険は強制的に失敗となりダンジョンの入口に戻されてしまう。ダンジョン内で手に入れたアイテムも消耗品とGP以外は全て水に流されて消滅する。有効:【野伏の歩み】", [2, 3, 4, 6, 10]), 41, $$($nesting, 'Row').$new("蟹の魔物がイカダをちょんぎろうとしている!早く倒さなくては!エネミーとエンカウント。1ラウンド以内に倒せなかった場合、イカダをちょんぎられてクリア時の財宝ランク-1。"), 42, $$($nesting, 'Row').$new("アシガル潜水隊と遭遇。エネミーとエンカウント。エネミーは奇襲攻撃を仕掛けてくるため〔先制〕に+5のボーナスを得る。%s", ["[感覚-6]判定に成功すると水面に動く竹筒を発見可能で、その場合は〔先制〕へのボーナスは無効化可能。有効:「鷹の目」", "[感覚-8]判定に成功すると水面に動く竹筒を発見可能で、その場合は〔先制〕へのボーナスは無効化可能。有効:「鷹の目」", "[感覚-10]定に成功すると水面に動く竹筒を発見可能で、その場合は〔先制〕へのボーナスは無効化可能。有効:「鷹の目」", "[感覚-12]判定に成功すると水面に動く竹筒を発見可能で、その場合は〔先制〕へのボーナスは無効化可能。有効:「鷹の目」", ""]), 43, $$($nesting, 'Row').$new("何か水面が揺れている…まさか、あれはニンジャ!?エネミーとエンカウント。エネミーは謎の光学迷彩ギアで姿を隠しており、〔回避〕に+%sのボーナス。", [2, 2, 4, 6, 2]), 44, $$($nesting, 'Row').$new("水辺で花を育てている少女に出会う…が、少女は魔族だった!エネミーとエンカウント。彼女が育てている花の根元には無数の動物の死体が無残にも肥料にされている。戦闘開始時に[意思]判定を行い、失敗したキャラクターは戦慄して1ターン行動不可。〔回避〕[抵抗]の判定を行うことはできる。"), 45, $$($nesting, 'Row').$new("高波にのった魔族の騎士が現れる!エネミーとエンカウント。エネミーは波で勢いがついているため、最初のターンは〔移動〕〔先制〕に+5のボーナス。"), 46, $$($nesting, 'Row').$new("湖の上を渡っていると思ったら巨大なスライムの上だった!?エネミーとエンカウント。エネミーは巨大なため〔HP〕に+%sのボーナスを得ている。また、全てのヘクスに対して隣接しているものとする。(移動妨害も全てのヘクスで受ける)", [50, 100, 150, 250, 1500]), 51, $$($nesting, 'Row').$new("美しい歌声が響き渡る、意識が引きずり込まれそうだ。その場にいる敵味方全員は[抵抗-%s]判定を行い、失敗すると1ターン「☆眠り」を受ける。有効:【音響補正装置】", [2, 4, 6, 8, 12]), 52, $$($nesting, 'Row').$new("小舟で進んでいると、なにやら激しい水の音がする。この先は滝のようだ!PC全員が[移動-%s]判定を行い(「水中行動」があれば+5のボーナスを得る)、成功したキャラクターがいれば事なきを得る。更に滝の裏の洞窟から財宝ランク%sのアイテムを入手可能。〔移動〕判定に全員失敗した場合、全員が滝から転落して「%s」の防護点無視ダメージを受ける。有効:【野伏の歩み】", [3, 4, 5, 7, 12], [3, 5, 7, 9, 11], ["3D6+20", "3D6+30", "3D6+40", "3D6+60", "150"]), 53, $$($nesting, 'Row').$new("船の墓場を進んでいると、強風でマストが倒れてくる!PC全員が「ドッジ-%s」判定を行い、失敗すると「%s」の防護点無視ダメージを受け、「☆転倒」を受ける。", [2, 4, 6, 8, 15], ["3D6+10", "3D6+20", "3D6+30", "3D6+50", "150"]), 54, $$($nesting, 'Row').$new("ぺっぺっ、水がしょっぱい!濃い塩水がギアをダメにしてしまう。所有している武器についたアタッチメント1つがシナリオ終了まで消滅してしまう。どのアタッチメントが消滅するかは選択可能。【魔導工学のススメ%s】があれば応急処置を行い、この効果を受けない。また、「★特別アタッチメント」は消滅しない。", [1, 1, 2, 3, 4]), 55, $$($nesting, 'Row').$new("とても寒く冷たい水辺で、体力をどんどん奪われてしまう。「冷気」属性に対する防護点が%s以下のキャラクターは、ラウンド終了時に〔FP〕を%s点失う。", [10, 15, 20, 25, 50], [5, 10, 15, 20, 30]), 56, $$($nesting, 'Row').$new("突然間欠泉が噴き出してダメージを受ける!敵味方全員のうちランダムで1体に「%s」点の「火炎」属性ダメージと「☆転倒」を与える。このイベントが2ラウンド目で発生した場合、4ラウンド目のイベントはダイスを振らず「洞窟6-2」の温泉イベントになる。", ["3D6+40", "3D6+60", "3D6+80", "3D6+120", "400"]), 61, $$($nesting, 'Row').$new("傷ついた%sを発見する。ラウンド終了までに〔HP〕を%s点まで回復させればなついて%sを入手可能。回復できなかった場合、%sは逃走する。", ["スワンプランナー", "スカイサーチャー", "グリマルキン", "ゴールデンコーン", "プチブレイザー"], [30, 50, 70, 100, 400], ["スワンプランナー(ペット/4000GP)", "スカイサーチャー(ペット/6000GP)", "グリマルキン(ペット/15000GP)", "ゴールデンコーン(ペット/30000GP)", "プチブレイザー（ペット/100000GP）"], ["スワンプランナー", "スカイサーチャー", "グリマルキン", "ゴールデンコーン", "プチブレイザー"]), 62, $$($nesting, 'Row').$new("なにやら派手な魚を見つける。あれはもしやアズマに伝わる幻の魚「ニシキゴイ」か!?行動を消費して[敏捷-%s]判定に成功すれば見事捕まえ、アイテム欄に入手することができる。売却すると%sGPになる。この判定は4ラウンド目が終了するまで何度でも行うことができる。有効:【野伏の歩み】", [8, 10, 12, 15, 25], [3000, 6000, 12000, 24000, 120000]), 63, $$($nesting, 'Row').$new("カエルの合唱が響き渡る。何やら意味がある歌声に聞こえるが…[知力-%s]判定に成功すると歌の意味を理解できる。カエル達は安全な道を教えてくれていたのだ!判定に成功した場合クリア時の財宝ランク+1。判定に失敗すると毒の沼に足を踏み入れ、PC全員が「%s」点の防護点無視ダメージを受ける。有効:「自然と生きる」【賢人の知恵】", [6, 9, 12, 15, 25], ["3D6+10", "3D6+20", "3D6+30", "3D6+50", "150"]), 64, $$($nesting, 'Row').$new("老齢のグラントが岩に腰かけ釣りをしている。このイベントが発生するとエネミーは消滅する。「どうだね、よかったら釣り勝負をやっていかないか?」PC全員が行動を消費して3D6を振り、誰かが3か4を出せば見事勝利することができる。「見事じゃ、そこにあるガラクタはワシには必要ないものじゃから好きに持って行くがいい」と財宝を渡してくれる。財宝ランク%sのアイテムを2つ入手可能。", [3, 5, 7, 9, 11]), 65, $$($nesting, 'Row').$new("" + "沈没した「死者の方舟」だ。探せば何かありそうだが危険そうだ…1D6を振って以下の結果を適用すること。このイベントは無視することができ、その場合は何も起きない。\n" + "----------\n" + "1～2:…これは財宝だ!財宝ランク%sのアイテムと%sを入手。\n" + "3～4:…マストが倒れてきた!「水辺5-3」と同様のイベントが発生する。\n" + "5～6:…船に残っていたアンデッドが襲ってきた!エネミーとエンカウント。", [3, 5, 7, 9, 11], ["スケルトンメイル(鎧)", "死者の心臓(装飾品)", "死霊貴族の服(鎧)", "デュラハンの盾(盾)", "死者の止まらない歯車（装飾品）"]), 66, $$($nesting, 'Row').$new("貝の群生地だ。貝の中にはキラリと光るものが…あれは真珠だ!行動を消費して[敏捷-%s]判定を行い、成功すれば1回ごとにアイテム「真珠」を入手可能。これは1つ%sGPで売却可能で、4ラウンド目が終了するまで何回でも入手可能。ただし、判定の成否に関わらず〔FP〕を2点消費する。「水中行動」があれば判定不要で〔FP〕も消費しない。有効:【野伏の歩み】", [6, 9, 12, 15, 20], [1000, 2000, 4000, 8000, 20000])));
        forest = $$($nesting, 'EventTable').$new("森林", 5, $hash(11, $$($nesting, 'Row').$new("回復の泉。PC全員の〔HP〕〔FP〕が完全に回復する。「★死亡」以外のあらゆるBSも回復する。"), 12, $$($nesting, 'Row').$new("鬱蒼とした森の奥に見事な佇まいの茶室を見つける。ラウンド中に【ソチャデスカ】を使用した際の回復量が2倍になる。茶室の中には友好的なカラクリフラウがいて、%sGPを支払ったPC全員の〔HP〕〔FP〕を「3D6+%s」点回復してくれる。", [100, 200, 300, 500, 2000], [10, 20, 30, 50, 100]), 13, $$($nesting, 'Row').$new("おいしそうな果実の木だ!とてもおいしく、食べるとやたらとテンションが高くなる。〔HP〕〔FP〕が「3D6%s」点回復するが、シナリオ終了まで不利な特異点「脳みそ筋肉」を得たかのように猪突猛進型の性格になってしまう。[知力-%s]判定に成功すれば興奮作用のある種をどけてデメリットは受けない。有効:「自然と生きる」【賢人の知恵】", ["", "+5", "+10", "+15", "+30"], [3, 6, 9, 12, 20]), 14, $$($nesting, 'Row').$new("「ひんやりおいしい森のアイスやさんですよ～。今なら私との握手券付き～♪」フラウが果物いっぱいのトロピカルなアイスクリームを売っている。マジカルクッキング「フラウアイスクリーム」(Lv4)を食べさせてもらえる。この料理の効果は、自分たちが「マジカルクッキング」で作った料理と累積する。"), 15, $$($nesting, 'Row').$new("森のなかにひっそりとたたずむジンジャを発見して、ナインテイルのカンヌシかミコが旅の無事を祈ってくれる。PT全員に【不死なる炎】がかかり、最終イベントに入るまで、死亡判定に自動成功するようになる。"), 16, $$($nesting, 'Row').$new("食人植物の花粉による回復の泉の幻影。PTメンバーの〔HP〕〔FP〕のいずれかが減少している場合このイベントは拒否できない。[知力-6]判定に失敗すると食人植物の群生地にふらふらと入り、PC全員が「%s」の「斬撃」属性ダメージを受ける。有利な特異点「自然と生きる」があれば、事前に気が付きダメージは受けない。有効:【賢人の知恵】", ["3D6+20", "3D6+30", "3D6+40", "3D6+60", "150"]), 21, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。カギやトラップはかかっていない。行動を消費することで開けることができる。", [0, 2, 4, 6, 8]), 22, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのカギがかかっている。行動を消費して[感覚-%s]判定でカギを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 23, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのトラップがかかっている。行動を消費して[感覚-%s]判定でトラップを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 24, $$($nesting, 'Row').$new("" + "上から3本の蔓が垂れ下がっている。すごく引っ張りたくなる形状だ…行動を消費して引っ張ったキャラクターは1D6を振って以下のものを入手する。蔦を1つ引っ張ると他の蔦はスルスルっと上に消えていってしまう。有効:「非凡な直感」\n" + "----------\n" + "1～2:大当たり!財宝ランク%sの財宝\n" + "3～4:小当たり!おいしい果物(%sと同等)\n" + "5～6:「ハズレ」と書かれた硬い木の実が直撃!「%s」点の「打撃」属性ダメージを受ける", [3, 5, 7, 9, 11], ["HPポーション", "高級HPポーション", "最高級HPポーション", "奇跡のポーション", "蘇生ポーション"], ["3D6+10", "3D6+20", "3D6+30", "3D6+50", "150"]), 25, $$($nesting, 'Row').$new("ミミックの罠。ランダムなキャラクターに「3D+%s」の「斬撃」属性ダメージを与える。[知力-%s]判定に成功すればこの罠を見抜いて無効化でき、なおかつ%sGPを入手可能。有効：【盗賊の心得】【ロックスミス】", [30, 50, 70, 100, 300], [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 26, $$($nesting, 'Row').$new("トレジャーイーターの罠。冒険中に入手したアイテム(消耗品・GP以外)を全て失う。[知力-%s]判定に成功すればこの罠を見抜いて無効化することができ、なおかつ%sGP入手可能。", [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 31, $$($nesting, 'Row').$new("この獣道を通れば近道になりそうだ!しかし狭くて動きにくい…クリア時の財宝ランクが+1されるが、ラウンド中の〔移動〕に-3のペナルティ。"), 32, $$($nesting, 'Row').$new("「ホウホウホーウ。そっちの道は危ないぞ…」鳥たちが古い言葉で道案内をしてくれる。[知力-6]判定に成功すれば、クリア時の財宝ランク+1。失敗すると次のイベントは必ず「森林」のエンカウントイベントになる。このイベントが4ラウンド目だった場合、道に迷ってクリア時の財宝ランク-1。有効:「自然と生きる」【賢人の知恵】"), 33, $$($nesting, 'Row').$new("時計をもった兎が忙しそうに走っている。追いかけていくと木の根本に落っこちて妙な場所についてしまった!4ラウンド目が終了するまで「迷宮オプション」を新たに1つ追加する。このイベントが4ラウンド目だった場合、近道になりクリア時の財宝ランク+1。"), 34, $$($nesting, 'Row').$new("毒草の群生地だ!突っ切れば近道になりそうだが…気にせず直進すればシナリオ終了まで〔HP〕の最大値と現在値が%s点減少するが、クリア時の財宝ランク+1。迂回すると悪い効果は受けないがクリア時の財宝ランク-1。", [10, 15, 20, 25, 40]), 35, $$($nesting, 'Row').$new("「花の香りのする方においで」と看板がある。[感覚-%s]判定に失敗すると遠回りになりクリア時の財宝ランク-1。有利な特徴「犬の鼻」が%s", [6, 9, 12, 15, 20], ["あれば判定不要。", "あれば判定不要。", "二段階あれば判定不要。一段階はボーナスのみ。", "二段階あれば判定不要。一段階はボーナスのみ。", "二段階あれば判定不要。一段階はボーナスのみ。"]), 36, $$($nesting, 'Row').$new("おや、進行方向から動物たちが逃げてくるぞ?…大変だ、森林火災だ!引き返して火災から逃げるとクリア時の財宝ランク-2。構わず突っ切るなら4ラウンド目が終了するまで、ターン開始時に「%s」の「火炎」属性ダメージを受ける。", ["3D6+10", "3D6+15", "3D6+20", "3D6+30", "100"]), 41, $$($nesting, 'Row').$new("森の盗賊団がこちらの懐を狙ってきた!エネミーとエンカウント。このエネミーからダメージを受けるたびに所持品のうち最も価格の安いものを奪われてしまう。4ラウンド目までに倒せば奪い返すことができる。"), 42, $$($nesting, 'Row').$new("動物狩りを楽しんでいた魔族と偶然遭遇してしまう。エネミーとエンカウント。「分類:魔物」「分類:魔獣」のエネミーが登場していた場合、魔族たちにに狩られると思い逃亡する。"), 43, $$($nesting, 'Row').$new("魔族の偵察隊と遭遇する。報告される前に倒さなくては!指定のエネミーを1ラウンド以内に倒せなかった場合、次のエンカウントが発生した際、新たに登場するエネミーは準備万端で待ち構えているため〔先制〕に+10、あらゆる致傷力に+%sのボーナス。", [10, 20, 30, 40, 100]), 44, $$($nesting, 'Row').$new("森を支配する木の魔族の王に遭遇してしまった!エネミーとエンカウント。%s4ラウンド終了までに討伐に成功すると財宝ランク%sのアイテムを入手できる。", ["エネミーは〔HP〕に+100のボーナス。", "エネミーは〔HP〕に+150のボーナス。", "エネミーは〔HP〕に+200のボーナス。", "", "エネミーは〔HP〕に+200、あらゆる致傷力+200、分類「ネームド」と【始原の力】を追加。"], [3, 5, 7, 9, 11]), 45, $$($nesting, 'Row').$new("フラウとその尖兵が道案内をしてくれる…と思ったらカラーコンタクトをつけてフラウのふりをした魔族とその尖兵だった!エネミーとエンカウント。尖兵は「PC配置ヘクス」に配置すること。PCはラウンド終了まで〔回避〕に-6のペナルティ。有利な特異点「背中の目」があれば〔回避〕へのペナルティは受けない。"), 46, $$($nesting, 'Row').$new("迷彩服を着て軍事訓練中の第三師団精鋭コンバット部隊だ!エネミーとエンカウント。エネミーは〔先制〕に+4のボーナス。"), 51, $$($nesting, 'Row').$new("良い香りが周囲に満ちていく。戦闘中だった場合、闘争心を失わせるキノコの香りで敵味方ともに剣を収め強制的に戦闘終了となる。戦闘中ではなかった場合は[知力-6]判定に失敗すると香りをまともにかいで闘争心を失ってしまい、シナリオ終了まであらゆる致傷力に-5のペナルティ。有効:「犬の鼻」「自然と生きる」【賢人の知恵】"), 52, $$($nesting, 'Row').$new("突然上から木の蔓が誰かを吊り上げて首を絞めようとする!ランダムなPC1人は[感覚-%s]判定を行い、失敗すると「%s」点の防護点無視ダメージを受け、そのラウンド中は行動も〔回避〕も行えない。有利な特異点「自然と生きる」をもつPCが対象になった場合は何も起きない。有効:【野伏の歩み】", [3, 4, 5, 7, 10], ["3D6+30", "3D6+50", "3D6+70", "3D6+100", "300"]), 53, $$($nesting, 'Row').$new("巧妙なベアトラップが仕掛けてある。ランダムなキャラクター1人(エネミーも含む)に「%s」点の「斬撃」属性ダメージを与え、〔移動〕〔回避〕を0にする。このトラップにかかったキャラクターか隣接したキャラクターが行動を消費して[感覚-%s]判定に成功すれば解除可能。有効:【盗賊の心得】【ロックスミス】", ["3D6+10", "3D6+20", "3D6+30", "3D6+50", "200"], [6, 8, 10, 12, 20]), 54, $$($nesting, 'Row').$new("突然前も見えないほどのスコールに見舞われる!敵味方全員の攻撃や【特技】の射程が全て1になってしまう。森林「3-6」の山火事が起きていた場合、鎮火する。"), 55, $$($nesting, 'Row').$new("ランダムなPC1人が巨大な食虫植物に喰われてしまう!幸いすぐに助け出すことができたのだが、鎧も服もボロボロにされてしまう(ｲﾔｰﾝ)喰われたPCが装備していた鎧はシナリオ終了まで使用不可能になる。"), 56, $$($nesting, 'Row').$new("すさまじい悪臭を放つ巨大な花だ!あまりの悪臭にPCの装備していた「ペット」は全て気絶してシナリオ終了まで使用不可能になる。なぜかギア製のペットももれなく気絶する。有利な得意点「犬の鼻」をもつPCがいれば近寄る前に回避可能。"), 61, $$($nesting, 'Row').$new("" + "魔族の狩りで傷ついた狼を発見する。ラウンド終了までに〔HP〕を1点でも回復してやればふらふらと歩きだし、木の根元でここを掘れというように吠える。埋まっていたものは1D6を振って決定する。\n" + "----------\n" + "1:犬の糞(ゴミ)\n" + "2:10GP\n" + "3:財宝ランク%sのアイテム\n" + "4:財宝ランク%sのアイテム\n" + "5:財宝ランク%sのアイテム\n" + "6:うぃっしゅすたー(大事なもの)", [0, 2, 4, 6, 8], [1, 3, 5, 7, 9], [2, 4, 6, 8, 10]), 62, $$($nesting, 'Row').$new("少し開けた原っぱでフラウのダンスパーティーに誘われる。このイベントが発生するとエネミーは消滅する。行動を消費して[敏捷-%s]判定に成功してダンスを踊ると原っぱの中心からすくすくと大きなキノコが育ち、キノコの馬車でダンジョンのゴール付近まで一気にすっとばしてくれる。第4ラウンドが終了したものと扱い、クリア時の財宝ランク+2。", [6, 8, 10, 12, 16]), 63, $$($nesting, 'Row').$new("フラウたちが「森ガールファッションコンテスト」を開催しており、その助っ人を依頼される。このイベントが発生するとエネミーは消滅する。[意思-%s]判定に成功すれば的確なアドバイスで助っ人を依頼したフラウを優勝に導くことができ、その謝礼として%sを入手できる。", [6, 8, 10, 12, 20], ["狩人の羽根帽子(装飾品)", "緊急召喚の宝珠(装飾品)", "毒の香水瓶(装飾品)", "女王の花冠(装飾品)", "魔将樹のドレス(鎧)"]), 64, $$($nesting, 'Row').$new("霊樹の花にたまった水が神秘的な魔力を帯びている。[知力-6]判定に成功するとそれにポーションとしての効果があることがわかり、奇跡のポーション(消耗品)を入手する。【ポーションナレッジ】を習得したPCがいれば判定不要。有効:【賢人の知恵】"), 65, $$($nesting, 'Row').$new("迷子のフラウを見つける。4ラウンド目が終了するまでに他のフラウに出会うイベントが発生した場合、偶然にもそのフラウと知り合いで、お礼に財宝ランク%sのアイテムを渡してくれる。フラウに出会えずシナリオをクリアした場合も、迷宮からひとまず出ることができたお礼に財宝ランク%sのアイテムを渡してくれる。", [3, 5, 7, 9, 11], [1, 3, 5, 7, 9]), 66, $$($nesting, 'Row').$new("ランダムに選んだPC1人が、うっかり泉に武器を落としてしまう。すると泉から女神が出現して、落とした武器と同じ種類の超高級品の武器(魔将ドロップ品など)を落としたかどうかを聞いてくる。[意思%s]判定に成功すれば正直に答え、武器に%sGPまでの任意のアタッチメントを追加してくれる。失敗すると嘘をついて女神を怒らせてしまい、装備していた武器を失ってしまう。", ["", "-2", "-4", "-6", "-8"], [5000, 10000, 30000, 50000, 100000])));
        graveyard = $$($nesting, 'EventTable').$new("墓場", 6, $hash(11, $$($nesting, 'Row').$new("回復の泉。PC全員の〔HP〕〔FP〕が完全に回復する。「★死亡」以外のあらゆるBSも回復する。"), 12, $$($nesting, 'Row').$new("「彼らは生前の思いが強すぎ成仏できません。語りかけて鎮めてやるとよいでしょう…」アズマ風の墓石が佇んでいる。[知力-%s]判定か[意思-%s]判定に成功するとアズマ式お祈りや語りかけにより霊に感謝され、〔HP〕〔FP〕とFtが全回復する。失敗すると霊を怒らせて呪われ、全員のFtが1点減少する。有効:【賢人の知恵】(知力)【詩人の交渉術】(意思)", [3, 6, 9, 12, 16], [3, 6, 9, 12, 16]), 13, $$($nesting, 'Row').$new("墓守の休憩所を見つける。心の落ち着くお線香の香りがする…。〔HP〕〔FP〕%s点とBSを回復する。更にシナリオ終了まで〔抵抗〕に+2のボーナス。", [10, 15, 20, 25, 30]), 14, $$($nesting, 'Row').$new("「人間か。キミたちはここの亡者のようにならないようにね…」ヒガンバナの世話をするフラウと出会い、「ヒガンバナの毒」を武器に塗ってもらうことができる。物理攻撃の致傷力に+5のボーナス。"), 15, $$($nesting, 'Row').$new("シルヴァテイルのネクロマンサー達が集まって、何やら怪しい儀式をしている。道中で「★死亡」した、もしくは保険を適用して強制送還されたキャラクターがいれば、〔HP〕〔FP〕とBSが全回復した状態で復活させてもらうことができる。それ以外の場合は不気味な儀式に不安を感じ、FPを1点失う。"), 16, $$($nesting, 'Row').$new("回復の泉があるのだが…?PCのうち1人でも〔HP〕〔FP〕のいずれかが減少している場合このイベントは拒否できない。PC全員の〔HP〕〔FP〕が完全に回復する。「★死亡」以外のあらゆるBSも回復する。黄泉の国の水を飲んだことでシナリオ終了まで「分類:アンデッド」となり、【死者に鞭】【アマテラスの光】などの、一部の【特技】の効果を受ける。"), 21, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。カギやトラップはかかっていない。行動を消費することで開けることができる。", [0, 2, 4, 6, 8]), 22, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのカギがかかっている。行動を消費して[感覚-%s]判定でカギを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 23, $$($nesting, 'Row').$new("財宝ランク%sの宝箱を発見する。難易度%sのトラップがかかっている。行動を消費して[感覚-%s]判定でトラップを解除して開けることができる。有効：【盗賊の心得】【ロックスミス】", [1, 3, 5, 7, 9], [3, 6, 9, 12, 20], [3, 6, 9, 12, 20]), 24, $$($nesting, 'Row').$new("骸が何かを大事そうに握りしめている(抱きかかえている)。行動を消費して[体力-%s]判定に成功すれば、財宝ランク%sのアイテムを入手できるが、Ftが1点減少する。", [2, 4, 6, 10, 15], [2, 4, 6, 8, 10]), 25, $$($nesting, 'Row').$new("ミミックの罠。ランダムなキャラクターに「3D+%s」の「斬撃」属性ダメージを与える。[知力-%s]判定に成功すればこの罠を見抜いて無効化でき、なおかつ%sGPを入手可能。有効：【盗賊の心得】【ロックスミス】", [30, 50, 70, 100, 300], [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 26, $$($nesting, 'Row').$new("トレジャーイーターの罠。冒険中に入手したアイテム(消耗品・GP以外)を全て失う。[知力-%s]判定に成功すればこの罠を見抜いて無効化することができ、なおかつ%sGP入手可能。", [3, 6, 9, 12, 20], [1000, 2000, 5000, 10000, 30000]), 31, $$($nesting, 'Row').$new("ちょっとなにか出そうな、柳の木でできたトンネルを発見する。PC全員が[意思]判定を行い、全員成功した場合はクリア時の財宝ランク+1。最も成功度の低かった(失敗度の大きかった)PCは揺れる柳を幽霊と思い込み、4ラウンド終了まであらゆる判定に-2のペナルティ。"), 32, $$($nesting, 'Row').$new("石畳の道を歩いている途中で朽ちた祠を発見する。何かお供え物をしたほうが良いだろうか?アイテム欄の消耗品1つをお供えすると祠が動いて地下通路が出現する!この通路を通ることで近道できて、クリア時の財宝ランク+1。"), 33, $$($nesting, 'Row').$new("道が途切れ、草が伸び放題の荒れ地に出る。方向もわからず、進むには骨が折れそうだ…[体力-%s]判定を行い、成功すればクリア時の財宝ランク+1。失敗するとクリア時の財宝ランク-1。", [2, 4, 6, 8, 12]), 34, $$($nesting, 'Row').$new("どこまでも卒塔婆とススキしかない…同じ景色が続き、進んでいるか怪しくなる。1D6を振って1～3が出れば何もないが、4～6が出るとクリア時の財宝ランク-1。有利な特異点「天体時計」があればペナルティは受けない。"), 35, $$($nesting, 'Row').$new("地面から突如骨の手が伸びて足を掴んでくる!PC全員が[移動%s]判定を行い、クリア時の財宝ランクが「失敗した人数」分減少する。【死者に鞭】を持つPCがいれば骨は威圧されて引っ込み、この効果は無視できる。", ["+4", "+2", "", "-2", "-5"]), 36, $$($nesting, 'Row').$new("先へ進む道には纏わりつくような死者の呪いが満ちている。直進するとシナリオ終了まであらゆる判定に-2のペナルティ。遠回りをすると悪影響は受けないがクリア時の財宝ランク-2。【死者に鞭】か【鎮魂の盾】を持つPCがいれば呪いをはねつけ、直進してもペナルティを受けない。"), 41, $$($nesting, 'Row').$new("墓場に浮かんでいた人魂が突如魔物になって襲いかかってきた!エネミーとエンカウント。エネミーが使用する【狐の送り火】のデータを「疲労：なし」に変更。"), 42, $$($nesting, 'Row').$new("朽ちていた骨が突如起き上がり襲いかかってきた!エネミーとエンカウント。このエネミーは業物の武器を持っており、物理攻撃の致傷力に+%sのボーナス。", [5, 10, 15, 20, 200]), 43, $$($nesting, 'Row').$new("不吉な歌を口ずさみ、ステップを踏みながらかわいらしい少女が近づいてくる。エネミーとエンカウント。エネミーの【華劇】はは最初から使用された状態になっており、【華劇】の効果に応じた強化がエネミー全員に適用される。"), 44, $$($nesting, 'Row').$new("遠くから不吉な進軍の音を聞く。PC全員が[感覚-%s]判定を行い、誰か1人でも成功すれば、第二魔将グレヴディガーの軍勢が迫っているのを知る。全員判定に失敗してしまうとPCは第二魔将グレイヴディガーとその配下である無数の亡霊騎士団と相対することになる。%s有効:「狐の耳」「虫の知らせ」", [2, 4, 6, 8, 10], ["「保険」に入っていなければPCたちは死亡して、グレイヴディガーの配下にさせられてしまう。君たちの冒険はここで終了だ。", "「保険」に入っていなければPCたちは死亡して、グレイヴディガーの配下にさせられてしまう。君たちの冒険はここで終了だ。", "「保険」に入っていなければPCたちは死亡して、グレイヴディガーの配下にさせられてしまう。君たちの冒険はここで終了だ。", "エネミーとエンカウント。", "エネミーとエンカウント（魔将オリジン実装後）。オリジン未実装の場合はイベントの振り直しを行う。"]), 45, $$($nesting, 'Row').$new("「我らの眠りを妨げるものは誰だ…!」貴族の棺とそれを守る人形だ。墓荒らしには容赦なく襲い掛かる!エネミーとエンカウント。棺の中には貴金属が入っており、一部エネミーの通常ドロップの金額が増加する。"), 46, $$($nesting, 'Row').$new("壁に埋まった10mはあろうかという巨大な蛇の骨が動き出し襲い掛かってくる!エネミーとエンカウント。"), 51, $$($nesting, 'Row').$new("PC全員に墓から突然幻影が襲いかかる。幻影なので実害はないのだが、本当の攻撃と思って「パリイ」か「シールド」を1回消費してしまう。どちらも行えない場合、腰を抜かして「☆転倒」を受ける。【トゥルービジョン】などがかかっているPCには無効。"), 52, $$($nesting, 'Row').$new("「ひひっ、かかったなボケが!」理不尽にもギロチンが突如ランダムなPC1人に落ちてくる!「ドッジ-%s」判定を行い、失敗すると「%s」点の「斬撃」属性ダメージを受ける。", [4, 6, 8, 10, 20], ["3D6+40", "3D6+60", "3D6+80", "3D6+120", "400"]), 53, $$($nesting, 'Row').$new("「すいっちおーん。私達の仲間にしてやるよ!」用途不明の建物に迷い込んでしまったが…なんてこった、ここは火葬場だ!早く脱出しないと灰になるまで焼かれてしまうぞ!PC全員が「%s」点の「火炎」属性ダメージを受ける。〔移動〕が%s以上のPCは何とか逃げ出しダメージを受けず、さらに自分より[体力]の低いキャラクター1人を連れて脱出可能。有効:【盗賊の心得】【ロックスミス】", ["3D6+30", "3D6+40", "3D6+50", "3D6+70", "300"], [8, 9, 10, 12, 16]), 54, $$($nesting, 'Row').$new("墓石が動き出し中から何かが出てこようとしている![体力-%s]判定に成功すればなにも起こらないが、失敗すると探索中に倒されたエネミーの中で最もCLが高いエネミーが再度出現する。該当モンスターが存在しなかった場合は、昼寝をしていたフラウが出てくるだけ。", [4, 6, 8, 10, 15]), 55, $$($nesting, 'Row').$new("金の亡者のゾンビが群がってくる。金を渡してやるまで満足しそうにない…%sGPを支払うと満足して去っていくが、支払いを拒否した場合(もしくはお金が足りなかった場合)はPC全員が「%s」の「打撃」属性ダメージを受ける。【死者に鞭】を持つPCがいればひと睨みでそそくさと去っていく。", [1000, 2000, 4000, 8000, 20000], ["3D6+10", "3D6+20", "3D6+30", "3D6+50", "200"]), 56, $$($nesting, 'Row').$new("「おやおや。死者に気に入られましたか…困りましたねえホッホッ」ランダムなPC1人の武器が死者の怨念を吸い取り魔剣となる!魔剣は攻撃力に+5のボーナスを得るが、装備していると〔HP〕の最大値が10点減少する。魔剣となった武器は売却不可能で、不要な場合は捨てるしかない。すでに魔剣となっている武器と、【特技】によって入手した武器は魔剣にならない。"), 61, $$($nesting, 'Row').$new("雷が突然鳴り響く。敵味方全員が3D6を振り、出目が一番高いキャラクターは「%s」点の「電撃」属性ダメージを受ける。", ["3D6+30", "3D6+50", "3D6+70", "3D6+100", "350"]), 62, $$($nesting, 'Row').$new("「いいところに来たナ。どうだ、お前らも飲んでいくカ?」タルの上に腰かけ、減ることのない酒を口に運び続けるスケルトンがいる。このイベントが発生するとエネミーは消滅する。酒を飲む場合、行動を消費して[意思%s]判定を4回連続で行う。全て成功すると、「ついに酒が切れたカ、最後の晩酌に付き合ってもらって感謝するゼ」と感謝を述べて消滅し、あとには財宝ランク%sのアイテムが残る。途中で1度でも失敗した場合、酒に悪酔いしてシナリオ終了まであらゆる判定に-2のペナルティ。", ["", "-1", "-2", "-4", "-8"], [3, 5, 7, 9, 11]), 63, $$($nesting, 'Row').$new("怪しい輝きを放つ宝石を発見する。手にとったPCは呪われてシナリオ終了まであらゆる判定に-2のペナルティ。手に取らない場合は全員に[意思%s]判定が必要で、不利な特異点「金の亡者」「好奇心は猫を殺す」があるとこの[意思]判定に-4のペナルティ。無事持ち帰った場合呪いは解け、%sGPで売却できる。", ["", "-1", "-2", "-3", "-6"], [2000, 6000, 20000, 60000, 150000]), 64, $$($nesting, 'Row').$new("" + "朽ちたギアの墓場だ。まだ使えるギアがあるかもしれない。【魔導工学のススメ】があれば、SLvに応じたアイテムが1つ入手可能。\n" + "----------\n" + "SLv1:カラクリバランサー(装飾品)\n" + "SLv2:カラクリお茶キット(装飾品)\n" + "SLv3:ゴーレムアーム(装飾品)\n" + "%s\n" + "%s\n" + "%s\n" + "%s", ["", "SLv4:ホイールブースター(装飾品)", "SLv4:ホイールブースター(装飾品)", "SLv4:ホイールブースター(装飾品)", "SLv4:ホイールブースター(装飾品)"], ["", "", "SLv5:ナグルファル装甲(装飾品)", "SLv5:ナグルファル装甲(装飾品)", "SLv5:ナグルファル装甲(装飾品)"], ["", "", "", "SLv6:死者の止まらない歯車(装飾品)", "SLv6:死者の止まらない歯車(装飾品)"], ["", "", "", "", "SLv7:特別アタッチメント券(大事なもの)"]), 65, $$($nesting, 'Row').$new("「ほーらよっといでーよっといでー、地獄の沙汰も金次第…」うすら寒い気配の漂う川辺に出る。川辺には渡し守らしき、ローブをかぶった2人の少女がいる。1人あたり%sGPを支払えばクリア時の財宝ランク+1。支払いを拒否したかお金が足りない場合、エネミーとエンカウント。", [200, 500, 1000, 2000, 5000]), 66, $$($nesting, 'Row').$new("『千ノ戦イデ千ノ勝チヲ知ル者、ココニ眠ル』と刻まれた棺を見つける。棺を開けた場合はエネミーとエンカウント。勝利すると%sを入手できる。不利な特異点「好奇心は猫を殺す」「脳みそ筋肉」を持つキャラクターは[意思]判定を行い、失敗すると棺を開けてしまう。", ["キメラパーツ(装飾品)", "キメラパーツ(装飾品)", "グレートキメラパーツ(装飾品)", "ウェポンマスターの証(装飾品)", "ウェポンマスターの証(装飾品)"])));
        return Opal.const_set($nesting[0], 'EVENT_TABLES', [cave, ruin, mountain, waterside, forest, graveyard].$freeze());
      })($nesting[0], null, $nesting);
    })($nesting[0], $nesting);
  }($nesting[0], $nesting);
};
/* Generated by Opal 1.1.1 */


Opal.modules["bcdice/game_system/filled_with/cook_tables"] = function (Opal) {
  var self = Opal.top,
      $nesting = [],
      nil = Opal.nil,
      $$$ = Opal.$$$,
      $$ = Opal.$$,
      $module = Opal.module,
      $klass = Opal.klass,
      $hash = Opal.hash,
      $range = Opal.range,
      $send = Opal.send;
  self.$require("bcdice/dice_table/range_table");
  return function ($base, $parent_nesting) {
    var self = $module($base, 'BCDice');
    var $nesting = [self].concat($parent_nesting);

    (function ($base, $parent_nesting) {
      var self = $module($base, 'GameSystem');
      var $nesting = [self].concat($parent_nesting);

      (function ($base, $super, $parent_nesting) {
        var self = $klass($base, $super, 'FilledWith');
        var $nesting = [self].concat($parent_nesting);
        return Opal.const_set($nesting[0], 'COOK_TABLES', $hash(1, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("マジカルクッキング（Lv 1）", "1D6", [[1, "おべんとミートボール"], [2, "パリパリ小魚"], [3, "キャロットタルト"], [4, "おにぎり"], [$range(5, 6, false), $send(self, 'lambda', [], ($$1 = function (_$$20) {
          function $$1() {
            return _$$20.apply(this, arguments);
          }

          $$1.toString = function () {
            return _$$20.toString();
          };

          return $$1;
        }(function () {
          var self = $$1.$$s == null ? this : $$1.$$s;
          return $$($nesting, 'COOK_TABLES')['$[]'](2);
        }), $$1.$$s = self, $$1.$$arity = 0, $$1))]]).$freeze(), 2, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("マジカルクッキング（Lv 2）", "1D6", [[1, "カリカリミミズ肉"], [2, "竹つきチクワ"], [3, "トロピカルジュース"], [4, "イナリ寿司"], [$range(5, 6, false), $send(self, 'lambda', [], ($$2 = function (_$$21) {
          function $$2() {
            return _$$21.apply(this, arguments);
          }

          $$2.toString = function () {
            return _$$21.toString();
          };

          return $$2;
        }(function () {
          var self = $$2.$$s == null ? this : $$2.$$s;
          return $$($nesting, 'COOK_TABLES')['$[]'](3);
        }), $$2.$$s = self, $$2.$$arity = 0, $$2))]]).$freeze(), 3, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("マジカルクッキング（Lv 3）", "1D6", [[1, "ホットミートパイ"], [2, "魔界魚の目玉"], [3, "パンプキンプリン"], [4, "スタミナ丼"], [$range(5, 6, false), $send(self, 'lambda', [], ($$3 = function (_$$22) {
          function $$3() {
            return _$$22.apply(this, arguments);
          }

          $$3.toString = function () {
            return _$$22.toString();
          };

          return $$3;
        }(function () {
          var self = $$3.$$s == null ? this : $$3.$$s;
          return $$($nesting, 'COOK_TABLES')['$[]'](4);
        }), $$3.$$s = self, $$3.$$arity = 0, $$3))]]).$freeze(), 4, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("マジカルクッキング（Lv 4）", "1D6", [[1, "ジャンボ串焼き"], [2, "シルヴァまっしぐら"], [3, "フラウアイスクリーム"], [4, "ピクニックランチ"], [$range(5, 6, false), $send(self, 'lambda', [], ($$4 = function (_$$23) {
          function $$4() {
            return _$$23.apply(this, arguments);
          }

          $$4.toString = function () {
            return _$$23.toString();
          };

          return $$4;
        }(function () {
          var self = $$4.$$s == null ? this : $$4.$$s;
          return $$($nesting, 'COOK_TABLES')['$[]'](5);
        }), $$4.$$s = self, $$4.$$arity = 0, $$4))]]).$freeze(), 5, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("マジカルクッキング（Lv 5）", "1D6", [[1, "グラント風香草焼き"], [2, "エドマエスシ"], [3, "スターフルーツパフェ"], [4, "具沢山本格カレー"], [$range(5, 6, false), $send(self, 'lambda', [], ($$5 = function (_$$24) {
          function $$5() {
            return _$$24.apply(this, arguments);
          }

          $$5.toString = function () {
            return _$$24.toString();
          };

          return $$5;
        }(function () {
          var self = $$5.$$s == null ? this : $$5.$$s;
          return $$($nesting, 'COOK_TABLES')['$[]'](6);
        }), $$5.$$s = self, $$5.$$arity = 0, $$5))]]).$freeze(), 6, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("マジカルクッキング（Lv 6）", "1D6", [[1, "ドラゴンステーキ"], [2, "刺身盛り合わせ"], [3, "エデンのアップルパイ"], [4, "フォートレス炒飯"], [$range(5, 6, false), $send(self, 'lambda', [], ($$6 = function (_$$25) {
          function $$6() {
            return _$$25.apply(this, arguments);
          }

          $$6.toString = function () {
            return _$$25.toString();
          };

          return $$6;
        }(function () {
          var self = $$6.$$s == null ? this : $$6.$$s;
          return $$($nesting, 'COOK_TABLES')['$[]'](7);
        }), $$6.$$s = self, $$6.$$arity = 0, $$6))]]).$freeze(), 7, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("マジカルクッキング（Lv 7）", "1D6", [[1, "マツザカスペシャル"], [2, "オオトロスシ"], [3, "スノーホワイトボンブ"], [4, "よもつへぐい"], [$range(5, 6, false), $send(self, 'lambda', [], ($$7 = function (_$$26) {
          function $$7() {
            return _$$26.apply(this, arguments);
          }

          $$7.toString = function () {
            return _$$26.toString();
          };

          return $$7;
        }(function () {
          var self = $$7.$$s == null ? this : $$7.$$s;
          return $$($nesting, 'COOK_TABLES')['$[]'](8);
        }), $$7.$$s = self, $$7.$$arity = 0, $$7))]]).$freeze(), 8, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("マジカルクッキング（Lv 8）", "1D6", [[1, "超特大マンガ肉"], [2, "特上うな丼"], [3, "魔将樹のかき氷"], [4, "ヘブンズランチ"], [$range(5, 6, false), $send(self, 'lambda', [], ($$8 = function (_$$27) {
          function $$8() {
            return _$$27.apply(this, arguments);
          }

          $$8.toString = function () {
            return _$$27.toString();
          };

          return $$8;
        }(function () {
          var self = $$8.$$s == null ? this : $$8.$$s;
          return $$($nesting, 'COOK_TABLES')['$[]'](9);
        }), $$8.$$s = self, $$8.$$arity = 0, $$8))]]).$freeze(), 9, $$$($$($nesting, 'DiceTable'), 'RangeTable').$new("マジカルクッキング（Lv 9）", "1D6", [[$range(1, 3, false), "世界樹のサラダ"], [$range(4, 6, false), "黄金のラダマン鍋"]]).$freeze()).$freeze());
      })($nesting[0], null, $nesting);
    })($nesting[0], $nesting);
  }($nesting[0], $nesting);
};
/* Generated by Opal 1.1.1 */


Opal.modules["bcdice/game_system/filled_with/tresure_tables"] = function (Opal) {
  function $rb_plus(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs + rhs : lhs['$+'](rhs);
  }

  var self = Opal.top,
      $nesting = [],
      nil = Opal.nil,
      $$$ = Opal.$$$,
      $$ = Opal.$$,
      $module = Opal.module,
      $klass = Opal.klass,
      $truthy = Opal.truthy,
      $hash = Opal.hash;
  return function ($base, $parent_nesting) {
    var self = $module($base, 'BCDice');
    var $nesting = [self].concat($parent_nesting);

    (function ($base, $parent_nesting) {
      var self = $module($base, 'GameSystem');
      var $nesting = [self].concat($parent_nesting);

      (function ($base, $super, $parent_nesting) {
        var self = $klass($base, $super, 'FilledWith');
        var $nesting = [self].concat($parent_nesting),
            $FilledWith_getTresureResult$1;
        self.$$prototype.randomizer = nil;
        Opal.def(self, '$getTresureResult', $FilledWith_getTresureResult$1 = function $$getTresureResult(command) {
          var self = this,
              m = nil,
              rank = nil;
          m = /^TRS(\d+)([+\-]\d)?$/.$match(command);

          if ($truthy(m)) {} else {
            return nil;
          }

          ;
          rank = $rb_plus(m['$[]'](1).$to_i(), m['$[]'](2).$to_i());
          rank = rank.$clamp(0, 12);
          return $$($nesting, 'TRESURE_TABLES')['$[]'](rank).$roll(self.randomizer);
        }, $FilledWith_getTresureResult$1.$$arity = 1);
        return Opal.const_set($nesting[0], 'TRESURE_TABLES', $hash(0, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["HPポーション(消耗品)", "FPポーション(消耗品)", "マジックパウダー:火(消耗品)", "マジックパウダー:氷(消耗品)", "マジックパウダー:雷(消耗品)", "500GP"]), 1, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["高級HPポーション(消耗品)", "高級FPポーション(消耗品)", "高級抵抗ポーション(消耗品)", "高級鉄壁ポーション(消耗品)", "マジックパウダー:火、氷、雷の3点セット(消耗品)", "1000GP"]), 2, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["鈴のお守り(装飾品)", "盗賊の小手(装飾品)", "狩人の羽帽子(装飾品)", "狙撃手の指貫(装飾品)", "「スタミナバンド」「健康お守り」「レザーマント」3点セット", "2000GP"]), 3, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["最高級HPポーション×2(消耗品)", "最高級FPポーション×2(消耗品)", "最高級抵抗ポーション×2(消耗品)", "任意の装飾品1つ(4000GPまでのもの)", "アタッチメント割引券(全員に1枚)", "3000GP"]), 4, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["任意の「ミスリル」武器1つ", "ミスリルシールド(盾)", "ミスリルスケイル(鎧)", "任意の装飾品1つ(5000GPまでのもの)", "アタッチメント割引券(全員に2枚)", "5000GP"]), 5, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["任意の武器1つ(10000GPまでのもの)", "任意の盾1つ(10000GPまでのもの)", "任意の鎧1つ(10000GPまでのもの)", "最高級HPポーション(人数分)", "任意の装飾品1つ(10000GPまでのもの)", "7500GP"]), 6, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["任意の武器1つ(15000GPまでのもの)", "任意の盾1つ(15000GPまでのもの)", "任意の鎧1つ(15000GPまでのもの)", "任意の装飾品1つ(15000GPまでのもの)", "最高級FPポーション(人数分)", "10000GP"]), 7, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["任意の武器1つ(30000GPまでのもの)", "任意の盾1つ(30000GPまでのもの)", "任意の鎧1つ(30000GPまでのもの)", "任意の装飾品1つ(30000GPまでのもの)", "蘇生ポーション(消耗品)", "20000GP"]), 8, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["任意の武器1つ(60000GPまでのもの)", "任意の盾1つ(60000GPまでのもの)", "任意の鎧1つ(60000GPまでのもの)", "任意の装飾品1つ(60000GPまでのもの)", "蘇生ポーション(装飾品)+アタッチメント割引券10枚(割引券は人数分)", "40000GP"]), 9, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["任意の武器1つ(100000GPまでのもの)", "任意の盾1つ(100000GPまでのもの)", "任意の鎧1つ(100000GPまでのもの)", "任意の装飾品1つ(100000GPまでのもの)", "蘇生ポーション(装飾品)+アタッチメント割引券20枚(割引券は人数分)", "60000GP"]), 10, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["任意の武器1つ(150000GPまでのもの)", "任意の盾1つ(150000GPまでのもの)", "任意の鎧1つ(150000GPまでのもの)", "任意の装飾品1つ(200000GPまでのもの)", "蘇生ポーション(装飾品)+アタッチメント割引券30枚(割引券は人数分)", "黄金の守護者の証(装飾品)(【ハッキング】があれば黄金の電子暗号キー(装飾品)も追加)"]), 11, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["体力の欠片（大事なもの）(全員に10個)", "敏捷の欠片（大事なもの）(全員に10個)", "感覚の欠片（大事なもの）(全員に10個)", "知力の欠片（大事なもの）(全員に10個)", "意志の欠片（大事なもの）(全員に10個)", "お好きな副能力の欠片（大事なもの）(1人ずつ好きなものを選択して全員に50個)"]), 12, $$$($$($nesting, 'DiceTable'), 'Table').$new("財宝表", "1D6", ["体力の欠片（大事なもの）(全員に20個)", "敏捷の欠片（大事なもの）(全員に20個)", "感覚の欠片（大事なもの）(全員に20個)", "知力の欠片（大事なもの）(全員に20個)", "意志の欠片（大事なもの）(全員に20個)", "お好きな副能力の欠片（大事なもの）(1人ずつ好きなものを選択して全員に100個)"])).$freeze());
      })($nesting[0], $$($nesting, 'Base'), $nesting);
    })($nesting[0], $nesting);
  }($nesting[0], $nesting);
};
/* Generated by Opal 1.1.1 */


(function (Opal) {
  function $rb_minus(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs - rhs : lhs['$-'](rhs);
  }

  function $rb_plus(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs + rhs : lhs['$+'](rhs);
  }

  function $rb_le(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs <= rhs : lhs['$<='](rhs);
  }

  function $rb_ge(lhs, rhs) {
    return typeof lhs === 'number' && typeof rhs === 'number' ? lhs >= rhs : lhs['$>='](rhs);
  }

  var self = Opal.top,
      $nesting = [],
      nil = Opal.nil,
      $$$ = Opal.$$$,
      $$ = Opal.$$,
      $module = Opal.module,
      $klass = Opal.klass,
      $send2 = Opal.send2,
      $truthy = Opal.truthy,
      $send = Opal.send,
      $hash2 = Opal.hash2,
      $hash = Opal.hash;

  (function ($base, $parent_nesting) {
    var self = $module($base, 'BCDice');
    var $nesting = [self].concat($parent_nesting);

    (function ($base, $parent_nesting) {
      var self = $module($base, 'GameSystem');
      var $nesting = [self].concat($parent_nesting);

      (function ($base, $super, $parent_nesting) {
        var self = $klass($base, $super, 'FilledWith');
        var $nesting = [self].concat($parent_nesting),
            $FilledWith_initialize$1,
            $FilledWith_eval_game_system_specific_command$2,
            $FilledWith_format_table_roll_result$3,
            $FilledWith_roll_jump_table$4,
            $FilledWith_roll_trap_table$20,
            $FilledWith_roll_random_option_table$23,
            $FilledWith_roll_random_event_table$24;
        self.$$prototype.randomizer = nil;
        Opal.const_set($nesting[0], 'ID', "FilledWith");
        Opal.const_set($nesting[0], 'NAME', "フィルトウィズ");
        Opal.const_set($nesting[0], 'SORT_KEY', "ふいるとういす");
        Opal.const_set($nesting[0], 'HELP_MESSAGE', "" + "・判定 (3FW@x#y<=z or z-3FW@x#y)\n" + " 3個の6面ダイスを振る判定。\n" + " @x:xにクリティカル値を入力。省略可。(省略時クリティカル値4)\n" + " #y:yにファンブル値を入力。省略可(省略時ファンブル値17)\n" + " <=z or z-:zに目標値を入力。±の計算に対応。省略可。\n" + "・【必殺技！】 (HST)\n" + " ホムンクルス特技【必殺技！】表。\n" + "・マジカルクッキング (COOKx)\n" + " マジカルクッキングのシェフのおすすめコース。\n" + " xにクッキングレベルを入力。(1-8)\n" + "・ナンバーワンくじ (LOTN or LOTP)\n" + " LOTNでノーマルくじ、LOTPでプレミアムくじ。(GURPS-FW版)\n" + "----------夢幻の迷宮用----------\n" + "・共通書式\n" + " a:aに地形(1-6の数字)を入力。省略可。(省略時ランダム決定)\n" + "  (1:洞窟 2:遺跡 3:山岳 4:水辺 5:森林 6:墓場)\n" + " d:dに難易度を入力。(E:初級 N:中級 H:上級 L:悪夢 X:伝説)\n" + "・ランダムイベント表 (RANDda)\n" + "・ランダムエンカウント表 (RENCda)\n" + "・エネミーデータ表 (REDde)\n" + " エネミーデータ参照表。\n" + " GMがシークレットダイスで参照するとPLに知られずにエネミーデータを参照可能。\n" + " e:3桁のイベントダイスを入力(D666の結果)。\n" + "・トラップ表 (TRAPd)\n" + "・財宝表 (TRSr±x)\n" + " r:rに財宝ランクを入力。\n" + " ±x:xに財宝ランク修正値を入力。省略可。\n" + "・迷宮追加オプション表(ROPd)\n");
        self.$register_prefix("3FW", "[\\+\\-\\d]*-3FW", "LOT[NP]", "HST", "COOK[1-8]", "RAND", "RENC", "RED", "TRS", "TRAP[ENHLX]", "ROP[ENHLX]");
        Opal.def(self, '$initialize', $FilledWith_initialize$1 = function $$initialize(command) {
          var $iter = $FilledWith_initialize$1.$$p,
              $yield = $iter || nil,
              self = this;
          if ($iter) $FilledWith_initialize$1.$$p = null;
          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $FilledWith_initialize$1, false, true), 'initialize', [command], null);
          return self.d66_sort_type = $$$($$($nesting, 'D66SortType'), 'NO_SORT');
        }, $FilledWith_initialize$1.$$arity = 1);
        Opal.def(self, '$eval_game_system_specific_command', $FilledWith_eval_game_system_specific_command$2 = function $$eval_game_system_specific_command(command) {
          var self = this,
              result = nil,
              $case = nil,
              lv = nil;
          result = $$($nesting, 'FW').$roll(command, self.randomizer);

          if ($truthy(result)) {
            return result;
          }

          ;
          return function () {
            $case = command;

            if ("LOTN"['$===']($case)) {
              return self.$roll_jump_table("ナンバーワンノーマルくじ", $$($nesting, 'LOT_NORMAL_TABLES')['$[]'](1));
            } else if ("LOTP"['$===']($case)) {
              return self.$roll_jump_table("ナンバーワンプレミアムくじ", $$($nesting, 'LOT_PREMIUM_TABLES')['$[]'](1));
            } else if (/COOK([1-8])/['$===']($case)) {
              lv = $$($nesting, 'Regexp').$last_match(1).$to_i();
              return self.$roll_jump_table("マジカルクッキング", $$($nesting, 'COOK_TABLES')['$[]'](lv));
            } else if (/TRAP[ENHLX]/['$===']($case)) {
              return self.$roll_trap_table(command);
            } else if (/TRS.*/i['$===']($case)) {
              return self.$getTresureResult(command);
            } else if (/RAND.*/['$===']($case)) {
              return self.$roll_random_event_table(command);
            } else if (/RENC.*/['$===']($case)) {
              return self.$roll_random_event_table(command);
            } else if (/RED.*/i['$===']($case)) {
              return self.$fetch_enemy_data(command);
            } else if (/ROP[ENHLX]/['$===']($case)) {
              return self.$roll_random_option_table(command);
            } else {
              return self.$roll_tables(command, $$($nesting, 'TABLES'));
            }
          }();
        }, $FilledWith_eval_game_system_specific_command$2.$$arity = 1);
        Opal.def(self, '$format_table_roll_result', $FilledWith_format_table_roll_result$3 = function $$format_table_roll_result(table_name, number, result) {
          var self = this;
          return "" + table_name + "(" + number + "):" + result;
        }, $FilledWith_format_table_roll_result$3.$$arity = 3);
        Opal.def(self, '$roll_jump_table', $FilledWith_roll_jump_table$4 = function $$roll_jump_table(table_name, table) {
          try {
            var $$5,
                self = this,
                values = nil;
            values = [];
            return $send(self, 'loop', [], ($$5 = function (_$$28) {
              function $$5() {
                return _$$28.apply(this, arguments);
              }

              $$5.toString = function () {
                return _$$28.toString();
              };

              return $$5;
            }(function () {
              var self = $$5.$$s == null ? this : $$5.$$s,
                  roll_result = nil,
                  content = nil,
                  $case = nil;
              if (self.randomizer == null) self.randomizer = nil;
              roll_result = table.$roll(self.randomizer);
              values.$concat(roll_result.$values());
              content = roll_result.$content();
              return function () {
                $case = content;

                if ($$($nesting, 'String')['$===']($case)) {
                  Opal.ret($$($nesting, 'Result').$new(self.$format_table_roll_result(table_name, values.$join(), content)));
                } else if ($$($nesting, 'Proc')['$===']($case)) {
                  return table = content.$call();
                } else {
                  return self.$raise($$($nesting, 'TypeError'));
                }
              }();
            }), $$5.$$s = self, $$5.$$arity = 0, $$5));
          } catch ($returner) {
            if ($returner === Opal.returner) {
              return $returner.$v;
            }

            throw $returner;
          }
        }, $FilledWith_roll_jump_table$4.$$arity = 2);

        (function ($base, $super, $parent_nesting) {
          var self = $klass($base, $super, 'FW');
          var $nesting = [self].concat($parent_nesting),
              $FW_initialize$6,
              $FW_roll$7,
              $FW_parse$8,
              $FW_roll$11,
              $FW_expr$12,
              $FW_result$13;
          self.$$prototype.dice_count = self.$$prototype.critical = self.$$prototype.fumble = self.$$prototype.target = nil;
          self.$attr_accessor("dice_count", "target", "critical", "fumble");
          Opal.def(self, '$initialize', $FW_initialize$6 = function $$initialize() {
            var self = this;
            return self.target = nil;
          }, $FW_initialize$6.$$arity = 0);
          Opal.defs(self, '$roll', $FW_roll$7 = function $$roll(command, randomizer) {
            var $a,
                self = this,
                fw = nil;
            fw = self.$parse(command);
            return $a = fw, $a === nil || $a == null ? nil : $send($a, 'roll', [randomizer]);
          }, $FW_roll$7.$$arity = 2);
          Opal.defs(self, '$parse', $FW_parse$8 = function $$parse(command) {
            var $$9,
                $$10,
                self = this,
                m = nil;

            if ($truthy(m = /^(\d[+\-\d]*)-(\d+)FW(?:@(\d+))?(?:\#(\d+))?$/.$match(command))) {
              return $send(self.$new(), 'tap', [], ($$9 = function (_$$29) {
                function $$9(_x10) {
                  return _$$29.apply(this, arguments);
                }

                $$9.toString = function () {
                  return _$$29.toString();
                };

                return $$9;
              }(function (fw) {
                var self = $$9.$$s == null ? this : $$9.$$s,
                    $a,
                    $b,
                    $writer = nil,
                    $ret_or_1 = nil,
                    $ret_or_2 = nil;

                if (fw == null) {
                  fw = nil;
                }

                ;
                $writer = [m['$[]'](2).$to_i()];
                $send(fw, 'dice_count=', Opal.to_a($writer));
                $writer[$rb_minus($writer["length"], 1)];
                ;
                $writer = [$$($nesting, 'Arithmetic').$eval(m['$[]'](1), $$$($$($nesting, 'RoundType'), 'FLOOR'))];
                $send(fw, 'target=', Opal.to_a($writer));
                $writer[$rb_minus($writer["length"], 1)];
                ;
                $writer = [function () {
                  if ($truthy($ret_or_1 = ($a = m['$[]'](3), $a === nil || $a == null ? nil : $send($a, 'to_i', [])))) {
                    return $ret_or_1;
                  } else {
                    return 4;
                  }

                  ;
                  return nil;
                }()];
                $send(fw, 'critical=', Opal.to_a($writer));
                $writer[$rb_minus($writer["length"], 1)];
                ;
                $writer = [function () {
                  if ($truthy($ret_or_2 = ($b = m['$[]'](4), $b === nil || $b == null ? nil : $send($b, 'to_i', [])))) {
                    return $ret_or_2;
                  } else {
                    return 17;
                  }

                  ;
                  return nil;
                }()];
                $send(fw, 'fumble=', Opal.to_a($writer));
                return $writer[$rb_minus($writer["length"], 1)];
                ;
              }), $$9.$$s = self, $$9.$$arity = 1, $$9));
            } else if ($truthy(m = /(\d+)FW(?:@(\d+))?(?:\#(\d+))?(?:<=([+\-\d]+))?/.$match(command))) {
              return $send(self.$new(), 'tap', [], ($$10 = function (_$$30) {
                function $$10(_x11) {
                  return _$$30.apply(this, arguments);
                }

                $$10.toString = function () {
                  return _$$30.toString();
                };

                return $$10;
              }(function (fw) {
                var self = $$10.$$s == null ? this : $$10.$$s,
                    $a,
                    $b,
                    $writer = nil,
                    $ret_or_3 = nil,
                    $ret_or_4 = nil;

                if (fw == null) {
                  fw = nil;
                }

                ;
                $writer = [m['$[]'](1).$to_i()];
                $send(fw, 'dice_count=', Opal.to_a($writer));
                $writer[$rb_minus($writer["length"], 1)];
                ;

                if ($truthy(m['$[]'](4))) {
                  $writer = [$$($nesting, 'Arithmetic').$eval(m['$[]'](4), $$$($$($nesting, 'RoundType'), 'FLOOR'))];
                  $send(fw, 'target=', Opal.to_a($writer));
                  $writer[$rb_minus($writer["length"], 1)];
                }

                ;
                $writer = [function () {
                  if ($truthy($ret_or_3 = ($a = m['$[]'](2), $a === nil || $a == null ? nil : $send($a, 'to_i', [])))) {
                    return $ret_or_3;
                  } else {
                    return 4;
                  }

                  ;
                  return nil;
                }()];
                $send(fw, 'critical=', Opal.to_a($writer));
                $writer[$rb_minus($writer["length"], 1)];
                ;
                $writer = [function () {
                  if ($truthy($ret_or_4 = ($b = m['$[]'](3), $b === nil || $b == null ? nil : $send($b, 'to_i', [])))) {
                    return $ret_or_4;
                  } else {
                    return 17;
                  }

                  ;
                  return nil;
                }()];
                $send(fw, 'fumble=', Opal.to_a($writer));
                return $writer[$rb_minus($writer["length"], 1)];
                ;
              }), $$10.$$s = self, $$10.$$arity = 1, $$10));
            } else {
              return nil;
            }
          }, $FW_parse$8.$$arity = 1);
          Opal.def(self, '$roll', $FW_roll$11 = function $$roll(randomizer) {
            var self = this,
                dice_list = nil,
                dice = nil,
                dice_str = nil,
                res = nil,
                sequence = nil,
                $writer = nil;
            dice_list = randomizer.$roll_barabara(self.dice_count, 6);
            dice = dice_list.$sum();
            dice_str = dice_list.$join(",");
            res = self.$result(dice);
            sequence = ["" + "(" + self.$expr() + ")", "" + dice + "[" + dice_str + "]", res.$text()].$compact();
            $writer = [sequence.$join(" ＞ ")];
            $send(res, 'text=', Opal.to_a($writer));
            $writer[$rb_minus($writer["length"], 1)];
            ;
            return res;
          }, $FW_roll$11.$$arity = 1);
          self.$private();
          Opal.def(self, '$expr', $FW_expr$12 = function $$expr() {
            var self = this,
                ret = nil;
            ret = "" + self.dice_count + "FW";

            if ($truthy(self.critical['$!='](4))) {
              ret = $rb_plus(ret, "" + "@" + self.critical);
            }

            ;

            if ($truthy(self.fumble['$!='](17))) {
              ret = $rb_plus(ret, "" + "#" + self.fumble);
            }

            ;

            if ($truthy(self.target)) {
              ret = $rb_plus(ret, "" + "<=" + self.target);
            }

            ;
            return ret;
          }, $FW_expr$12.$$arity = 0);
          return (Opal.def(self, '$result', $FW_result$13 = function $$result(total) {
            var self = this,
                success = nil;

            if ($truthy($rb_le(total, self.critical))) {
              return $$($nesting, 'Result').$critical("クリティカル！");
            } else if ($truthy($rb_ge(total, self.fumble))) {
              return $$($nesting, 'Result').$fumble("ファンブル！");
            } else if ($truthy(self.target)) {
              success = $rb_minus(self.target, total);

              if ($truthy($rb_le(total, self.target))) {
                return $$($nesting, 'Result').$success("" + "成功(成功度:" + success + ")");
              } else {
                return $$($nesting, 'Result').$failure("" + "失敗(失敗度:" + success + ")");
              }

              ;
            } else {
              return $$($nesting, 'Result').$new();
            }
          }, $FW_result$13.$$arity = 1), nil) && 'result';
        })($nesting[0], null, $nesting);

        Opal.const_set($nesting[0], 'TABLES', $hash2(["HST"], {
          "HST": $$$($$($nesting, 'DiceTable'), 'Table').$new("【必殺技！】", "1D6", ["〔命中〕判定に出目[1,1,1]でクリティカル。更に致傷力に「SLv×20」のボーナスを得る。", "〔命中〕判定と致傷力に「SLv×10」のボーナスを得る。", "致傷力に「SLv×10」のボーナスを得る。", "攻撃が命中するとバッドステータス「転倒」を与える。", "通常攻撃。", "〔命中〕判定に[6,6,6]でファンブル。更に、使用者がバッドステータス「転倒」を受ける。"])
        }).$freeze());

        (function ($base, $super, $parent_nesting) {
          var self = $klass($base, $super, 'Row');
          var $nesting = [self].concat($parent_nesting),
              $Row_initialize$14,
              $Row_format$15;
          self.$$prototype.args = self.$$prototype.body = nil;
          Opal.def(self, '$initialize', $Row_initialize$14 = function $$initialize(body, $a) {
            var $post_args,
                args,
                self = this;
            $post_args = Opal.slice.call(arguments, 1, arguments.length);
            args = $post_args;
            ;
            self.body = body;
            return self.args = args;
          }, $Row_initialize$14.$$arity = -2);
          return (Opal.def(self, '$format', $Row_format$15 = function $$format(difficulty) {
            var _$$31,
                self = this,
                args = nil;

            args = $send(self.args, 'map', [], (_$$31 = function $$16(e) {
              var self = _$$31.$$s == null ? this : _$$31.$$s;

              if (e == null) {
                e = nil;
              }

              ;
              return e['$[]'](difficulty.$index());
            }, _$$31.$$s = self, _$$31.$$arity = 1, _$$31));
            return $send($$($nesting, 'Kernel'), 'format', [self.body].concat(Opal.to_a(args)));
          }, $Row_format$15.$$arity = 1), nil) && 'format';
        })($nesting[0], null, $nesting);

        (function ($base, $super, $parent_nesting) {
          var self = $klass($base, $super, 'Difficulty');
          var $nesting = [self].concat($parent_nesting),
              $Difficulty_initialize$17,
              $Difficulty_index$18,
              $Difficulty_name$19;
          self.$$prototype.index = self.$$prototype.sign = self.$$prototype.name = nil;
          Opal.const_set($nesting[0], 'DIFFICULTYS', ["E", "N", "H", "L", "X"].$freeze());
          Opal.const_set($nesting[0], 'NAMES', $hash2(["E", "N", "H", "L", "X"], {
            "E": "初級",
            "N": "中級",
            "H": "上級",
            "L": "悪夢",
            "X": "伝説"
          }).$freeze());
          Opal.def(self, '$initialize', $Difficulty_initialize$17 = function $$initialize(sign) {
            var self = this;
            return self.sign = sign;
          }, $Difficulty_initialize$17.$$arity = 1);
          Opal.def(self, '$index', $Difficulty_index$18 = function $$index() {
            var self = this,
                $ret_or_5 = nil;
            return self.index = function () {
              if ($truthy($ret_or_5 = self.index)) {
                return $ret_or_5;
              } else {
                return $$($nesting, 'DIFFICULTYS').$find_index(self.sign);
              }

              ;
              return nil;
            }();
          }, $Difficulty_index$18.$$arity = 0);
          return (Opal.def(self, '$name', $Difficulty_name$19 = function $$name() {
            var self = this,
                $ret_or_6 = nil;
            return self.name = function () {
              if ($truthy($ret_or_6 = self.name)) {
                return $ret_or_6;
              } else {
                return $$($nesting, 'NAMES')['$[]'](self.sign);
              }

              ;
              return nil;
            }();
          }, $Difficulty_name$19.$$arity = 0), nil) && 'name';
        })($nesting[0], null, $nesting);

        Opal.const_set($nesting[0], 'TRAP_TABLE', [$$($nesting, 'Row').$new("トライディザスター:宝箱から広範囲に火炎・冷気・電撃が放たれる罠。PC全員に「%s」の「火炎」「冷気」「電撃」属性ダメージ。", ["3D6+3", "3D6+50", "3D6+70", "3D6+100", "300"]), $$($nesting, 'Row').$new("ペトロブラスター:広範囲に石化光線を放つ罠。PC全員[抵抗-%s]判定を行い、失敗したPCはBS「石化」を受ける。", [2, 4, 6, 8, 10]), $$($nesting, 'Row').$new("クロスボウストリーム:宝箱から矢の嵐が放たれる罠。PC全員に「%s」の「刺突」属性ダメージ。「ドッジ-%s」で〔回避〕が可能。", ["3D6+20", "3D6+40", "3D6+60", "3D6+90", "200"], [4, 6, 8, 10, 20]), $$($nesting, 'Row').$new("フォーチュンイーター:PC全員の幸運を食らい、Ftを%s点減少させる。Ftが0の場合「%s」点の防護点無視ダメージ。", [1, 2, 3, 4, 5], ["3D6+30", "3D6+50", "3D6+70", "3D6+100", "300"]), $$($nesting, 'Row').$new("スロット:解除に失敗しても害はないが、スロットが揃うまで開かない宝箱。スロットを1回まわすには%sGPが必要。行動を消費して[感覚-%s]判定に成功すればスロットは揃う。有利な特異点「ビビット反射」があれば判定に+4のボーナス。", [100, 300, 600, 1000, 10000], [4, 6, 8, 10, 15]), $$($nesting, 'Row').$new("テレポーター:PC全員(とエンカウントしているエネミー)を転送して道に迷わせる。「財宝ランク」が1段階減少する。"), $$($nesting, 'Row').$new("アイスコフィン:宝箱を開けようとしたキャラクターを氷漬けにする罠。対象1体に「%s」の「冷気」属性ダメージ。更にFPにも%s点の防護点無視ダメージ。", ["3D6+30", "3D6+50", "3D6+70", "3D6+100", "300"], [5, 10, 15, 20, 30]), $$($nesting, 'Row').$new("クロスボウ:宝箱を開けようとしたキャラクターに強力な矢が放たれる罠。対象1体に「%s」の「刺突」属性ダメージ。「ドッジ-%s」", ["3D6+20", "3D6+40", "3D6+60", "3D6+90", "200"], [4, 6, 8, 10, 20]), $$($nesting, 'Row').$new("毒針:宝箱を開けようとしたキャラクターに毒針を突き刺す罠対象1体に%s点の防護点無視ダメージ。更に[抵抗-%s]判定に失敗するとシナリオ終了まであらゆる判定に-2のペナルティ。", [15, 30, 45, 60, 150], [4, 6, 8, 10, 15]), $$($nesting, 'Row').$new("アラーム:即座にその地形のエンカウント表を振って、それに対応したエネミーが出現する。出現したエネミーはそのターンから行動順に組み込まれる。出現するエネミー以外の記述は無視する。"), $$($nesting, 'Row').$new("殺人鬼の斧:宝箱を開けようとしたキャラクターに斧が振り下ろされる罠。対象1体に「%s」の「打撃」「斬撃」属性ダメージ。「ドッジ-%s」か「シールド-%s」で〔回避〕が可能。", ["3D6+30", "3D6+50", "3D6+70", "3D6+100", "300"], [4, 6, 8, 10, 20], [4, 6, 8, 10, -20]), $$($nesting, 'Row').$new("死神:宝箱を開けようとしたキャラクターに死神を取り憑かせる罠。4ラウンド目が終了するまであらゆる判定に-3のペナルティを受け、4ラウンド目の終了と同時に「%s」の防護点無視ダメージ。", ["3D6+30", "3D6+50", "3D6+70", "3D6+100", "300"]), $$($nesting, 'Row').$new("幻の宝:宝箱に偽の財宝を入れ、本物の財宝を入手させない罠。トラップが発動すると価値の無い偽の宝物「幻の宝」を入手してしまう。「幻の宝」はアイテム欄を3つ占有し、シナリオ終了まで捨てられない。アイテム欄に空きがない場合は、何かを捨てて誰かが必ず持たなくてはならない。"), $$($nesting, 'Row').$new("エクスプロージョン:宝箱が大爆発を起こし、中身を粉々にしてしまう罠。宝箱の中身は消滅する。PC全員に「%s」の「打撃」「火炎」属性ダメージ。", ["3D6+10", "3D6+30", "3D6+50", "3D6+80", "200"]), $$($nesting, 'Row').$new("レインボーポイズン:宝箱から七色の毒ガスが放たれる罠。PC全員に「%s」の防護点無視ダメージ。更にシナリオ終了まであらゆる判定に-2のペナルティ。[抵抗-%s]判定に成功すれば無効。", ["3D6+10", "3D6+30", "3D6+50", "3D6+80", "200"], [4, 6, 8, 10, 15]), $$($nesting, 'Row').$new("デスクラウド:宝箱から致死性の毒ガスを放つ罠。PC全員を即死させる。[抵抗-%s]判定に成功すれば無効。", [2, 4, 6, 8, 12])].$freeze());
        Opal.def(self, '$roll_trap_table', $FilledWith_roll_trap_table$20 = function $$roll_trap_table(command) {
          var self = this,
              m = nil,
              difficality = nil,
              number = nil,
              chosen = nil;
          m = /^TRAP([ENHLX])$/.$match(command);

          if ($truthy(m)) {} else {
            return nil;
          }

          ;
          difficality = $$($nesting, 'Difficulty').$new(m['$[]'](1));
          number = self.randomizer.$roll_sum(3, 6);
          chosen = $$($nesting, 'TRAP_TABLE')['$[]']($rb_minus(number, 3));
          return "" + "トラップ表<" + difficality.$name() + ">(" + number + "):" + chosen.$format(difficality);
        }, $FilledWith_roll_trap_table$20.$$arity = 1);

        (function ($base, $super, $parent_nesting) {
          var self = $klass($base, $super, 'D66Table');
          var $nesting = [self].concat($parent_nesting),
              $D66Table_initialize$21,
              $D66Table_roll$22;
          self.$$prototype.rows = self.$$prototype.name = nil;
          Opal.def(self, '$initialize', $D66Table_initialize$21 = function $$initialize(name, rows) {
            var self = this;
            self.name = name;
            return self.rows = rows;
          }, $D66Table_initialize$21.$$arity = 2);
          return (Opal.def(self, '$roll', $D66Table_roll$22 = function $$roll(randomizer, difficality) {
            var self = this,
                value = nil,
                chosen = nil;
            value = randomizer.$roll_d66($$$($$($nesting, 'D66SortType'), 'NO_SORT'));
            chosen = self.rows['$[]'](value);
            return "" + self.name + "<" + difficality.$name() + ">(" + value + "):" + chosen.$format(difficality);
          }, $D66Table_roll$22.$$arity = 2), nil) && 'roll';
        })($nesting[0], null, $nesting);

        Opal.const_set($nesting[0], 'OPTION_TABLE', $$($nesting, 'D66Table').$new("迷宮追加オプション表", $hash(11, $$($nesting, 'Row').$new("黄金の迷宮(財宝ランク+2):全てが黄金で彩られた迷宮。財宝ランクが大きく上昇する。"), 12, $$($nesting, 'Row').$new("密林の迷宮(財宝ランク+1):密林の中にひっそりとたたずむ迷宮。分類が「魔獣」「獣人」「霊獣」のエネミーが行うあらゆる判定に+2のボーナス。"), 13, $$($nesting, 'Row').$new("カラクリの迷宮:複雑なカラクリが周囲で絶え間なく動いている迷宮。分類「ギア」のエネミーが行うあらゆる判定に+2のボーナス。クリア時に「アタッチメント割引券」を全員が%s枚獲得。", [1, 2, 3, 5, 10]), 14, $$($nesting, 'Row').$new("フラウの舞踏会:あちこちに花畑のある迷宮。フラウが発生するランダムイベントが発生した際、「この迷宮を制覇して、私達が舞踏会を開けるようにしてね」とお願いされ、クリア時の報酬に%sが追加される。", ["「キノコの帽子」(装飾品)", "「猛毒の花」(装飾品)", "「フルブロウン」(鎧)", "「緊急召喚の宝珠」(装飾品)", "魔将樹の大剣（剣）"]), 15, $$($nesting, 'Row').$new("アズマ風の迷宮:風流なアズマ風の迷宮。武器に「刀」を持つエネミーが行うあらゆる判定に+2のボーナス。クリア時に「アタッチメント割引券」を全員が%s枚獲得。", [1, 2, 3, 5, 10]), 16, $$($nesting, 'Row').$new("枯れた泉の迷宮:「全地形1-1」の回復の泉が全て枯れており、回復効果を得ることができない。「山岳1-6」の貴重な水源や、「水辺1-6」の毒の泉などはそのまま存在する。"), 21, $$($nesting, 'Row').$new("天空への道(財宝ランク+1):上へ上へと果てしなく登っていく迷宮。空気が薄くなって疲労しやすくなる。【特技】特技などによるFP消費が全て+3。"), 22, $$($nesting, 'Row').$new("灼熱焦土の迷宮(財宝ランク+1):とてつもなく暑く、あちこちで炎が燃え盛る迷宮。エネミーが行う「火炎」属性を含む攻撃の致傷力に+%sのボーナス。", [10, 20, 30, 50, 100]), 23, $$($nesting, 'Row').$new("灼熱焦土の迷宮(財宝ランク+1):とてつもなく寒く、気温が氷点下の迷宮。エネミーが行う「冷気」属性を含む攻撃の致傷力に+%sのボーナス。", [10, 20, 30, 50, 100]), 24, $$($nesting, 'Row').$new("盗賊王の迷宮:迷宮内での罠や鍵を解除する[感覚]判定に-3のペナルティ。4ラウンドまでに出現した宝箱の「財宝ランク」+1。"), 25, $$($nesting, 'Row').$new("ミミック狂暴化:「全地形2-5」のミミックの致傷力に+%sのボーナス。ミミックを見破った場合に得られるGPが%sGP増加する。", [20, 30, 50, 80, 150], [500, 1000, 3000, 5000, 20000]), 26, $$($nesting, 'Row').$new("トレジャーイーター狂暴化:「全地形2-6」のトレジャーイーターを見破る[知力]判定に-3のペナルティ。4ラウンドまでに出現した宝箱の「財宝ランク」+1。"), 31, $$($nesting, 'Row').$new("暗闇の迷宮:どこもかしこも真っ暗な迷宮。「猫の目」などがなければ視覚に関する[感覚]判定に-5のペナルティ。"), 32, $$($nesting, 'Row').$new("騒音の迷宮:常に大音量で謎の音楽(BGM)が鳴っている迷宮。聴覚に関する[感覚]判定に-5のペナルティ。"), 33, $$($nesting, 'Row').$new("未知の怪物の迷宮(財宝ランク+1):エネミーの姿がシルエットのみになる迷宮。エネミーのデータがいかなる手段でも判明させられなくなる。(通常通り〔HP〕〔FP〕〔先制〕は判明する)"), 34, $$($nesting, 'Row').$new("氾濫中の迷宮:大雨が降っており、川などが氾濫している迷宮。水泳を行う際の[敏捷]判定に-5のペナルティ。「森林3-6」の山火事イベントの効果は無視できる。"), 35, $$($nesting, 'Row').$new("間抜けの迷宮(財宝ランク+1):頭がおかしくなりそうな極彩色の迷宮。[知力][意志]判定に-2のペナルティ。[知力]や[意志]そのものが下がるわけではない。"), 36, $$($nesting, 'Row').$new("瘴気の迷宮(財宝ランク+1):生命力を奪う紫の霧で満ちた迷宮。〔HP〕の最大値に-%sのペナルティ。", [10, 20, 30, 40, 50]), 41, $$($nesting, 'Row').$new("加速する迷宮:狂ったように針の動く時計が多数された迷宮。「CT:安息の日」以外の【特技】が「CT:なし」になる。"), 42, $$($nesting, 'Row').$new("停滞する迷宮(財宝ランク+1):動かない時計が多数設置された迷宮。「CT:安息の日」以外のCTの存在する【特技】が「CT:シナリオ終了」になる。この効果はシナリオ終了まで持続する。"), 43, $$($nesting, 'Row').$new("猛毒の迷宮(財宝ランク+1):見るからに毒々しい紫色の沼があちこちにある迷宮。エネミーが行う、名称に「毒」もしくは「ポイズン」が入る【特技】や、名称に「毒」もしくは「ポイズン」が入るトラップの致傷力に+%sのボーナス。", [10, 20, 40, 50, 100]), 44, $$($nesting, 'Row').$new("死の迷宮(財宝ランク+2):死の運命から逃れることのできない、血まみれの迷宮。「生命保険証」の効果が適用されない。"), 45, $$($nesting, 'Row').$new("幸運の迷宮:何者かの加護を感じる迷宮。PC全員のFtの最大値と現在値に+1のボーナス。この効果はシナリオ終了まで持続する。"), 46, $$($nesting, 'Row').$new("不運の迷宮:PC全員のFt最大値と現在値に-1のペナルティ。この効果はシナリオ終了まで持続する。"), 51, $$($nesting, 'Row').$new("レアメタルの迷宮:非常にレアなエネミー「レアメタルキャンディー」「レアメタルクラウン」が生息している迷宮。キャンディークラウン(CL40)、ゴールデンクラウン(CL177)から獲得できる通常ドロップのGPが5倍になる。"), 52, $$($nesting, 'Row').$new("魔力の泉:PCとエネミーの双方が、〔FP〕を消費せずに【魔法】を使用できるようになる。最終的な消費〔FP〕が最大〔FP〕より大きい【魔法】は使用できない。"), 53, $$($nesting, 'Row').$new("ブルーの迷宮:陰鬱な気分になり、他のキャラクターと関わる気力を失う。PC全員が不利な特異点「嫌な奴」を1段階得る。"), 54, $$($nesting, 'Row').$new("レッドの迷宮:なぜか興奮して非常に好戦的になる。PC全員が不利な特異点「脳みそ筋肉」を得る。交戦中に「1:回復系」のイベントが発生しても戦闘を終了させることができない。"), 55, $$($nesting, 'Row').$new("ピンクの迷宮:なんだか身近な異性(同性も?)が気になって仕方なくなる。PC全員が不利な特異点「英雄色を好む」を得る。魔族も戦闘意欲を失い、「分類:魔族」のエネミーが出現するイベントは無視する。"), 56, $$($nesting, 'Row').$new("ハズレの迷宮(財宝ランク-1):ツギハギだらけの壁などでできた、ハリボテのような貧相な迷宮。宝箱の中身もなんだか貧相になる。"), 61, $$($nesting, 'Row').$new("ラダマンティスの迷宮(財宝ランク+2):第一魔将ラダマンティスの像が入口に設置された迷宮。全てのエネミーが行うあらゆる判定に+2のボーナス。また、「遺跡6-6」のイベントのダメージ+%s。", [20, 40, 60, 80, 150]), 62, $$($nesting, 'Row').$new("グレイヴディガーの迷宮(財宝ランク+2):第二魔将グレイヴディガーの像が入口に設置された迷宮。「分類:アンデッド」のエネミーが行うあらゆる判定に+5のボーナス。"), 63, $$($nesting, 'Row').$new("ハイペリオンの迷宮(財宝ランク+2):第三魔将ハイペリオンの像が入口に設置された迷宮。全てのエネミーが「ターン開始」時に〔HP〕を全回復する。"), 64, $$($nesting, 'Row').$new("ムスペルニヴルの迷宮(財宝ランク+2):勇ましくも美しい女性の像が設置された迷宮。エネミーが行う「火炎」もしくは「冷気」属性を含む攻撃の致傷力に+%sのボーナス。", [20, 40, 60, 80, 150]), 65, $$($nesting, 'Row').$new("ウェルスの迷宮:人懐っこそうなアズマ風の青年が設置された迷宮。シナリオ上で第五魔将の正体が明らかに鳴っている場合のみ、PC全員のFtの最大値と現在値に+5のボーナス。この効果はシナリオ終了まで持続する。"), 66, $$($nesting, 'Row').$new("バロールの迷宮(財宝ランク+2):第六魔将バロールの像が入口に設置された迷宮。「分類:ギア」のエネミーが行うあらゆる判定に+5のボーナス。"))));
        Opal.def(self, '$roll_random_option_table', $FilledWith_roll_random_option_table$23 = function $$roll_random_option_table(command) {
          var self = this,
              m = nil,
              difficality = nil;
          m = /^ROP([ENHLX])$/.$match(command);

          if ($truthy(m)) {} else {
            return nil;
          }

          ;
          difficality = $$($nesting, 'Difficulty').$new(m['$[]'](1));
          return $$($nesting, 'OPTION_TABLE').$roll(self.randomizer, difficality);
        }, $FilledWith_roll_random_option_table$23.$$arity = 1);
        return (Opal.def(self, '$roll_random_event_table', $FilledWith_roll_random_event_table$24 = function $$roll_random_event_table(command) {
          var $a,
              self = this,
              m = nil,
              type = nil,
              difficulty = nil,
              area = nil,
              $ret_or_7 = nil,
              table = nil;
          m = /^(RAND|RENC)([ENHLX])([1-6])?$/.$match(command);

          if ($truthy(m)) {} else {
            return nil;
          }

          ;

          type = function () {
            if (m['$[]'](1)['$==']("RAND")) {
              return nil;
            } else {
              return 4;
            }

            ;
            return nil;
          }();

          difficulty = $$($nesting, 'Difficulty').$new(m['$[]'](2));

          area = function () {
            if ($truthy($ret_or_7 = ($a = m['$[]'](3), $a === nil || $a == null ? nil : $send($a, 'to_i', [])))) {
              return $ret_or_7;
            } else {
              return self.randomizer.$roll_once(6);
            }

            ;
            return nil;
          }();

          table = $$($nesting, 'EVENT_TABLES')['$[]']($rb_minus(area, 1));
          return table.$roll(self.randomizer, difficulty, $hash2(["type"], {
            "type": type
          }));
        }, $FilledWith_roll_random_event_table$24.$$arity = 1), nil) && 'roll_random_event_table';
      })($nesting[0], $$($nesting, 'Base'), $nesting);
    })($nesting[0], $nesting);
  })($nesting[0], $nesting);

  self.$require("bcdice/game_system/filled_with/lot_tables");
  self.$require("bcdice/game_system/filled_with/enemy_data_tables");
  self.$require("bcdice/game_system/filled_with/event_tables");
  self.$require("bcdice/game_system/filled_with/cook_tables");
  return self.$require("bcdice/game_system/filled_with/tresure_tables");
})(Opal);

/***/ })

}]);
//# sourceMappingURL=default~FilledWith~index.js.map