{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/KemonoNoMori.js"],"names":["require","Opal","modules","$rb_minus","lhs","rhs","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$hash2","hash2","$truthy","truthy","$base","$parent_nesting","concat","$super","$Table_from_i18n$1","$Table_initialize$2","$Table_roll$3","$Table_choice$4","$$prototype","times","sides","name","items","defs","$$from_i18n","key","locale","table","$t","$new","$$arity","def","$$initialize","type","m","$freeze","$match","$raise","$to_i","$$roll","bcdice","value","$roll_sum","$choice","$$choice","index","$rb_times","$rb_plus","$send","send","$RangeTable$1","$RangeTable_initialize$3","$RangeTable_fetch$4","$RangeTable_roll$6","$RangeTable_store$7","$RangeTable_coerce_to_int_range$11","$RangeTable_assert_min_sum_is_covered$12","$RangeTable_assert_max_sum_is_covered$13","$RangeTable_assert_no_gap_or_overlap_in_ranges$14","num_of_dice","num_of_sides","formatter","const_set","$$s","$alias_method","$$2","result","$name","$sum","$content","$attr_reader","dice_roll_method","$iter","$$p","$ret_or_1","$store","$$fetch","$$5","item","i","$range","randomizer","values","sum","$writer","$roll_barabara","$fetch","to_a","$private","$$store","$$8","$$9","$$10","items_with_range","sorted_items","r","c","$coerce_to_int_range","_","$min","$assert_min_sum_is_covered","$assert_max_sum_is_covered","$assert_no_gap_or_overlap_in_ranges","range","content","$$coerce_to_int_range","x","$case","$ret_or_2","$begin","$end","$class","$$assert_min_sum_is_covered","min_sum","$first","$$assert_max_sum_is_covered","max_sum","$last","$$assert_no_gap_or_overlap_in_ranges","$$15","i1","i2","r1","r2","max1","next_of_max1","$max","$rb_divide","$rb_le","$require","$KemonoNoMori_eval_game_system_specific_command$1","$KemonoNoMori_check_1D12$2","$KemonoNoMori_getTrapResult$3","$KemonoNoMori_getEscapeExperienceTableResult$4","$$eval_game_system_specific_command","command","$check_1D12","$getTrapResult","$getEscapeExperienceTableResult","$roll_tables","$$check_1D12","is_action_judge","target_total","success_degree","dice_total","$debug","$eval","$roll_once","$$getTrapResult","trapCheckNumber","chaseNumber","chase","$$getEscapeExperienceTableResult","escapeExperience","escapeDuration","$register_prefix","$keys"],"mappings":"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","file":"default~KemonoNoMori~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/dice_table/table\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'DiceTable');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Table');\n\n        var $nesting = [self].concat($parent_nesting), $Table_from_i18n$1, $Table_initialize$2, $Table_roll$3, $Table_choice$4;\n\n        self.$$prototype.times = self.$$prototype.sides = self.$$prototype.name = self.$$prototype.items = nil;\n        \n        Opal.defs(self, '$from_i18n', $Table_from_i18n$1 = function $$from_i18n(key, locale) {\n          var self = this, table = nil;\n\n          \n          table = $$($nesting, 'I18n').$t(key, $hash2([\"locale\"], {\"locale\": locale}));\n          return self.$new(table['$[]'](\"name\"), table['$[]'](\"type\"), table['$[]'](\"items\"));\n        }, $Table_from_i18n$1.$$arity = 2);\n        \n        Opal.def(self, '$initialize', $Table_initialize$2 = function $$initialize(name, type, items) {\n          var self = this, m = nil;\n\n          \n          self.name = name;\n          self.items = items.$freeze();\n          m = /(\\d+)D(\\d+)/i.$match(type);\n          if ($truthy(m)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"Unexpected table type: \" + (type))\n          };\n          self.times = m['$[]'](1).$to_i();\n          return (self.sides = m['$[]'](2).$to_i());\n        }, $Table_initialize$2.$$arity = 3);\n        \n        Opal.def(self, '$roll', $Table_roll$3 = function $$roll(bcdice) {\n          var self = this, value = nil;\n\n          \n          value = bcdice.$roll_sum(self.times, self.sides);\n          return self.$choice(value);\n        }, $Table_roll$3.$$arity = 1);\n        return (Opal.def(self, '$choice', $Table_choice$4 = function $$choice(value) {\n          var self = this, index = nil;\n\n          \n          index = $rb_minus(value, self.times);\n          return $$($nesting, 'RollResult').$new(self.name, value, self.items['$[]'](index));\n        }, $Table_choice$4.$$arity = 1), nil) && 'choice';\n      })($nesting[0], null, $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/dice_table/range_table\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'DiceTable');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'RangeTable');\n\n        var $nesting = [self].concat($parent_nesting), $RangeTable$1, $RangeTable_initialize$3, $RangeTable_fetch$4, $RangeTable_roll$6, $RangeTable_store$7, $RangeTable_coerce_to_int_range$11, $RangeTable_assert_min_sum_is_covered$12, $RangeTable_assert_max_sum_is_covered$13, $RangeTable_assert_no_gap_or_overlap_in_ranges$14;\n\n        self.$$prototype.name = self.$$prototype.items = self.$$prototype.num_of_dice = self.$$prototype.num_of_sides = self.$$prototype.formatter = nil;\n        \n        Opal.const_set($nesting[0], 'RollResult', $send($$($nesting, 'Struct'), 'new', [\"sum\", \"values\", \"content\", \"formatted\"], ($RangeTable$1 = function(){var self = $RangeTable$1.$$s == null ? this : $RangeTable$1.$$s;\n\n        return self.$alias_method(\"to_s\", \"formatted\")}, $RangeTable$1.$$s = self, $RangeTable$1.$$arity = 0, $RangeTable$1)));\n        Opal.const_set($nesting[0], 'Item', $$($nesting, 'Struct').$new(\"range\", \"content\"));\n        Opal.const_set($nesting[0], 'DICE_ROLL_METHOD_RE', /^(\\d+)D(\\d+)$/i.$freeze());\n        Opal.const_set($nesting[0], 'DEFAULT_FORMATTER', $send(self, 'lambda', [], ($$2 = function(table, result){var self = $$2.$$s == null ? this : $$2.$$s;\n\n        \n          \n          if (table == null) {\n            table = nil;\n          };\n          \n          if (result == null) {\n            result = nil;\n          };\n          return \"\" + (table.$name()) + \"(\" + (result.$sum()) + \") ＞ \" + (result.$content());}, $$2.$$s = self, $$2.$$arity = 2, $$2)));\n        self.$attr_reader(\"name\");\n        self.$attr_reader(\"num_of_dice\");\n        self.$attr_reader(\"num_of_sides\");\n        \n        Opal.def(self, '$initialize', $RangeTable_initialize$3 = function $$initialize(name, dice_roll_method, items) {\n          var $iter = $RangeTable_initialize$3.$$p, formatter = $iter || nil, self = this, $ret_or_1 = nil, m = nil;\n\n          if ($iter) $RangeTable_initialize$3.$$p = null;\n          \n          \n          if ($iter) $RangeTable_initialize$3.$$p = null;;\n          self.name = name.$freeze();\n          self.formatter = (function() {if ($truthy(($ret_or_1 = formatter))) {\n            return $ret_or_1\n          } else {\n            return $$($nesting, 'DEFAULT_FORMATTER')\n          }; return nil; })();\n          m = $$($nesting, 'DICE_ROLL_METHOD_RE').$match(dice_roll_method);\n          if ($truthy(m)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + (self.name) + \": invalid dice roll method: \" + (dice_roll_method))\n          };\n          self.num_of_dice = m['$[]'](1).$to_i();\n          self.num_of_sides = m['$[]'](2).$to_i();\n          return self.$store(items);\n        }, $RangeTable_initialize$3.$$arity = 3);\n        \n        Opal.def(self, '$fetch', $RangeTable_fetch$4 = function $$fetch(value) {\n          var $$5, self = this, item = nil;\n\n          \n          item = $send(self.items, 'find', [], ($$5 = function(i){var self = $$5.$$s == null ? this : $$5.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return i.$range()['$include?'](value);}, $$5.$$s = self, $$5.$$arity = 1, $$5));\n          if ($truthy(item)) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": value is out of range: \" + (value))\n          };\n          return item;\n        }, $RangeTable_fetch$4.$$arity = 1);\n        \n        Opal.def(self, '$roll', $RangeTable_roll$6 = function $$roll(randomizer) {\n          var self = this, values = nil, sum = nil, result = nil, $writer = nil;\n\n          \n          values = randomizer.$roll_barabara(self.num_of_dice, self.num_of_sides);\n          sum = values.$sum();\n          result = $$($nesting, 'RollResult').$new(sum, values, self.$fetch(sum).$content());\n          \n          $writer = [self.formatter['$[]'](self, result)];\n          $send(result, 'formatted=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return result;\n        }, $RangeTable_roll$6.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$store', $RangeTable_store$7 = function $$store(items) {\n          var $$8, $$9, $$10, self = this, items_with_range = nil, sorted_items = nil;\n\n          \n          items_with_range = $send(items, 'map', [], ($$8 = function(r, c){var self = $$8.$$s == null ? this : $$8.$$s;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            if (c == null) {\n              c = nil;\n            };\n            return [self.$coerce_to_int_range(r), c];}, $$8.$$s = self, $$8.$$arity = 2, $$8));\n          sorted_items = $send(items_with_range, 'sort_by', [], ($$9 = function(r, _){var self = $$9.$$s == null ? this : $$9.$$s;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            if (_ == null) {\n              _ = nil;\n            };\n            return r.$min();}, $$9.$$s = self, $$9.$$arity = 2, $$9));\n          self.$assert_min_sum_is_covered(sorted_items);\n          self.$assert_max_sum_is_covered(sorted_items);\n          self.$assert_no_gap_or_overlap_in_ranges(sorted_items);\n          self.items = $send(sorted_items, 'map', [], ($$10 = function(range, content){var self = $$10.$$s == null ? this : $$10.$$s;\n\n          \n            \n            if (range == null) {\n              range = nil;\n            };\n            \n            if (content == null) {\n              content = nil;\n            };\n            return $$($nesting, 'Item').$new(range, content.$freeze()).$freeze();}, $$10.$$s = self, $$10.$$arity = 2, $$10)).$freeze();\n          return self;\n        }, $RangeTable_store$7.$$arity = 1);\n        \n        Opal.def(self, '$coerce_to_int_range', $RangeTable_coerce_to_int_range$11 = function $$coerce_to_int_range(x) {\n          var self = this, $case = nil, $ret_or_2 = nil;\n\n          \n          $case = x;\n          if ($$($nesting, 'Integer')['$===']($case)) {return $$($nesting, 'Range').$new(x, x)}\n          else if ($$($nesting, 'Range')['$===']($case)) {if ($truthy((function() {if ($truthy(($ret_or_2 = x.$begin()['$is_a?']($$($nesting, 'Integer'))))) {\n            return x.$end()['$is_a?']($$($nesting, 'Integer'))\n          } else {\n            return $ret_or_2\n          }; return nil; })())) {\n            return x}};\n          return self.$raise($$($nesting, 'TypeError'), \"\" + (self.name) + \": \" + (x) + \" (\" + (x.$class()) + \") must be an Integer or a Range with Integers \");\n        }, $RangeTable_coerce_to_int_range$11.$$arity = 1);\n        \n        Opal.def(self, '$assert_min_sum_is_covered', $RangeTable_assert_min_sum_is_covered$12 = function $$assert_min_sum_is_covered(sorted_items) {\n          var self = this, min_sum = nil, range = nil;\n\n          \n          min_sum = self.num_of_dice;\n          range = sorted_items.$first()['$[]'](0);\n          if ($truthy(range['$include?'](min_sum))) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": min value (\" + (min_sum) + \") is not covered: \" + (range))\n          };\n          return self;\n        }, $RangeTable_assert_min_sum_is_covered$12.$$arity = 1);\n        \n        Opal.def(self, '$assert_max_sum_is_covered', $RangeTable_assert_max_sum_is_covered$13 = function $$assert_max_sum_is_covered(sorted_items) {\n          var self = this, max_sum = nil, range = nil;\n\n          \n          max_sum = $rb_times(self.num_of_dice, self.num_of_sides);\n          range = sorted_items.$last()['$[]'](0);\n          if ($truthy(range['$include?'](max_sum))) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": max value (\" + (max_sum) + \") is not covered: \" + (range))\n          };\n          return self;\n        }, $RangeTable_assert_max_sum_is_covered$13.$$arity = 1);\n        return (Opal.def(self, '$assert_no_gap_or_overlap_in_ranges', $RangeTable_assert_no_gap_or_overlap_in_ranges$14 = function $$assert_no_gap_or_overlap_in_ranges(sorted_items) {\n          var $$15, self = this;\n\n          \n          $send(sorted_items, 'each_cons', [2], ($$15 = function(i1, i2){var self = $$15.$$s == null ? this : $$15.$$s, r1 = nil, r2 = nil, max1 = nil, next_of_max1 = nil;\n            if (self.name == null) self.name = nil;\n\n          \n            \n            if (i1 == null) {\n              i1 = nil;\n            };\n            \n            if (i2 == null) {\n              i2 = nil;\n            };\n            r1 = i1['$[]'](0);\n            r2 = i2['$[]'](0);\n            max1 = r1.$max();\n            next_of_max1 = $rb_plus(max1, 1);\n            if ($truthy(r2['$include?'](max1))) {\n              self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": Range overlap: \" + (r1) + \" and \" + (r2))};\n            if ($truthy(r2['$include?'](next_of_max1))) {\n              return nil\n            } else {\n              return self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": Range gap: \" + (r1) + \" and \" + (r2))\n            };}, $$15.$$s = self, $$15.$$arity = 2, $$15));\n          return self;\n        }, $RangeTable_assert_no_gap_or_overlap_in_ranges$14.$$arity = 1), nil) && 'assert_no_gap_or_overlap_in_ranges';\n      })($nesting[0], null, $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2, $range = Opal.range;\n\n  \n  self.$require(\"bcdice/dice_table/table\");\n  self.$require(\"bcdice/dice_table/range_table\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'KemonoNoMori');\n\n        var $nesting = [self].concat($parent_nesting), $KemonoNoMori_eval_game_system_specific_command$1, $KemonoNoMori_check_1D12$2, $KemonoNoMori_getTrapResult$3, $KemonoNoMori_getEscapeExperienceTableResult$4;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"KemonoNoMori\");\n        Opal.const_set($nesting[0], 'NAME', \"獸ノ森\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"けもののもり\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・行為判定(成功度自動算出): KAx[±y]\\n\" + \"・継続判定(成功度+1固定): KCx[±y]\\n\" + \"   x=目標値\\n\" + \"   y=目標値への修正(任意) x+y-z のように複数指定可能\\n\" + \"     例1）KA7+3 → 目標値7にプラス3の修正を加えた行為判定\\n\" + \"     例2）KC6 → 目標値6の継続判定\\n\" + \"・罠動作判定: CTR\\n\" + \"   罠ごとに1D12を振る。12が出た場合は罠が動作し、獲物がその効果を受ける\\n\" + \"・各種表\\n\" + \"  ・大失敗表: FT\\n\" + \"  ・能力値ランダム決定表: RST\\n\" + \"  ・ランダム所要時間表: RTT\\n\" + \"  ・ランダム消耗表: RET\\n\" + \"  ・ランダム天気表: RWT\\n\" + \"  ・ランダム天気持続表: RWDT\\n\" + \"  ・ランダム遮蔽物表（屋外）: ROMT\\n\" + \"  ・ランダム遮蔽物表（屋内）: RIMT\\n\" + \"  ・逃走体験表: EET\\n\" + \"  ・食材採集表: GFT\\n\" + \"  ・水採集表: GWT\\n\" + \"  ・白の魔石効果表: WST\\n\");\n        \n        Opal.def(self, '$eval_game_system_specific_command', $KemonoNoMori_eval_game_system_specific_command$1 = function $$eval_game_system_specific_command(command) {\n          var self = this, $case = nil;\n\n          return (function() {$case = command;\n          if (/KA\\d[-+\\d]*/['$===']($case)) {return self.$check_1D12(command, true)}\n          else if (/KC\\d[-+\\d]*/['$===']($case)) {return self.$check_1D12(command, false)}\n          else if (\"CTR\"['$===']($case)) {return self.$getTrapResult()}\n          else if (\"EET\"['$===']($case)) {return self.$getEscapeExperienceTableResult(command)}\n          else {return self.$roll_tables(command, $$($nesting, 'TABLES'))}})()\n        }, $KemonoNoMori_eval_game_system_specific_command$1.$$arity = 1);\n        \n        Opal.def(self, '$check_1D12', $KemonoNoMori_check_1D12$2 = function $$check_1D12(command, is_action_judge) {\n          var self = this, m = nil, target_total = nil, success_degree = nil, dice_total = nil;\n\n          \n          self.$debug(\"獸ノ森の1d12判定\");\n          m = /K[AC](\\d[-+\\d]*)/.$match(command);\n          if ($truthy(m)) {\n          } else {\n            return \"\"\n          };\n          target_total = $$($nesting, 'ArithmeticEvaluator').$eval(m['$[]'](1));\n          self.$debug(\"target_total\", target_total);\n          success_degree = (function() {if ($truthy(is_action_judge)) {\n            return $rb_plus($rb_divide(target_total, 10).$to_i(), 1)\n          } else {\n            return 1\n          }; return nil; })();\n          dice_total = self.randomizer.$roll_once(12);\n          self.$debug(\"dice_total, target_total, success_degree = \", dice_total, target_total, success_degree);\n          if (dice_total['$=='](12)) {\n            return \"\" + \"(1D12<=\" + (target_total) + \") ＞ \" + (dice_total) + \" ＞ 大失敗\"\n          } else if (dice_total['$=='](11)) {\n            return \"\" + \"(1D12<=\" + (target_total) + \") ＞ \" + (dice_total) + \" ＞ 大成功（成功度+\" + (success_degree) + \", 次の継続判定の目標値を10に変更）\"\n          } else if ($truthy($rb_le(dice_total, target_total))) {\n            return \"\" + \"(1D12<=\" + (target_total) + \") ＞ \" + (dice_total) + \" ＞ 成功（成功度+\" + (success_degree) + \"）\"\n          } else {\n            return \"\" + \"(1D12<=\" + (target_total) + \") ＞ \" + (dice_total) + \" ＞ 失敗\"\n          };\n        }, $KemonoNoMori_check_1D12$2.$$arity = 2);\n        \n        Opal.def(self, '$getTrapResult', $KemonoNoMori_getTrapResult$3 = function $$getTrapResult() {\n          var self = this, trapCheckNumber = nil, chaseNumber = nil, chase = nil, $case = nil;\n\n          \n          trapCheckNumber = self.randomizer.$roll_once(12);\n          if (trapCheckNumber['$=='](12)) {\n            \n            chaseNumber = self.randomizer.$roll_once(12);\n            chase = nil;\n            $case = chaseNumber;\n            if ((1)['$===']($case) || (2)['$===']($case) || (3)['$===']($case) || (4)['$===']($case)) {chase = \"小型動物\"}\n            else if ((5)['$===']($case) || (6)['$===']($case) || (7)['$===']($case) || (8)['$===']($case)) {chase = \"大型動物\"}\n            else if ((9)['$===']($case) || (10)['$===']($case) || (11)['$===']($case) || (12)['$===']($case)) {chase = \"人間の放浪者\"};\n            return \"\" + \"罠動作チェック(1D12) ＞ \" + (trapCheckNumber) + \" ＞ 罠が動作していた！ ＞ 獲物表(\" + (chaseNumber) + \") ＞ \" + (chase) + \"が罠にかかっていた\";};\n          return \"\" + \"罠動作チェック(1D12) ＞ \" + (trapCheckNumber) + \" ＞ 罠は動作していなかった\";\n        }, $KemonoNoMori_getTrapResult$3.$$arity = 0);\n        \n        Opal.def(self, '$getEscapeExperienceTableResult', $KemonoNoMori_getEscapeExperienceTableResult$4 = function $$getEscapeExperienceTableResult(command) {\n          var self = this, escapeExperience = nil, escapeDuration = nil;\n\n          \n          escapeExperience = self.$roll_tables(command, $$($nesting, 'TABLES'));\n          escapeDuration = self.randomizer.$roll_once(12);\n          return \"\" + (escapeExperience) + \" (再登場: \" + (escapeDuration) + \"時間後)\";\n        }, $KemonoNoMori_getEscapeExperienceTableResult$4.$$arity = 1);\n        Opal.const_set($nesting[0], 'TABLES', $hash2([\"FT\", \"RST\", \"RTT\", \"RET\", \"RWT\", \"RWDT\", \"ROMT\", \"RIMT\", \"EET\", \"GFT\", \"GWT\", \"WST\"], {\"FT\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"大失敗表\", \"1D12\", [[$range(1, 3, false), \"【余裕】が3点減少する（最低0まで）\"], [$range(4, 5, false), \"ランダムな荷物1個が落ちて行方不明になる（大失敗したエリアのアイテム調査で見つけることが可能）\"], [$range(6, 7, false), \"ランダムな荷物1個が破壊される\"], [$range(8, 9, false), \"ランダム天気表を使用し、結果をターンの終了まで適用する\"], [10, \"ランダムな準備している小道具1個が破壊される\"], [11, \"着想している防具が破壊される\"], [12, \"準備している武器が破壊される\"]]), \"RST\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"能力値ランダム決定表\", \"1D12\", [[$range(1, 2, false), \"【移動】\"], [$range(3, 4, false), \"【格闘】\"], [$range(5, 6, false), \"【射撃】\"], [$range(7, 8, false), \"【製作】\"], [$range(9, 10, false), \"【察知】\"], [$range(11, 12, false), \"【自制】\"]]), \"RTT\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"ランダム所要時間表\", \"1D12\", [[$range(1, 3, false), \"2\"], [$range(4, 6, false), \"3\"], [$range(7, 9, false), \"4\"], [$range(10, 12, false), \"5\"]]), \"RET\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"ランダム消耗表\", \"1D12\", [[$range(1, 3, false), \"0\"], [$range(4, 6, false), \"1\"], [$range(7, 9, false), \"2\"], [$range(10, 12, false), \"4\"]]), \"RWT\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"ランダム天気表\", \"1D12\", [[$range(1, 2, false), \"濃霧\"], [$range(3, 4, false), \"大雨\"], [$range(5, 6, false), \"雷雨\"], [$range(7, 8, false), \"強風\"], [$range(9, 10, false), \"酷暑\"], [$range(11, 12, false), \"極寒\"]]), \"RWDT\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"ランダム天気持続表\", \"1D12\", [[$range(1, 2, false), \"1ターン\"], [$range(3, 4, false), \"3ターン\"], [$range(5, 6, false), \"6ターン\"], [$range(7, 8, false), \"24ターン\"], [$range(9, 10, false), \"72ターン\"], [$range(11, 12, false), \"156ターン\"]]), \"ROMT\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"ランダム遮蔽物表(屋外)\", \"1D12\", [[$range(1, 2, false), \"【藪】耐久度3,軽減値1,特殊効果:コンタクト内のキャラクターに対する射撃攻撃判定に-1の修正を付加\"], [$range(3, 5, false), \"【木】耐久度5,軽減値2,特殊効果:コンタクト内のキャラクターに対する射撃攻撃判定に-1の修正を付加\"], [$range(6, 8, false), \"【大木】耐久度7,軽減値3,特殊効果:コンタクト内のキャラクターに対する射撃攻撃判定に-2の修正を付加\"], [$range(9, 10, false), \"【岩】耐久度6,軽減値4,特殊効果:コンタクト内のキャラクターに対する射撃攻撃判定に-1の修正を付加/コンタクト内で行われる格闘攻撃のダメージ+1\"], [$range(11, 12, false), \"【岩壁】耐久度8,軽減値4,特殊効果:コンタクト内のキャラクターに対する射撃攻撃判定に-2の修正を付加/コンタクト内で行われる格闘攻撃のダメージ+2\"]]), \"RIMT\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"ランダム遮蔽物表(屋内)\", \"1D12\", [[$range(1, 4, false), \"【木材の壁】耐久度4,軽減値2,特殊効果:コンタクト内のキャラクターに対する射撃攻撃判定に-1の修正を付加\"], [$range(5, 8, false), \"【木材の扉】耐久度4,軽減値2,特殊効果:コンタクト内のキャラクターに対する射撃攻撃判定に-1、接触判定と突撃判定に-2の修正を付加\"], [$range(9, 12, false), \"【木製家具】耐久度3,軽減値2,特殊効果:コンタクト内で行われる格闘攻撃のダメージ+1\"]]), \"EET\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"逃走体験表\", \"1D12\", [[$range(1, 3, false), \"【余裕】が0になる\"], [$range(4, 6, false), \"任意の【絆】を合計2点減少する\"], [$range(7, 9, false), \"全ての荷物を失う（逃走したエリアに配置され、調査で発見可能）\"], [$range(10, 12, false), \"全ての武器と防具と小道具と荷物を失う（逃走したエリアに配置され、調査で発見可能）\"]]), \"GFT\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"食材採集表\", \"1D12\", [[$range(1, 2, false), \"食べられる根（栄養価:2）\"], [$range(3, 5, false), \"食べられる草（栄養価:3）\"], [$range(6, 8, false), \"食べられる実（栄養価:5）\"], [$range(9, 10, false), \"小型動物（栄養価:10）\"], [11, \"大型動物（栄養価:40）\"], [12, \"気持ち悪い虫（栄養価:1）\"]]), \"GWT\": $$$($$($nesting, 'DiceTable'), 'RangeTable').$new(\"水採集表\", \"1D12\", [[$range(1, 6, false), \"汚水\"], [$range(7, 11, false), \"飲料水\"], [12, \"毒水\"]]), \"WST\": $$$($$($nesting, 'DiceTable'), 'Table').$new(\"白の魔石効果表\", \"1D12\", [\"役に立たないものの色を変える\", \"役に立たないものを大きくする\", \"役に立たないものを小さくする\", \"役に立たないものを保存する\", \"役に立たないものを復元する\", \"役に立たないものを召喚する\", \"役に立たないものを動かす\", \"役に立たないものを増やす\", \"役に立たないものを貼り付ける\", \"役に立たないものを作り出す\", \"小型動物を召喚する\", \"大型動物を召喚する\"])}).$freeze());\n        return self.$register_prefix(\"K[AC]\", \"CTR\", $$($nesting, 'TABLES').$keys());\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n})(Opal);\n"],"sourceRoot":"webpack:///"}