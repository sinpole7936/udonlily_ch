{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/KillDeathBusiness.js"],"names":["require","Opal","$rb_le","lhs","rhs","$rb_ge","$rb_gt","$rb_plus","$rb_lt","$rb_minus","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$send2","send2","$truthy","truthy","$hash2","hash2","$send","send","$base","$parent_nesting","concat","$super","$KillDeathBusiness_initialize$1","$KillDeathBusiness_result_2d6$2","$KillDeathBusiness_eval_game_system_specific_command$3","$KillDeathBusiness_judgeDice$4","$KillDeathBusiness_judge_expr$5","$KillDeathBusiness_rollTableCommand$6","$KillDeathBusiness_getSceneTableResult$7","$KillDeathBusiness_getNameTableResult$8","$KillDeathBusiness_getServiceSceneTableResult$9","$KillDeathBusiness_getHairStylistAbuseTableResult$10","$KillDeathBusiness_getExtraTableResult$11","$$prototype","randomizer","const_set","def","$$initialize","command","$iter","$$p","$yield","find_super_dispatcher","sort_add_dice","d66_sort_type","$$arity","$$result_2d6","_total","dice_total","_dice_list","cmp_op","_target","$fumble","$translate","$critical","$$eval_game_system_specific_command","$debug","$judgeDice","$rollTableCommand","$private","$$judgeDice","$a","fumble_match","parser","cmd","$ret_or_1","target","modify","fumble","result","dice_list","number","diceText","$match","$new","$round_type","$enable_critical","$enable_fumble","$restrict_cmp_op_to","$parse","$command","$delete_prefix","$to_i","$modify_number","$judge_expr","$roll_barabara","$sum","$join","$$judge_expr","modifier","$modifier","$$rollTableCommand","$b","$ret_or_2","$ret_or_3","tableName","$case","type","text","$roll_tables","$class","$roll_command","$last_match","$getSceneTableResult","to_ary","$getNameTableResult","$getServiceSceneTableResult","$getHairStylistAbuseTableResult","$getExtraTableResult","$$getSceneTableResult","sceneTable1","sceneTable2","result1","num1","result2","num2","$get_table_by_d66_swap","$$getNameTableResult","nameTable1","nameTable2","nameTable3","result3","num3","$$getServiceSceneTableResult","table_name","tables","number1","scene_table","number2","scene","$roll_once","$$getHairStylistAbuseTableResult","hellStylistAbuseTable1","hellStylistAbuseTable2","hellStylistwtable1","hellStylistwtable2","before","after","$get_table_by_1d6","$$getExtraTableResult","extraTable1","extraTable2","extraTable3","extraTable4","result4","num4","$$12","$$s","$to_proc","$freeze","$translate_tables$13","$translate_rtt$14","$$translate_tables","locale","$from_i18n","$$translate_rtt","get_singleton_class","$translate_tables","$translate_rtt","$register_prefix","$keys","$prefixes"],"mappings":"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","file":"default~KillDeathBusiness~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send2 = Opal.send2, $truthy = Opal.truthy, $hash2 = Opal.hash2, $send = Opal.send;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'KillDeathBusiness');\n\n        var $nesting = [self].concat($parent_nesting), $KillDeathBusiness_initialize$1, $KillDeathBusiness_result_2d6$2, $KillDeathBusiness_eval_game_system_specific_command$3, $KillDeathBusiness_judgeDice$4, $KillDeathBusiness_judge_expr$5, $KillDeathBusiness_rollTableCommand$6, $KillDeathBusiness_getSceneTableResult$7, $KillDeathBusiness_getNameTableResult$8, $KillDeathBusiness_getServiceSceneTableResult$9, $KillDeathBusiness_getHairStylistAbuseTableResult$10, $KillDeathBusiness_getExtraTableResult$11;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"KillDeathBusiness\");\n        Opal.const_set($nesting[0], 'NAME', \"キルデスビジネス\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"きるてすひしねす\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・判定\\n\" + \"　JDx or JDx±y or JDx,z JDx#z or JDx±y,z JDx±y#z\\n\" + \"　（x＝難易度、y＝補正、z＝ファンブル率(リスク)）\\n\" + \"・履歴表 (HST)\\n\" + \"・願い事表 (-WT)\\n\" + \"　死(DWT)、復讐(RWT)、勝利(VWT)、獲得(PWT)、支配(CWT)、繁栄(FWT)\\n\" + \"　強化(IWT)、健康(HWT)、安全(SAWT)、長寿(LWT)、生(EWT)\\n\" + \"・万能命名表 (NAME, NAMEx) xに数字(1,2,3)で表を個別ロール\\n\" + \"・サブプロット表 (-SPT)\\n\" + \"　オカルト(OSPT)、家族(FSPT)、恋愛(LOSPT)、正義(JSPT)、修行(TSPT)\\n\" + \"　笑い(BSPT)、意地悪(MASPT)、恨み(UMSPT)、人気(POSPT)、仕切り(PASPT)\\n\" + \"　金儲け(MOSPT)、対悪魔(ANSPT)\\n\" + \"・シーン表 (ST)、サービスシーン表 (EST)\\n\" + \"・CM表 (CMT)\\n\" + \"・蘇生副作用表 (ERT)\\n\" + \"・一週間表（WKT)\\n\" + \"・ソウル放出表 (SOUL)\\n\" + \"・汎用演出表 (STGT)\\n\" + \"・ヘルスタイリスト罵倒表 (HSAT、HSATx) xに数字(1,2)で表を個別ロール\\n\" + \"・指定特技ランダム決定表 (SKLT, RTTn nは分野番号)、指定特技分野ランダム決定表 (RCT, SKLJ)\\n\" + \"・エキストラ表 (EXT、EXTx) xに数字(1,2,3,4)で表を個別ロール\\n\" + \"・製作委員決定表　PCDT/実際どうだったのか表　OHT\\n\" + \"・タスク表　ヘルライオン　PCT1/ヘルクロウ　PCT2/ヘルスネーク　PCT3/\\n\" + \"　ヘルドラゴン　PCT4/ヘルフライ　PCT5/ヘルゴート　PCT6/ヘルベア　PCT7\\n\" + \"・D66ダイスあり\\n\");\n        \n        Opal.def(self, '$initialize', $KillDeathBusiness_initialize$1 = function $$initialize(command) {\n          var $iter = $KillDeathBusiness_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $KillDeathBusiness_initialize$1.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $KillDeathBusiness_initialize$1, false, true), 'initialize', [command], null);\n          self.sort_add_dice = true;\n          return (self.d66_sort_type = $$$($$($nesting, 'D66SortType'), 'ASC'));\n        }, $KillDeathBusiness_initialize$1.$$arity = 1);\n        \n        Opal.def(self, '$result_2d6', $KillDeathBusiness_result_2d6$2 = function $$result_2d6(_total, dice_total, _dice_list, cmp_op, _target) {\n          var self = this;\n\n          \n          if (cmp_op['$=='](\">=\")) {\n          } else {\n            return nil\n          };\n          if ($truthy($rb_le(dice_total, 2))) {\n            return $$($nesting, 'Result').$fumble(self.$translate(\"KillDeathBusiness.fumble\"))\n          } else if ($truthy($rb_ge(dice_total, 12))) {\n            return $$($nesting, 'Result').$critical(self.$translate(\"KillDeathBusiness.special\"))\n          } else {\n            return nil\n          };\n        }, $KillDeathBusiness_result_2d6$2.$$arity = 5);\n        \n        Opal.def(self, '$eval_game_system_specific_command', $KillDeathBusiness_eval_game_system_specific_command$3 = function $$eval_game_system_specific_command(command) {\n          var self = this;\n\n          \n          self.$debug(\"eval_game_system_specific_command command\", command);\n          if ($truthy(command['$start_with?'](\"JD\"))) {\n            return self.$judgeDice(command)\n          } else {\n            return self.$rollTableCommand(command)\n          };\n        }, $KillDeathBusiness_eval_game_system_specific_command$3.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$judgeDice', $KillDeathBusiness_judgeDice$4 = function $$judgeDice(command) {\n          var $a, self = this, fumble_match = nil, parser = nil, cmd = nil, $ret_or_1 = nil, target = nil, modify = nil, fumble = nil, result = nil, dice_list = nil, number = nil, diceText = nil;\n\n          \n          fumble_match = /,(\\d+)$/.$match(command);\n          parser = $$$($$($nesting, 'Command'), 'Parser').$new(/JD\\d+/, $hash2([\"round_type\"], {\"round_type\": self.$round_type()})).$enable_critical().$enable_fumble().$restrict_cmp_op_to(nil);\n          cmd = parser.$parse((function() {if ($truthy(($ret_or_1 = ($a = fumble_match, ($a === nil || $a == null) ? nil : $send($a, 'pre_match', []))))) {\n            return $ret_or_1\n          } else {\n            return command\n          }; return nil; })());\n          if ($truthy(cmd)) {\n          } else {\n            return nil\n          };\n          target = cmd.$command().$delete_prefix(\"JD\").$to_i();\n          modify = cmd.$modify_number();\n          fumble = (function() {if ($truthy(fumble_match)) {\n            return fumble_match['$[]'](1).$to_i()\n          } else {\n            return cmd.$fumble().$to_i()\n          }; return nil; })();\n          command = self.$judge_expr(target, modify, fumble);\n          result = \"\";\n          if ($truthy($rb_gt(target, 12))) {\n            \n            result = $rb_plus(result, \"\" + \"【\" + (command) + \"】 ＞ \" + (self.$translate(\"KillDeathBusiness.JD.warning.over_target_number\")) + \"\\n\");\n            target = 12;};\n          if ($truthy($rb_lt(target, 5))) {\n            \n            result = $rb_plus(result, \"\" + \"【\" + (command) + \"】 ＞ \" + (self.$translate(\"KillDeathBusiness.JD.warning.min_target_is_five\")) + \"\\n\");\n            target = 5;};\n          if ($truthy($rb_lt(fumble, 2))) {\n            fumble = 2\n          } else if ($truthy($rb_gt(fumble, 11))) {\n            \n            result = $rb_plus(result, \"\" + \"【\" + (command) + \"】 ＞ \" + (self.$translate(\"KillDeathBusiness.JD.warning.over_fumble\")) + \"\\n\");\n            fumble = 11;};\n          dice_list = self.randomizer.$roll_barabara(2, 6);\n          number = dice_list.$sum();\n          diceText = dice_list.$join(\",\");\n          result = $rb_plus(result, [self.$translate(\"KillDeathBusiness.JD.options\", $hash2([\"target\", \"modifier\", \"fumble\"], {\"target\": target, \"modifier\": modify, \"fumble\": fumble})), \" ＞ \", self.$translate(\"KillDeathBusiness.JD.dice_value\", $hash2([\"dice_value\"], {\"dice_value\": diceText})), \" ＞ \"].$join(\"\"));\n          if (number['$=='](2)) {\n            result = $rb_plus(result, self.$translate(\"KillDeathBusiness.JD.fumble\"))\n          } else if (number['$=='](12)) {\n            result = $rb_plus(result, self.$translate(\"KillDeathBusiness.JD.special\"))\n          } else if ($truthy($rb_le(number, fumble))) {\n            result = $rb_plus(result, self.$translate(\"KillDeathBusiness.JD.less_than_fumble_target\"))\n          } else {\n            \n            number = $rb_plus(number, modify);\n            if ($truthy($rb_lt(number, target))) {\n              result = $rb_plus(result, self.$translate(\"KillDeathBusiness.JD.failure\", $hash2([\"value\"], {\"value\": number})))\n            } else {\n              result = $rb_plus(result, self.$translate(\"KillDeathBusiness.JD.success\", $hash2([\"value\"], {\"value\": number})))\n            };\n          };\n          return $rb_plus(self.$translate(\"KillDeathBusiness.JD.name\"), result);\n        }, $KillDeathBusiness_judgeDice$4.$$arity = 1);\n        \n        Opal.def(self, '$judge_expr', $KillDeathBusiness_judge_expr$5 = function $$judge_expr(target, modifier, fumble) {\n          var self = this;\n\n          \n          modifier = $$($nesting, 'Format').$modifier(modifier);\n          if ($truthy($rb_gt(fumble, 0))) {\n            fumble = \"\" + \",\" + (fumble)};\n          return \"\" + \"JD\" + (target) + (modifier) + (fumble);\n        }, $KillDeathBusiness_judge_expr$5.$$arity = 3);\n        \n        Opal.def(self, '$rollTableCommand', $KillDeathBusiness_rollTableCommand$6 = function $$rollTableCommand(command) {\n          var $a, $b, self = this, $ret_or_2 = nil, result = nil, $ret_or_3 = nil, tableName = nil, $case = nil, type = nil, number = nil, text = nil;\n\n          \n          command = (function() {if ($truthy(($ret_or_2 = $$($nesting, 'ALIAS')['$[]'](command)))) {\n            return $ret_or_2\n          } else {\n            return command\n          }; return nil; })();\n          result = (function() {if ($truthy(($ret_or_3 = self.$roll_tables(command, $$$(self.$class(), 'TABLES'))))) {\n            return $ret_or_3\n          } else {\n            return $$$(self.$class(), 'RTT').$roll_command(self.randomizer, command)\n          }; return nil; })();\n          if ($truthy(result)) {\n            return result};\n          tableName = \"\";\n          result = \"\";\n          $case = command;\n          if (/^ST(\\d)?$/['$===']($case)) {\n          type = $$($nesting, 'Regexp').$last_match(1).$to_i();\n          $b = self.$getSceneTableResult(type), $a = Opal.to_ary($b), (tableName = ($a[0] == null ? nil : $a[0])), (result = ($a[1] == null ? nil : $a[1])), (number = ($a[2] == null ? nil : $a[2])), $b;}\n          else if (/^NAME(\\d)?$/['$===']($case)) {\n          type = $$($nesting, 'Regexp').$last_match(1).$to_i();\n          $b = self.$getNameTableResult(type), $a = Opal.to_ary($b), (tableName = ($a[0] == null ? nil : $a[0])), (result = ($a[1] == null ? nil : $a[1])), (number = ($a[2] == null ? nil : $a[2])), $b;}\n          else if (/^EST$/i['$===']($case) || /^sErviceST$/i['$===']($case)) {$b = self.$getServiceSceneTableResult(), $a = Opal.to_ary($b), (tableName = ($a[0] == null ? nil : $a[0])), (result = ($a[1] == null ? nil : $a[1])), (number = ($a[2] == null ? nil : $a[2])), $b}\n          else if (/^HSAT(\\d)?$/['$===']($case)) {\n          type = $$($nesting, 'Regexp').$last_match(1).$to_i();\n          $b = self.$getHairStylistAbuseTableResult(type), $a = Opal.to_ary($b), (tableName = ($a[0] == null ? nil : $a[0])), (result = ($a[1] == null ? nil : $a[1])), (number = ($a[2] == null ? nil : $a[2])), $b;}\n          else if (/^EXT(\\d)?$/['$===']($case)) {\n          type = $$($nesting, 'Regexp').$last_match(1).$to_i();\n          $b = self.$getExtraTableResult(type), $a = Opal.to_ary($b), (tableName = ($a[0] == null ? nil : $a[0])), (result = ($a[1] == null ? nil : $a[1])), (number = ($a[2] == null ? nil : $a[2])), $b;};\n          if ($truthy(result['$empty?']())) {\n            return \"\"};\n          text = \"\" + (tableName) + \"(\" + (number) + \") ＞ \" + (result);\n          return text;\n        }, $KillDeathBusiness_rollTableCommand$6.$$arity = 1);\n        \n        Opal.def(self, '$getSceneTableResult', $KillDeathBusiness_getSceneTableResult$7 = function $$getSceneTableResult(type) {\n          var $a, $b, self = this, tableName = nil, sceneTable1 = nil, sceneTable2 = nil, result = nil, number = nil, $case = nil, result1 = nil, num1 = nil, result2 = nil, num2 = nil;\n\n          \n          self.$debug(\"getSceneTableResult type\", type);\n          tableName = self.$translate(\"KillDeathBusiness.ST.name\");\n          sceneTable1 = self.$translate(\"KillDeathBusiness.ST.table1\");\n          sceneTable2 = self.$translate(\"KillDeathBusiness.ST.table2\");\n          result = \"\";\n          number = 0;\n          $case = type;\n          if ((1)['$===']($case)) {$b = self.$get_table_by_d66_swap(sceneTable1), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else if ((2)['$===']($case)) {$b = self.$get_table_by_d66_swap(sceneTable2), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else {\n          $b = self.$get_table_by_d66_swap(sceneTable1), $a = Opal.to_ary($b), (result1 = ($a[0] == null ? nil : $a[0])), (num1 = ($a[1] == null ? nil : $a[1])), $b;\n          $b = self.$get_table_by_d66_swap(sceneTable2), $a = Opal.to_ary($b), (result2 = ($a[0] == null ? nil : $a[0])), (num2 = ($a[1] == null ? nil : $a[1])), $b;\n          result = self.$translate(\"KillDeathBusiness.ST.format\", $hash2([\"result1\", \"result2\"], {\"result1\": result1, \"result2\": result2}));\n          number = \"\" + (num1) + \",\" + (num2);};\n          return [tableName, result, number];\n        }, $KillDeathBusiness_getSceneTableResult$7.$$arity = 1);\n        \n        Opal.def(self, '$getNameTableResult', $KillDeathBusiness_getNameTableResult$8 = function $$getNameTableResult(type) {\n          var $a, $b, self = this, tableName = nil, nameTable1 = nil, nameTable2 = nil, nameTable3 = nil, result = nil, number = nil, $case = nil, result1 = nil, num1 = nil, result2 = nil, num2 = nil, result3 = nil, num3 = nil;\n\n          \n          tableName = self.$translate(\"KillDeathBusiness.NAME.name\");\n          nameTable1 = self.$translate(\"KillDeathBusiness.NAME.table1\");\n          nameTable2 = self.$translate(\"KillDeathBusiness.NAME.table2\");\n          nameTable3 = self.$translate(\"KillDeathBusiness.NAME.table3\");\n          result = \"\";\n          number = 0;\n          $case = type;\n          if ((1)['$===']($case)) {$b = self.$get_table_by_d66_swap(nameTable1), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else if ((2)['$===']($case)) {$b = self.$get_table_by_d66_swap(nameTable2), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else if ((3)['$===']($case)) {$b = self.$get_table_by_d66_swap(nameTable3), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else {\n          $b = self.$get_table_by_d66_swap(nameTable1), $a = Opal.to_ary($b), (result1 = ($a[0] == null ? nil : $a[0])), (num1 = ($a[1] == null ? nil : $a[1])), $b;\n          $b = self.$get_table_by_d66_swap(nameTable2), $a = Opal.to_ary($b), (result2 = ($a[0] == null ? nil : $a[0])), (num2 = ($a[1] == null ? nil : $a[1])), $b;\n          $b = self.$get_table_by_d66_swap(nameTable3), $a = Opal.to_ary($b), (result3 = ($a[0] == null ? nil : $a[0])), (num3 = ($a[1] == null ? nil : $a[1])), $b;\n          result = \"\" + (result1) + (result2) + (result3);\n          number = \"\" + (num1) + \",\" + (num2) + \",\" + (num3);};\n          return [tableName, result, number];\n        }, $KillDeathBusiness_getNameTableResult$8.$$arity = 1);\n        \n        Opal.def(self, '$getServiceSceneTableResult', $KillDeathBusiness_getServiceSceneTableResult$9 = function $$getServiceSceneTableResult() {\n          var self = this, table_name = nil, tables = nil, number1 = nil, scene_table = nil, number2 = nil, scene = nil, result = nil, number = nil;\n\n          \n          table_name = self.$translate(\"KillDeathBusiness.EST.name\");\n          tables = [self.$translate(\"KillDeathBusiness.EST.tables.undressing\"), self.$translate(\"KillDeathBusiness.EST.tables.violence\"), self.$translate(\"KillDeathBusiness.EST.tables.travel\"), self.$translate(\"KillDeathBusiness.EST.tables.love\"), self.$translate(\"KillDeathBusiness.EST.tables.emotion\"), self.$translate(\"KillDeathBusiness.EST.tables.other_genre\")];\n          number1 = self.randomizer.$roll_once(6);\n          scene_table = tables['$[]']($rb_minus(number1, 1));\n          number2 = self.randomizer.$roll_once(6);\n          scene = scene_table['$[]'](\"items\")['$[]']($rb_minus(number2, 1));\n          result = self.$translate(\"KillDeathBusiness.EST.format\", $hash2([\"scene\", \"chosen\"], {\"scene\": scene_table['$[]'](\"name\"), \"chosen\": scene}));\n          number = \"\" + (number1) + (number2);\n          return [table_name, result, number];\n        }, $KillDeathBusiness_getServiceSceneTableResult$9.$$arity = 0);\n        \n        Opal.def(self, '$getHairStylistAbuseTableResult', $KillDeathBusiness_getHairStylistAbuseTableResult$10 = function $$getHairStylistAbuseTableResult(type) {\n          var $a, $b, self = this, tableName = nil, hellStylistAbuseTable1 = nil, hellStylistAbuseTable2 = nil, hellStylistwtable1 = nil, hellStylistwtable2 = nil, $case = nil, result = nil, number = nil, result1 = nil, num1 = nil, result2 = nil, num2 = nil, before = nil, after = nil;\n\n          \n          tableName = self.$translate(\"KillDeathBusiness.HSAT.name\");\n          hellStylistAbuseTable1 = self.$translate(\"KillDeathBusiness.HSAT.abuse_table1\");\n          hellStylistAbuseTable2 = self.$translate(\"KillDeathBusiness.HSAT.abuse_table2\");\n          hellStylistwtable1 = self.$translate(\"KillDeathBusiness.HSAT.prefix_table\");\n          hellStylistwtable2 = self.$translate(\"KillDeathBusiness.HSAT.suffix_table\");\n          $case = type;\n          if ((1)['$===']($case)) {$b = self.$get_table_by_d66_swap(hellStylistAbuseTable1), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else if ((2)['$===']($case)) {$b = self.$get_table_by_d66_swap(hellStylistAbuseTable2), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else {\n          $b = self.$get_table_by_d66_swap(hellStylistAbuseTable1), $a = Opal.to_ary($b), (result1 = ($a[0] == null ? nil : $a[0])), (num1 = ($a[1] == null ? nil : $a[1])), $b;\n          $b = self.$get_table_by_d66_swap(hellStylistAbuseTable2), $a = Opal.to_ary($b), (result2 = ($a[0] == null ? nil : $a[0])), (num2 = ($a[1] == null ? nil : $a[1])), $b;\n          $b = self.$get_table_by_1d6(hellStylistwtable1), $a = Opal.to_ary($b), (before = ($a[0] == null ? nil : $a[0])), $b;\n          $b = self.$get_table_by_1d6(hellStylistwtable2), $a = Opal.to_ary($b), (after = ($a[0] == null ? nil : $a[0])), $b;\n          result = \"\" + (before) + (result1) + \" \" + (result2) + (after);\n          number = \"\" + (num1) + \",\" + (num2);};\n          return [tableName, result, number];\n        }, $KillDeathBusiness_getHairStylistAbuseTableResult$10.$$arity = 1);\n        \n        Opal.def(self, '$getExtraTableResult', $KillDeathBusiness_getExtraTableResult$11 = function $$getExtraTableResult(type) {\n          var $a, $b, self = this, tableName = nil, extraTable1 = nil, extraTable2 = nil, extraTable3 = nil, extraTable4 = nil, $case = nil, result = nil, number = nil, result1 = nil, num1 = nil, result2 = nil, num2 = nil, result3 = nil, num3 = nil, result4 = nil, num4 = nil;\n\n          \n          tableName = self.$translate(\"KillDeathBusiness.EXT.name\");\n          extraTable1 = [[11, self.$translate(\"KillDeathBusiness.EXT.table1.11\")], [12, self.$translate(\"KillDeathBusiness.EXT.table1.12\")], [13, self.$translate(\"KillDeathBusiness.EXT.table1.13\")], [14, self.$translate(\"KillDeathBusiness.EXT.table1.14\")], [15, self.$translate(\"KillDeathBusiness.EXT.table1.15\")], [16, self.$translate(\"KillDeathBusiness.EXT.table1.16\")], [22, self.$translate(\"KillDeathBusiness.EXT.table1.22\")], [23, self.$translate(\"KillDeathBusiness.EXT.table1.23\")], [24, self.$translate(\"KillDeathBusiness.EXT.table1.24\")], [25, self.$translate(\"KillDeathBusiness.EXT.table1.25\")], [26, self.$translate(\"KillDeathBusiness.EXT.table1.26\")], [33, self.$translate(\"KillDeathBusiness.EXT.table1.33\")], [34, self.$translate(\"KillDeathBusiness.EXT.table1.34\")], [35, self.$translate(\"KillDeathBusiness.EXT.table1.35\")], [36, self.$translate(\"KillDeathBusiness.EXT.table1.36\")], [44, self.$translate(\"KillDeathBusiness.EXT.table1.44\")], [45, self.$translate(\"KillDeathBusiness.EXT.table1.45\")], [46, self.$translate(\"KillDeathBusiness.EXT.table1.46\")], [55, self.$translate(\"KillDeathBusiness.EXT.table1.55\")], [56, $send(self, 'lambda', [], ($$12 = function(){var self = $$12.$$s == null ? this : $$12.$$s;\n\n          return self.$translate(\"KillDeathBusiness.EXT.table1.56\", $hash2([\"name\"], {\"name\": self.$getNameTableResult(0)['$[]'](1)}))}, $$12.$$s = self, $$12.$$arity = 0, $$12))], [66, self.$translate(\"KillDeathBusiness.EXT.table1.66\")]];\n          extraTable2 = self.$translate(\"KillDeathBusiness.EXT.table2\");\n          extraTable3 = self.$translate(\"KillDeathBusiness.EXT.table3\");\n          extraTable4 = self.$translate(\"KillDeathBusiness.EXT.table4\");\n          $case = type;\n          if ((1)['$===']($case)) {$b = self.$get_table_by_d66_swap(extraTable1), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else if ((2)['$===']($case)) {$b = self.$get_table_by_d66_swap(extraTable2), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else if ((3)['$===']($case)) {$b = self.$get_table_by_d66_swap(extraTable3), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else if ((4)['$===']($case)) {$b = self.$get_table_by_d66_swap(extraTable4), $a = Opal.to_ary($b), (result = ($a[0] == null ? nil : $a[0])), (number = ($a[1] == null ? nil : $a[1])), $b}\n          else {\n          $b = self.$get_table_by_d66_swap(extraTable1), $a = Opal.to_ary($b), (result1 = ($a[0] == null ? nil : $a[0])), (num1 = ($a[1] == null ? nil : $a[1])), $b;\n          $b = self.$get_table_by_d66_swap(extraTable2), $a = Opal.to_ary($b), (result2 = ($a[0] == null ? nil : $a[0])), (num2 = ($a[1] == null ? nil : $a[1])), $b;\n          $b = self.$get_table_by_d66_swap(extraTable3), $a = Opal.to_ary($b), (result3 = ($a[0] == null ? nil : $a[0])), (num3 = ($a[1] == null ? nil : $a[1])), $b;\n          $b = self.$get_table_by_d66_swap(extraTable4), $a = Opal.to_ary($b), (result4 = ($a[0] == null ? nil : $a[0])), (num4 = ($a[1] == null ? nil : $a[1])), $b;\n          result = \"\" + (result1) + (result2) + \"が\" + (result3) + (result4);\n          number = \"\" + (num1) + \",\" + (num2) + \",\" + (num3) + \",\" + (num4);};\n          return [tableName, result, number];\n        }, $KillDeathBusiness_getExtraTableResult$11.$$arity = 1);\n        Opal.const_set($nesting[0], 'ALIAS', $send($hash2([\"DeathWT\", \"RevengeWT\", \"VictoryWT\", \"PossesionWT\", \"ControlWT\", \"FlourishWT\", \"IntensifyWT\", \"HealthWT\", \"SafetyWT\", \"LongevityWT\", \"ExistWT\", \"OccultSPT\", \"FamilySPT\", \"LoveSPT\", \"JusticeSPT\", \"TrainingSPT\", \"BeamSPT\"], {\"DeathWT\": \"DWT\", \"RevengeWT\": \"RWT\", \"VictoryWT\": \"VWT\", \"PossesionWT\": \"PWT\", \"ControlWT\": \"CWT\", \"FlourishWT\": \"FWT\", \"IntensifyWT\": \"IWT\", \"HealthWT\": \"HWT\", \"SafetyWT\": \"SAWT\", \"LongevityWT\": \"LWT\", \"ExistWT\": \"EWT\", \"OccultSPT\": \"OSPT\", \"FamilySPT\": \"FSPT\", \"LoveSPT\": \"LOSPT\", \"JusticeSPT\": \"JSPT\", \"TrainingSPT\": \"TSPT\", \"BeamSPT\": \"BSPT\"}), 'transform_keys', [], \"upcase\".$to_proc()).$freeze());\n        (function(self, $parent_nesting) {\n          var $nesting = [self].concat($parent_nesting), $translate_tables$13, $translate_rtt$14;\n\n          \n          self.$private();\n          \n          Opal.def(self, '$translate_tables', $translate_tables$13 = function $$translate_tables(locale) {\n            var self = this;\n\n            return $hash2([\"HST\", \"DWT\", \"RWT\", \"VWT\", \"PWT\", \"CWT\", \"FWT\", \"IWT\", \"HWT\", \"SAWT\", \"LWT\", \"EWT\", \"OSPT\", \"FSPT\", \"LOSPT\", \"JSPT\", \"TSPT\", \"BSPT\", \"CMT\", \"ERT\", \"WKT\", \"SOUL\", \"STGT\", \"PCDT\", \"OHT\", \"PCT1\", \"PCT2\", \"PCT3\", \"PCT4\", \"PCT5\", \"PCT6\", \"PCT7\", \"ANSPT\", \"MASPT\", \"MOSPT\", \"PASPT\", \"POSPT\", \"UMSPT\"], {\"HST\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.HST\", locale), \"DWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.DWT\", locale), \"RWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.RWT\", locale), \"VWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.VWT\", locale), \"PWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.PWT\", locale), \"CWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.CWT\", locale), \"FWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.FWT\", locale), \"IWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.IWT\", locale), \"HWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.HWT\", locale), \"SAWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.SAWT\", locale), \"LWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.LWT\", locale), \"EWT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.EWT\", locale), \"OSPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.OSPT\", locale), \"FSPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.FSPT\", locale), \"LOSPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.LOSPT\", locale), \"JSPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.JSPT\", locale), \"TSPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.TSPT\", locale), \"BSPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.BSPT\", locale), \"CMT\": $$$($$($nesting, 'DiceTable'), 'D66Table').$from_i18n(\"KillDeathBusiness.table.CMT\", locale), \"ERT\": $$$($$($nesting, 'DiceTable'), 'D66Table').$from_i18n(\"KillDeathBusiness.table.ERT\", locale), \"WKT\": $$$($$($nesting, 'DiceTable'), 'D66Table').$from_i18n(\"KillDeathBusiness.table.WKT\", locale), \"SOUL\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.SOUL\", locale), \"STGT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.STGT\", locale), \"PCDT\": $$$($$($nesting, 'DiceTable'), 'D66Table').$from_i18n(\"KillDeathBusiness.table.PCDT\", locale), \"OHT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.OHT\", locale), \"PCT1\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.PCT1\", locale), \"PCT2\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.PCT2\", locale), \"PCT3\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.PCT3\", locale), \"PCT4\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.PCT4\", locale), \"PCT5\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.PCT5\", locale), \"PCT6\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.PCT6\", locale), \"PCT7\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.PCT7\", locale), \"ANSPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.ANSPT\", locale), \"MASPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.MASPT\", locale), \"MOSPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.MOSPT\", locale), \"PASPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.PASPT\", locale), \"POSPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.POSPT\", locale), \"UMSPT\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"KillDeathBusiness.table.UMSPT\", locale)})\n          }, $translate_tables$13.$$arity = 1);\n          return (Opal.def(self, '$translate_rtt', $translate_rtt$14 = function $$translate_rtt(locale) {\n            var self = this;\n\n            return $$$($$($nesting, 'DiceTable'), 'SaiFicSkillTable').$from_i18n(\"KillDeathBusiness.RTT\", locale, $hash2([\"rtt\", \"rct\"], {\"rtt\": \"SKLT\", \"rct\": \"SKLJ\"}))\n          }, $translate_rtt$14.$$arity = 1), nil) && 'translate_rtt';\n        })(Opal.get_singleton_class(self), $nesting);\n        Opal.const_set($nesting[0], 'TABLES', self.$translate_tables(\"ja_jp\"));\n        Opal.const_set($nesting[0], 'RTT', self.$translate_rtt(\"ja_jp\"));\n        self.$register_prefix(\"ST[1-2]?\", \"NAME[1-3]?\", \"EST\", \"sErviceST\", \"HSAT[1-2]?\", \"EXT[1-4]?\", \"JD\");\n        return self.$register_prefix($$($nesting, 'TABLES').$keys(), self.$register_prefix($$($nesting, 'ALIAS').$keys()), $$($nesting, 'RTT').$prefixes());\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n})(Opal);\n"],"sourceRoot":"webpack:///"}