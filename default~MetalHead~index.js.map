{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/MetalHead.js"],"names":["require","Opal","modules","self","top","$nesting","nil","$$$","$$","$module","module","$hash2","hash2","$truthy","truthy","$base","$parent_nesting","concat","$eval$1","def","expr","$kwargs","round_type","$ret_or_1","$$is_hash","ArgumentError","$new","$$smap","$eval","$$arity","get_singleton_class","$rb_minus","lhs","rhs","$rb_times","$rb_plus","$klass","klass","$send","send","$super","$RangeTable$1","$RangeTable_initialize$3","$RangeTable_fetch$4","$RangeTable_roll$6","$RangeTable_store$7","$RangeTable_coerce_to_int_range$11","$RangeTable_assert_min_sum_is_covered$12","$RangeTable_assert_max_sum_is_covered$13","$RangeTable_assert_no_gap_or_overlap_in_ranges$14","$$prototype","name","items","num_of_dice","num_of_sides","formatter","const_set","$$s","$alias_method","$freeze","$$2","table","result","$name","$sum","$content","$attr_reader","$$initialize","dice_roll_method","$iter","$$p","m","$match","$raise","$to_i","$store","$$fetch","value","$$5","item","i","$range","$$roll","randomizer","values","sum","$writer","$roll_barabara","$fetch","to_a","$private","$$store","$$8","$$9","$$10","items_with_range","sorted_items","r","c","$coerce_to_int_range","_","$min","$assert_min_sum_is_covered","$assert_max_sum_is_covered","$assert_no_gap_or_overlap_in_ranges","range","content","$$coerce_to_int_range","x","$case","$ret_or_2","$begin","$end","$class","$$assert_min_sum_is_covered","min_sum","$first","$$assert_max_sum_is_covered","max_sum","$last","$$assert_no_gap_or_overlap_in_ranges","$$15","i1","i2","r1","r2","max1","next_of_max1","$max","$rb_ge","$rb_le","$rb_gt","$rb_lt","$require","$MetalHead_eval_game_system_specific_command$1","$MetalHead_change_text$2","$MetalHead_result_2d6$5","$MetalHead_rollHit$6","$MetalHead_result_1d100$7","$MetalHead_getHitResult$8","$MetalHead_mh_crc_table$9","$register_prefix","$$eval_game_system_specific_command","command","suv","num","target","$roll_tables","$last_match","$mh_crc_table","$rollHit","$$change_text","string","$$3","$$4","$$result_2d6","_total","dice_total","_dice_list","cmp_op","_target","$critical","$fumble","$$rollHit","total","resultText","text","$roll_once","$getHitResult","$$result_1d100","$$getHitResult","total_n","_dice_n","diff","diceValue","dice1","$debug","$$mh_crc_table","header_parts","separator","numbuf","num_d1","table_point","table_damage","damage_level","result_parts","$to_s","$upcase","$join","v","$$11","d","n","$push","$$12","$to_proc"],"mappings":"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","file":"default~MetalHead~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/arithmetic_evaluator\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'ArithmeticEvaluator');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $eval$1;\n\n        return (Opal.def(self, '$eval', $eval$1 = function(expr, $kwargs) {\n          var round_type, self = this, $ret_or_1 = nil;\n\n          \n          \n          if ($kwargs == null) {\n            $kwargs = $hash2([], {});\n          } else if (!$kwargs.$$is_hash) {\n            throw Opal.ArgumentError.$new('expected kwargs');\n          };\n          \n          round_type = $kwargs.$$smap[\"round_type\"];\n          if (round_type == null) {\n            round_type = $$$($$($nesting, 'RoundType'), 'FLOOR')\n          };\n          if ($truthy(expr)) {\n          } else {\n            return 0\n          };\n          if ($truthy(($ret_or_1 = $$($nesting, 'Arithmetic').$eval(expr, round_type)))) {\n            return $ret_or_1\n          } else {\n            return 0\n          };\n        }, $eval$1.$$arity = -2), nil) && 'eval'\n      })(Opal.get_singleton_class(self), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/dice_table/range_table\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'DiceTable');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'RangeTable');\n\n        var $nesting = [self].concat($parent_nesting), $RangeTable$1, $RangeTable_initialize$3, $RangeTable_fetch$4, $RangeTable_roll$6, $RangeTable_store$7, $RangeTable_coerce_to_int_range$11, $RangeTable_assert_min_sum_is_covered$12, $RangeTable_assert_max_sum_is_covered$13, $RangeTable_assert_no_gap_or_overlap_in_ranges$14;\n\n        self.$$prototype.name = self.$$prototype.items = self.$$prototype.num_of_dice = self.$$prototype.num_of_sides = self.$$prototype.formatter = nil;\n        \n        Opal.const_set($nesting[0], 'RollResult', $send($$($nesting, 'Struct'), 'new', [\"sum\", \"values\", \"content\", \"formatted\"], ($RangeTable$1 = function(){var self = $RangeTable$1.$$s == null ? this : $RangeTable$1.$$s;\n\n        return self.$alias_method(\"to_s\", \"formatted\")}, $RangeTable$1.$$s = self, $RangeTable$1.$$arity = 0, $RangeTable$1)));\n        Opal.const_set($nesting[0], 'Item', $$($nesting, 'Struct').$new(\"range\", \"content\"));\n        Opal.const_set($nesting[0], 'DICE_ROLL_METHOD_RE', /^(\\d+)D(\\d+)$/i.$freeze());\n        Opal.const_set($nesting[0], 'DEFAULT_FORMATTER', $send(self, 'lambda', [], ($$2 = function(table, result){var self = $$2.$$s == null ? this : $$2.$$s;\n\n        \n          \n          if (table == null) {\n            table = nil;\n          };\n          \n          if (result == null) {\n            result = nil;\n          };\n          return \"\" + (table.$name()) + \"(\" + (result.$sum()) + \") ＞ \" + (result.$content());}, $$2.$$s = self, $$2.$$arity = 2, $$2)));\n        self.$attr_reader(\"name\");\n        self.$attr_reader(\"num_of_dice\");\n        self.$attr_reader(\"num_of_sides\");\n        \n        Opal.def(self, '$initialize', $RangeTable_initialize$3 = function $$initialize(name, dice_roll_method, items) {\n          var $iter = $RangeTable_initialize$3.$$p, formatter = $iter || nil, self = this, $ret_or_1 = nil, m = nil;\n\n          if ($iter) $RangeTable_initialize$3.$$p = null;\n          \n          \n          if ($iter) $RangeTable_initialize$3.$$p = null;;\n          self.name = name.$freeze();\n          self.formatter = (function() {if ($truthy(($ret_or_1 = formatter))) {\n            return $ret_or_1\n          } else {\n            return $$($nesting, 'DEFAULT_FORMATTER')\n          }; return nil; })();\n          m = $$($nesting, 'DICE_ROLL_METHOD_RE').$match(dice_roll_method);\n          if ($truthy(m)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + (self.name) + \": invalid dice roll method: \" + (dice_roll_method))\n          };\n          self.num_of_dice = m['$[]'](1).$to_i();\n          self.num_of_sides = m['$[]'](2).$to_i();\n          return self.$store(items);\n        }, $RangeTable_initialize$3.$$arity = 3);\n        \n        Opal.def(self, '$fetch', $RangeTable_fetch$4 = function $$fetch(value) {\n          var $$5, self = this, item = nil;\n\n          \n          item = $send(self.items, 'find', [], ($$5 = function(i){var self = $$5.$$s == null ? this : $$5.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return i.$range()['$include?'](value);}, $$5.$$s = self, $$5.$$arity = 1, $$5));\n          if ($truthy(item)) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": value is out of range: \" + (value))\n          };\n          return item;\n        }, $RangeTable_fetch$4.$$arity = 1);\n        \n        Opal.def(self, '$roll', $RangeTable_roll$6 = function $$roll(randomizer) {\n          var self = this, values = nil, sum = nil, result = nil, $writer = nil;\n\n          \n          values = randomizer.$roll_barabara(self.num_of_dice, self.num_of_sides);\n          sum = values.$sum();\n          result = $$($nesting, 'RollResult').$new(sum, values, self.$fetch(sum).$content());\n          \n          $writer = [self.formatter['$[]'](self, result)];\n          $send(result, 'formatted=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return result;\n        }, $RangeTable_roll$6.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$store', $RangeTable_store$7 = function $$store(items) {\n          var $$8, $$9, $$10, self = this, items_with_range = nil, sorted_items = nil;\n\n          \n          items_with_range = $send(items, 'map', [], ($$8 = function(r, c){var self = $$8.$$s == null ? this : $$8.$$s;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            if (c == null) {\n              c = nil;\n            };\n            return [self.$coerce_to_int_range(r), c];}, $$8.$$s = self, $$8.$$arity = 2, $$8));\n          sorted_items = $send(items_with_range, 'sort_by', [], ($$9 = function(r, _){var self = $$9.$$s == null ? this : $$9.$$s;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            \n            if (_ == null) {\n              _ = nil;\n            };\n            return r.$min();}, $$9.$$s = self, $$9.$$arity = 2, $$9));\n          self.$assert_min_sum_is_covered(sorted_items);\n          self.$assert_max_sum_is_covered(sorted_items);\n          self.$assert_no_gap_or_overlap_in_ranges(sorted_items);\n          self.items = $send(sorted_items, 'map', [], ($$10 = function(range, content){var self = $$10.$$s == null ? this : $$10.$$s;\n\n          \n            \n            if (range == null) {\n              range = nil;\n            };\n            \n            if (content == null) {\n              content = nil;\n            };\n            return $$($nesting, 'Item').$new(range, content.$freeze()).$freeze();}, $$10.$$s = self, $$10.$$arity = 2, $$10)).$freeze();\n          return self;\n        }, $RangeTable_store$7.$$arity = 1);\n        \n        Opal.def(self, '$coerce_to_int_range', $RangeTable_coerce_to_int_range$11 = function $$coerce_to_int_range(x) {\n          var self = this, $case = nil, $ret_or_2 = nil;\n\n          \n          $case = x;\n          if ($$($nesting, 'Integer')['$===']($case)) {return $$($nesting, 'Range').$new(x, x)}\n          else if ($$($nesting, 'Range')['$===']($case)) {if ($truthy((function() {if ($truthy(($ret_or_2 = x.$begin()['$is_a?']($$($nesting, 'Integer'))))) {\n            return x.$end()['$is_a?']($$($nesting, 'Integer'))\n          } else {\n            return $ret_or_2\n          }; return nil; })())) {\n            return x}};\n          return self.$raise($$($nesting, 'TypeError'), \"\" + (self.name) + \": \" + (x) + \" (\" + (x.$class()) + \") must be an Integer or a Range with Integers \");\n        }, $RangeTable_coerce_to_int_range$11.$$arity = 1);\n        \n        Opal.def(self, '$assert_min_sum_is_covered', $RangeTable_assert_min_sum_is_covered$12 = function $$assert_min_sum_is_covered(sorted_items) {\n          var self = this, min_sum = nil, range = nil;\n\n          \n          min_sum = self.num_of_dice;\n          range = sorted_items.$first()['$[]'](0);\n          if ($truthy(range['$include?'](min_sum))) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": min value (\" + (min_sum) + \") is not covered: \" + (range))\n          };\n          return self;\n        }, $RangeTable_assert_min_sum_is_covered$12.$$arity = 1);\n        \n        Opal.def(self, '$assert_max_sum_is_covered', $RangeTable_assert_max_sum_is_covered$13 = function $$assert_max_sum_is_covered(sorted_items) {\n          var self = this, max_sum = nil, range = nil;\n\n          \n          max_sum = $rb_times(self.num_of_dice, self.num_of_sides);\n          range = sorted_items.$last()['$[]'](0);\n          if ($truthy(range['$include?'](max_sum))) {\n          } else {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": max value (\" + (max_sum) + \") is not covered: \" + (range))\n          };\n          return self;\n        }, $RangeTable_assert_max_sum_is_covered$13.$$arity = 1);\n        return (Opal.def(self, '$assert_no_gap_or_overlap_in_ranges', $RangeTable_assert_no_gap_or_overlap_in_ranges$14 = function $$assert_no_gap_or_overlap_in_ranges(sorted_items) {\n          var $$15, self = this;\n\n          \n          $send(sorted_items, 'each_cons', [2], ($$15 = function(i1, i2){var self = $$15.$$s == null ? this : $$15.$$s, r1 = nil, r2 = nil, max1 = nil, next_of_max1 = nil;\n            if (self.name == null) self.name = nil;\n\n          \n            \n            if (i1 == null) {\n              i1 = nil;\n            };\n            \n            if (i2 == null) {\n              i2 = nil;\n            };\n            r1 = i1['$[]'](0);\n            r2 = i2['$[]'](0);\n            max1 = r1.$max();\n            next_of_max1 = $rb_plus(max1, 1);\n            if ($truthy(r2['$include?'](max1))) {\n              self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": Range overlap: \" + (r1) + \" and \" + (r2))};\n            if ($truthy(r2['$include?'](next_of_max1))) {\n              return nil\n            } else {\n              return self.$raise($$($nesting, 'RangeError'), \"\" + (self.name) + \": Range gap: \" + (r1) + \" and \" + (r2))\n            };}, $$15.$$s = self, $$15.$$arity = 2, $$15));\n          return self;\n        }, $RangeTable_assert_no_gap_or_overlap_in_ranges$14.$$arity = 1), nil) && 'assert_no_gap_or_overlap_in_ranges';\n      })($nesting[0], null, $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2, $send = Opal.send, $range = Opal.range;\n\n  \n  self.$require(\"bcdice/arithmetic_evaluator\");\n  self.$require(\"bcdice/dice_table/range_table\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'MetalHead');\n\n        var $nesting = [self].concat($parent_nesting), $MetalHead_eval_game_system_specific_command$1, $MetalHead_change_text$2, $MetalHead_result_2d6$5, $MetalHead_rollHit$6, $MetalHead_result_1d100$7, $MetalHead_getHitResult$8, $MetalHead_mh_crc_table$9;\n\n        self.$$prototype.round_type = self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"MetalHead\");\n        Opal.const_set($nesting[0], 'NAME', \"メタルヘッド\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"めたるへつと\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・アビリティロール  AR>=目標値\\n\" + \"・スキルロール      SR<=目標値(%)\\n\" + \"・命中判定ロール    HR<=目標値(%)\\n\" + \"\\n\" + \"  例）AR>=5\\n\" + \"  例）SR<=(40+25)\\n\" + \"  例）HR<=(50-10)\\n\" + \"\\n\" + \"  これらのロールで成否、絶対成功/絶対失敗、クリティカル/アクシデントを自動判定します。\\n\" + \"\\n\" + \"・クリティカルチャート  CC\\n\" + \"・アクシデントチャート  射撃・投擲用:ACL  格闘用:ACS\\n\" + \"・戦闘結果チャート      CRCsn   s=耐久レベル(SUV) n=数値\\n\" + \"\\n\" + \"  例）CRCA61 SUV=Aを対象とした数値61(62に変換される)の戦闘結果を参照する。\\n\" + \"  例）CRCM98 対物で数値98の戦闘結果を参照する。\\n\");\n        self.$register_prefix(\"AR\", \"SR\", \"HR<=\", \"CC\", \"ACT\", \"ACL\", \"ACS\", \"CRC[A-Z]\");\n        \n        Opal.def(self, '$eval_game_system_specific_command', $MetalHead_eval_game_system_specific_command$1 = function $$eval_game_system_specific_command(command) {\n          var self = this, result = nil, $case = nil, suv = nil, num = nil, target = nil;\n\n          \n          result = self.$roll_tables(command, $$($nesting, 'TABLES'));\n          if ($truthy(result)) {\n            return result};\n          $case = command;\n          if (/^CRC(\\w)(\\d+)$/['$===']($case)) {\n          suv = $$($nesting, 'Regexp').$last_match(1);\n          num = $$($nesting, 'Regexp').$last_match(2);\n          return self.$mh_crc_table(suv, num);}\n          else if (/^HR<=(.+)/['$===']($case)) {\n          target = $$($nesting, 'ArithmeticEvaluator').$eval($$($nesting, 'Regexp').$last_match(1), $hash2([\"round_type\"], {\"round_type\": self.round_type}));\n          return self.$rollHit(target);};\n          return nil;\n        }, $MetalHead_eval_game_system_specific_command$1.$$arity = 1);\n        \n        Opal.def(self, '$change_text', $MetalHead_change_text$2 = function $$change_text(string) {\n          var $$3, $$4, self = this;\n\n          \n          string = $send(string, 'gsub', [/^(S)?AR/i], ($$3 = function(){var self = $$3.$$s == null ? this : $$3.$$s;\n\n          return \"\" + ($$($nesting, 'Regexp').$last_match(1)) + \"2D6\"}, $$3.$$s = self, $$3.$$arity = 0, $$3));\n          string = $send(string, 'gsub', [/^(S)?SR/i], ($$4 = function(){var self = $$4.$$s == null ? this : $$4.$$s;\n\n          return \"\" + ($$($nesting, 'Regexp').$last_match(1)) + \"1D100\"}, $$4.$$s = self, $$4.$$arity = 0, $$4));\n          return string;\n        }, $MetalHead_change_text$2.$$arity = 1);\n        \n        Opal.def(self, '$result_2d6', $MetalHead_result_2d6$5 = function $$result_2d6(_total, dice_total, _dice_list, cmp_op, _target) {\n          var self = this;\n\n          \n          if ($truthy(cmp_op['$!='](\">=\"))) {\n            return nil};\n          if ($truthy($rb_ge(dice_total, 12))) {\n            return $$($nesting, 'Result').$critical(\"絶対成功\")\n          } else if ($truthy($rb_le(dice_total, 2))) {\n            return $$($nesting, 'Result').$fumble(\"絶対失敗\")\n          } else {\n            return nil\n          };\n        }, $MetalHead_result_2d6$5.$$arity = 5);\n        \n        Opal.def(self, '$rollHit', $MetalHead_rollHit$6 = function $$rollHit(target) {\n          var self = this, total = nil, resultText = nil, text = nil;\n\n          \n          total = self.randomizer.$roll_once(100);\n          resultText = self.$getHitResult(total, total, target);\n          text = \"\" + \"(1D100<=\" + (target) + \") ＞ \" + (total) + (resultText);\n          return text;\n        }, $MetalHead_rollHit$6.$$arity = 1);\n        \n        Opal.def(self, '$result_1d100', $MetalHead_result_1d100$7 = function $$result_1d100(_total, dice_total, cmp_op, _target) {\n          var self = this;\n\n          \n          if (cmp_op['$=='](\"<=\")) {\n          } else {\n            return nil\n          };\n          if ($truthy($rb_le(dice_total, 5))) {\n            return $$($nesting, 'Result').$critical(\"絶対成功\")\n          } else if ($truthy($rb_ge(dice_total, 96))) {\n            return $$($nesting, 'Result').$fumble(\"絶対失敗\")\n          } else {\n            return nil\n          };\n        }, $MetalHead_result_1d100$7.$$arity = 4);\n        \n        Opal.def(self, '$getHitResult', $MetalHead_getHitResult$8 = function $$getHitResult(total_n, _dice_n, diff) {\n          var self = this, diceValue = nil, dice1 = nil;\n\n          \n          diceValue = total_n['$%'](100);\n          dice1 = diceValue['$%'](10);\n          self.$debug(\"total_n\", total_n);\n          if ($truthy($rb_gt(total_n, diff))) {\n            return \" ＞ 失敗\"};\n          if (dice1['$=='](1)) {\n            return \" ＞ 成功（クリティカル）\"};\n          if (dice1['$=='](0)) {\n            return \" ＞ 失敗（アクシデント）\"};\n          return \" ＞ 成功\";\n        }, $MetalHead_getHitResult$8.$$arity = 3);\n        \n        Opal.def(self, '$mh_crc_table', $MetalHead_mh_crc_table$9 = function $$mh_crc_table(suv, num) {\n          var $$10, self = this, header_parts = nil, separator = nil, numbuf = nil, num_d1 = nil, table_point = nil, table_damage = nil, damage_level = nil, result_parts = nil;\n\n          \n          header_parts = [\"戦闘結果チャート\", num];\n          separator = \" ＞ \";\n          suv = suv.$to_s().$upcase();\n          numbuf = num.$to_i();\n          if ($truthy($rb_lt(numbuf, 1))) {\n            return $rb_plus(header_parts, [\"数値が不正です\"]).$join(separator)};\n          num_d1 = numbuf['$%'](10);\n          self.$debug(\"\" + \"num_d1[\" + (num_d1) + \"]\");\n          if (num_d1['$=='](1)) {\n            numbuf = $rb_plus(numbuf, 1)};\n          if (num_d1['$=='](0)) {\n            numbuf = $rb_minus(numbuf, 1)};\n          num_d1 = numbuf['$%'](10);\n          self.$debug(\"\" + \"num_d1[\" + (num_d1) + \"]\");\n          table_point = [nil, nil, \"腕部\", \"腕部\", \"脚部\", \"脚部\", \"胴部\", \"胴部\", \"胴部\", \"頭部\"];\n          table_damage = $hash2([\"S\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"M\"], {\"S\": [$hash2([\"N\"], {\"N\": 2}), $hash2([\"LW\"], {\"LW\": 16}), $hash2([\"MD\"], {\"MD\": 46}), $hash2([\"MW\"], {\"MW\": 56}), $hash2([\"HD\"], {\"HD\": 76}), $hash2([\"HW\"], {\"HW\": 96}), $hash2([\"MO\"], {\"MO\": 106}), $hash2([\"K\"], {\"K\": 116})], \"A\": [$hash2([\"LW\"], {\"LW\": 2}), $hash2([\"MW\"], {\"MW\": 46}), $hash2([\"HW\"], {\"HW\": 76}), $hash2([\"MO\"], {\"MO\": 96}), $hash2([\"K\"], {\"K\": 116})], \"B\": [$hash2([\"LW\"], {\"LW\": 2}), $hash2([\"MW\"], {\"MW\": 36}), $hash2([\"HW\"], {\"HW\": 66}), $hash2([\"MO\"], {\"MO\": 96}), $hash2([\"K\"], {\"K\": 106})], \"C\": [$hash2([\"LW\"], {\"LW\": 2}), $hash2([\"MW\"], {\"MW\": 26}), $hash2([\"HW\"], {\"HW\": 66}), $hash2([\"MO\"], {\"MO\": 86}), $hash2([\"K\"], {\"K\": 106})], \"D\": [$hash2([\"LW\"], {\"LW\": 2}), $hash2([\"MW\"], {\"MW\": 26}), $hash2([\"HW\"], {\"HW\": 46}), $hash2([\"MO\"], {\"MO\": 76}), $hash2([\"K\"], {\"K\": 96})], \"E\": [$hash2([\"LW\"], {\"LW\": 2}), $hash2([\"MW\"], {\"MW\": 26}), $hash2([\"HW\"], {\"HW\": 39}), $hash2([\"MO\"], {\"MO\": 54}), $hash2([\"K\"], {\"K\": 76})], \"F\": [$hash2([\"LW\"], {\"LW\": 2}), $hash2([\"MW\"], {\"MW\": 16}), $hash2([\"HW\"], {\"HW\": 39}), $hash2([\"MO\"], {\"MO\": 54}), $hash2([\"K\"], {\"K\": 66})], \"G\": [$hash2([\"LW\"], {\"LW\": 2}), $hash2([\"MW\"], {\"MW\": 6}), $hash2([\"HW\"], {\"HW\": 16}), $hash2([\"MO\"], {\"MO\": 26}), $hash2([\"K\"], {\"K\": 39})], \"M\": [$hash2([\"0\"], {\"0\": 2}), $hash2([\"1\"], {\"1\": 22}), $hash2([\"2\"], {\"2\": 42}), $hash2([\"3\"], {\"3\": 62}), $hash2([\"4\"], {\"4\": 82}), $hash2([\"5\"], {\"5\": 92}), $hash2([\"6\"], {\"6\": 102}), $hash2([\"8\"], {\"8\": 112})]});\n          if ($truthy(table_damage['$[]'](suv)['$nil?']())) {\n            return $rb_plus(header_parts, [\"\" + \"耐久レベル(SUV)[\" + (suv) + \"]\", \"耐久レベル(SUV)の値が不正です\"]).$join(separator)};\n          damage_level = \"\";\n          $send(table_damage['$[]'](suv), 'each', [], ($$10 = function(v){var self = $$10.$$s == null ? this : $$10.$$s, $$11;\n\n          \n            \n            if (v == null) {\n              v = nil;\n            };\n            return $send(v, 'each', [], ($$11 = function(d, n){var self = $$11.$$s == null ? this : $$11.$$s;\n\n            \n              \n              if (d == null) {\n                d = nil;\n              };\n              \n              if (n == null) {\n                n = nil;\n              };\n              self.$debug(\"\" + \"suv[\" + (suv) + \"] \" + (v) + \" \" + (d) + \" \" + (n));\n              if ($truthy($rb_le(n, numbuf))) {\n                return (damage_level = d)\n              } else {\n                return nil\n              };}, $$11.$$s = self, $$11.$$arity = 2, $$11));}, $$10.$$s = self, $$10.$$arity = 1, $$10));\n          result_parts = [];\n          if ($truthy(numbuf['$!='](num.$to_i()))) {\n            result_parts.$push(numbuf.$to_s())};\n          if (suv['$=='](\"M\")) {\n            result_parts.$push(\"耐物\", \"\" + \"HP[\" + (damage_level) + \"]\")\n          } else {\n            result_parts.$push(\"\" + \"耐久レベル(SUV)[\" + (suv) + \"]\", \"\" + \"部位[\" + (table_point['$[]'](num_d1)) + \"] ： 損傷種別[\" + (damage_level) + \"]\")\n          };\n          return $rb_plus(header_parts, result_parts).$join(separator);\n        }, $MetalHead_mh_crc_table$9.$$arity = 2);\n        Opal.const_set($nesting[0], 'TABLE_ROLL_RESULT_FORMATTER', $send(self, 'lambda', [], ($$12 = function(table, result){var self = $$12.$$s == null ? this : $$12.$$s;\n\n        \n          \n          if (table == null) {\n            table = nil;\n          };\n          \n          if (result == null) {\n            result = nil;\n          };\n          return [table.$name(), result.$sum(), result.$content()].$join(\" ＞ \");}, $$12.$$s = self, $$12.$$arity = 2, $$12)));\n        return Opal.const_set($nesting[0], 'TABLES', $hash2([\"CC\", \"ACL\", \"ACS\"], {\"CC\": $send($$$($$($nesting, 'DiceTable'), 'RangeTable'), 'new', [\"クリティカルチャート\", \"1D10\", [[1, \"相手は知覚系に多大なダメージを受けた。PERを1にして頭部にHWのダメージ、および心理チェック。\"], [2, \"相手の運動神経を断ち切った。DEXを1にして腕部にHWのダメージ、および心理チェック。さらに腕に持っていた武器などは落としてしまう。\"], [3, \"相手の移動手段は完全に奪われた。REFを1にして脚部にHWダメージと心理チェック。また、次回からのこちらの攻撃は必ず命中する。\"], [$range(4, 5, false), \"相手の急所に命中。激痛のため気絶した上、胴にHWダメージ。\"], [6, \"効果的な一撃。胴にHWダメージ。心理チェック。\"], [7, \"効果的な一撃。胴にMOダメージ。心理チェック。\"], [$range(8, 10, false), \"君の一撃は相手の中枢を完全に破壊した。即死である。\"]]], $$($nesting, 'TABLE_ROLL_RESULT_FORMATTER').$to_proc()), \"ACL\": $send($$$($$($nesting, 'DiceTable'), 'RangeTable'), 'new', [\"アクシデントチャート（射撃・投擲）\", \"1D10\", [[$range(1, 7, false), \"ささいなミス。特にペナルティーはない。\"], [8, \"不発、またはジャム。弾を取り出さねばならない物は次のターンは射撃できない。\"], [9, \"ささいな故障。可能なら次のターンから個別武器のスキルロールで修理を行える。\"], [10, \"武器の暴発、または爆発。頭部HWの心理効果ロール。さらに、その武器は破壊されPERとDEXのどちらか、または両方に計2ポイントのマイナスを与える。（遠隔操作の場合、射手への被害は無し）\"]]], $$($nesting, 'TABLE_ROLL_RESULT_FORMATTER').$to_proc()), \"ACS\": $send($$$($$($nesting, 'DiceTable'), 'RangeTable'), 'new', [\"アクシデントチャート（格闘）\", \"1D10\", [[$range(1, 3, false), \"足を滑らせて転倒し、起き上がるまで相手に+20の命中修正を与える。\"], [$range(4, 6, false), \"手を滑らせて、武器を落とす。素手の時は関係ない。\"], [$range(7, 9, false), \"使用武器の破壊。素手戦闘のときはMWのダメージを受ける。\"], [10, \"手を滑らせ、不幸にも武器は飛んでいき、5m以内に人がいれば誰かに刺さるか、または打撃を与えるかもしれない。ランダムに決定し、普通どおり判定を続ける。素手のときは関係ない。\"]]], $$($nesting, 'TABLE_ROLL_RESULT_FORMATTER').$to_proc())}).$freeze());\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n})(Opal);\n"],"sourceRoot":"webpack:///"}