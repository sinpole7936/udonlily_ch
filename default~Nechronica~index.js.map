{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/Nechronica.js"],"names":["require","Opal","modules","$rb_minus","lhs","rhs","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$hash2","hash2","$truthy","truthy","$base","$parent_nesting","concat","$super","$Table_from_i18n$1","$Table_initialize$2","$Table_roll$3","$Table_choice$4","$$prototype","times","sides","name","items","defs","$$from_i18n","key","locale","table","$t","$new","$$arity","def","$$initialize","type","m","$freeze","$match","$raise","$to_i","$$roll","bcdice","value","$roll_sum","$choice","$$choice","index","$rb_ge","$rb_le","$rb_gt","$rb_plus","$rb_lt","$send2","send2","$send","send","$require","$Nechronica_initialize$1","$Nechronica_replace_text$2","$Nechronica_eval_game_system_specific_command$7","$Nechronica_result_nd10$8","$Nechronica_result_nd10_text$10","$Nechronica_nechronica_check$11","$Nechronica_getHitLocation$13","randomizer","const_set","command","$iter","$$p","$yield","find_super_dispatcher","sort_add_dice","sort_barabara_dice","default_target_number","$private","$$replace_text","string","$$3","$$4","$$5","$$6","$$s","$last_match","$public","$$eval_game_system_specific_command","$ret_or_1","$roll_tables","$class","$nechronica_check","$$result_nd10","total","_dice_total","dice_list","cmp_op","target","$$9","fumble","break_all_parts","$nothing","$critical","$translate","$success","i","$failure","$size","$fumble","$$result_nd10_text","$a","text","$result_nd10","$$nechronica_check","$$12","dice_n","battleMode","modText","mod","isBattleMode","diff","dice","n_max","total_n","output","dice_str","hit_loc","$replace_text","$debug","$eval","$roll_barabara","$sort","$max","$join","$to_s","$result_nd10_text","$getHitLocation","$$getHitLocation","addDamage","$translate_tables$14","$$translate_tables","$from_i18n","get_singleton_class","$translate_tables","$register_prefix","$keys"],"mappings":"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","file":"default~Nechronica~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/dice_table/table\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'DiceTable');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Table');\n\n        var $nesting = [self].concat($parent_nesting), $Table_from_i18n$1, $Table_initialize$2, $Table_roll$3, $Table_choice$4;\n\n        self.$$prototype.times = self.$$prototype.sides = self.$$prototype.name = self.$$prototype.items = nil;\n        \n        Opal.defs(self, '$from_i18n', $Table_from_i18n$1 = function $$from_i18n(key, locale) {\n          var self = this, table = nil;\n\n          \n          table = $$($nesting, 'I18n').$t(key, $hash2([\"locale\"], {\"locale\": locale}));\n          return self.$new(table['$[]'](\"name\"), table['$[]'](\"type\"), table['$[]'](\"items\"));\n        }, $Table_from_i18n$1.$$arity = 2);\n        \n        Opal.def(self, '$initialize', $Table_initialize$2 = function $$initialize(name, type, items) {\n          var self = this, m = nil;\n\n          \n          self.name = name;\n          self.items = items.$freeze();\n          m = /(\\d+)D(\\d+)/i.$match(type);\n          if ($truthy(m)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"Unexpected table type: \" + (type))\n          };\n          self.times = m['$[]'](1).$to_i();\n          return (self.sides = m['$[]'](2).$to_i());\n        }, $Table_initialize$2.$$arity = 3);\n        \n        Opal.def(self, '$roll', $Table_roll$3 = function $$roll(bcdice) {\n          var self = this, value = nil;\n\n          \n          value = bcdice.$roll_sum(self.times, self.sides);\n          return self.$choice(value);\n        }, $Table_roll$3.$$arity = 1);\n        return (Opal.def(self, '$choice', $Table_choice$4 = function $$choice(value) {\n          var self = this, index = nil;\n\n          \n          index = $rb_minus(value, self.times);\n          return $$($nesting, 'RollResult').$new(self.name, value, self.items['$[]'](index));\n        }, $Table_choice$4.$$arity = 1), nil) && 'choice';\n      })($nesting[0], null, $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send2 = Opal.send2, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2;\n\n  \n  self.$require(\"bcdice/dice_table/table\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Nechronica');\n\n        var $nesting = [self].concat($parent_nesting), $Nechronica_initialize$1, $Nechronica_replace_text$2, $Nechronica_eval_game_system_specific_command$7, $Nechronica_result_nd10$8, $Nechronica_result_nd10_text$10, $Nechronica_nechronica_check$11, $Nechronica_getHitLocation$13;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"Nechronica\");\n        Opal.const_set($nesting[0], 'NAME', \"ネクロニカ\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"ねくろにか\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・判定　(nNC+m)\\n\" + \"　ダイス数n、修正値mで判定ロールを行います。\\n\" + \"　ダイス数が2以上の時のパーツ破損数も表示します。\\n\" + \"・攻撃判定　(nNA+m)\\n\" + \"　ダイス数n、修正値mで攻撃判定ロールを行います。\\n\" + \"　命中部位とダイス数が2以上の時のパーツ破損数も表示します。\\n\" + \"\\n\" + \"表\\n\" + \"・姉妹への未練表 nm\\n\" + \"・中立者への未練表 nmn\\n\" + \"・敵への未練表 nme\\n\");\n        \n        Opal.def(self, '$initialize', $Nechronica_initialize$1 = function $$initialize(command) {\n          var $iter = $Nechronica_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $Nechronica_initialize$1.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $Nechronica_initialize$1, false, true), 'initialize', [command], null);\n          self.sort_add_dice = true;\n          self.sort_barabara_dice = true;\n          return (self.default_target_number = 6);\n        }, $Nechronica_initialize$1.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$replace_text', $Nechronica_replace_text$2 = function $$replace_text(string) {\n          var $$3, $$4, $$5, $$6, self = this;\n\n          \n          string = $send(string, 'gsub', [/(\\d+)NC(10)?([+\\-][+\\-\\d]+)/i], ($$3 = function(){var self = $$3.$$s == null ? this : $$3.$$s;\n\n          return \"\" + ($$($nesting, 'Regexp').$last_match(1)) + \"R10\" + ($$($nesting, 'Regexp').$last_match(3)) + \"[0]\"}, $$3.$$s = self, $$3.$$arity = 0, $$3));\n          string = $send(string, 'gsub', [/(\\d+)NC(10)?/i], ($$4 = function(){var self = $$4.$$s == null ? this : $$4.$$s;\n\n          return \"\" + ($$($nesting, 'Regexp').$last_match(1)) + \"R10[0]\"}, $$4.$$s = self, $$4.$$arity = 0, $$4));\n          string = $send(string, 'gsub', [/(\\d+)NA(10)?([+\\-][+\\-\\d]+)/i], ($$5 = function(){var self = $$5.$$s == null ? this : $$5.$$s;\n\n          return \"\" + ($$($nesting, 'Regexp').$last_match(1)) + \"R10\" + ($$($nesting, 'Regexp').$last_match(3)) + \"[1]\"}, $$5.$$s = self, $$5.$$arity = 0, $$5));\n          string = $send(string, 'gsub', [/(\\d+)NA(10)?/i], ($$6 = function(){var self = $$6.$$s == null ? this : $$6.$$s;\n\n          return \"\" + ($$($nesting, 'Regexp').$last_match(1)) + \"R10[1]\"}, $$6.$$s = self, $$6.$$arity = 0, $$6));\n          return string;\n        }, $Nechronica_replace_text$2.$$arity = 1);\n        self.$public();\n        \n        Opal.def(self, '$eval_game_system_specific_command', $Nechronica_eval_game_system_specific_command$7 = function $$eval_game_system_specific_command(command) {\n          var self = this, $ret_or_1 = nil;\n\n          return (function() {if ($truthy(($ret_or_1 = self.$roll_tables(command, $$$(self.$class(), 'TABLES'))))) {\n            return $ret_or_1\n          } else {\n            return self.$nechronica_check(command)\n          }; return nil; })()\n        }, $Nechronica_eval_game_system_specific_command$7.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$result_nd10', $Nechronica_result_nd10$8 = function $$result_nd10(total, _dice_total, dice_list, cmp_op, target) {\n          var $$9, self = this, fumble = nil, break_all_parts = nil;\n\n          \n          if (target['$=='](\"?\")) {\n            return $$($nesting, 'Result').$nothing()};\n          if (cmp_op['$=='](\">=\")) {\n          } else {\n            return nil\n          };\n          if ($truthy($rb_ge(total, 11))) {\n            return $$($nesting, 'Result').$critical(self.$translate(\"Nechronica.critical\"))\n          } else if ($truthy($rb_ge(total, target))) {\n            return $$($nesting, 'Result').$success(self.$translate(\"success\"))\n          } else if ($send(dice_list, 'count', [], ($$9 = function(i){var self = $$9.$$s == null ? this : $$9.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return $rb_le(i, 1);}, $$9.$$s = self, $$9.$$arity = 1, $$9))['$=='](0)) {\n            return $$($nesting, 'Result').$failure(self.$translate(\"failure\"))\n          } else if ($truthy($rb_gt(dice_list.$size(), 1))) {\n            \n            fumble = self.$translate(\"Nechronica.fumble\");\n            break_all_parts = self.$translate(\"Nechronica.break_all_parts\");\n            return $$($nesting, 'Result').$fumble(\"\" + (fumble) + \" ＞ \" + (break_all_parts));\n          } else {\n            return $$($nesting, 'Result').$fumble(self.$translate(\"Nechronica.fumble\"))\n          };\n        }, $Nechronica_result_nd10$8.$$arity = 5);\n        \n        Opal.def(self, '$result_nd10_text', $Nechronica_result_nd10_text$10 = function $$result_nd10_text(total, dice_list, target) {\n          var $a, self = this, text = nil;\n\n          \n          text = ($a = self.$result_nd10(total, 0, dice_list, \">=\", target), ($a === nil || $a == null) ? nil : $send($a, 'text', []));\n          if ($truthy(text['$nil?']())) {\n            return \"\"\n          } else {\n            return \"\" + \" ＞ \" + (text)\n          };\n        }, $Nechronica_result_nd10_text$10.$$arity = 3);\n        \n        Opal.def(self, '$nechronica_check', $Nechronica_nechronica_check$11 = function $$nechronica_check(string) {\n          var $$12, self = this, dice_n = nil, battleMode = nil, modText = nil, mod = nil, isBattleMode = nil, diff = nil, dice = nil, n_max = nil, total_n = nil, output = nil, dice_str = nil, hit_loc = nil;\n\n          \n          string = self.$replace_text(string);\n          self.$debug(\"nechronica_check string\", string);\n          if ($truthy(/(^|\\s)S?((\\d+)[rR]10([+\\-\\d]+)?(\\[(\\d+)\\])?)(\\s|$)/i['$=~'](string))) {\n          } else {\n            return nil\n          };\n          string = $$($nesting, 'Regexp').$last_match(2);\n          dice_n = 1;\n          if ($truthy($$($nesting, 'Regexp').$last_match(3))) {\n            dice_n = $$($nesting, 'Regexp').$last_match(3).$to_i()};\n          battleMode = $$($nesting, 'Regexp').$last_match(6).$to_i();\n          modText = $$($nesting, 'Regexp').$last_match(4);\n          mod = $$($nesting, 'ArithmeticEvaluator').$eval(modText);\n          isBattleMode = battleMode['$=='](1);\n          self.$debug(\"nechronica_check string\", string);\n          self.$debug(\"isBattleMode\", isBattleMode);\n          diff = 6;\n          dice = self.randomizer.$roll_barabara(dice_n, 10).$sort();\n          n_max = dice.$max();\n          total_n = $rb_plus(n_max, mod);\n          output = \"\" + \"(\" + (string) + \") ＞ [\" + (dice.$join(\",\")) + \"]\";\n          if ($truthy($rb_lt(mod, 0))) {\n            output = $rb_plus(output, mod.$to_s())\n          } else if ($truthy($rb_gt(mod, 0))) {\n            output = $rb_plus(output, \"\" + \"+\" + (mod))};\n          $send(dice, 'map!', [], ($$12 = function(i){var self = $$12.$$s == null ? this : $$12.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return $rb_plus(i, mod);}, $$12.$$s = self, $$12.$$arity = 1, $$12));\n          dice_str = dice.$join(\",\");\n          output = $rb_plus(output, \"\" + \"  ＞ \" + (total_n) + \"[\" + (dice_str) + \"]\");\n          output = $rb_plus(output, self.$result_nd10_text(total_n, dice, diff));\n          if ($truthy(isBattleMode)) {\n            \n            hit_loc = self.$getHitLocation(total_n);\n            if ($truthy(hit_loc['$!='](\"1\"))) {\n              output = $rb_plus(output, \"\" + \" ＞ \" + (hit_loc))};};\n          return output;\n        }, $Nechronica_nechronica_check$11.$$arity = 1);\n        \n        Opal.def(self, '$getHitLocation', $Nechronica_getHitLocation$13 = function $$getHitLocation(dice) {\n          var self = this, output = nil, table = nil, index = nil, addDamage = nil;\n\n          \n          output = \"1\";\n          self.$debug(\"getHitLocation dice\", dice);\n          if ($truthy($rb_le(dice, 5))) {\n            return output};\n          table = self.$translate(\"Nechronica.hit_location.table\");\n          index = $rb_minus(dice, 6);\n          addDamage = \"\";\n          if ($truthy($rb_gt(dice, 10))) {\n            \n            index = 5;\n            addDamage = self.$translate(\"Nechronica.hit_location.additional_damage\", $hash2([\"damage\"], {\"damage\": $rb_minus(dice, 10)}));};\n          output = $rb_plus(table['$[]'](index), addDamage);\n          return output;\n        }, $Nechronica_getHitLocation$13.$$arity = 1);\n        (function(self, $parent_nesting) {\n          var $nesting = [self].concat($parent_nesting), $translate_tables$14;\n\n          \n          self.$private();\n          return (Opal.def(self, '$translate_tables', $translate_tables$14 = function $$translate_tables(locale) {\n            var self = this;\n\n            return $hash2([\"NM\", \"NMN\", \"NME\"], {\"NM\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"Nechronica.table.NM\", locale), \"NMN\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"Nechronica.table.NMN\", locale), \"NME\": $$$($$($nesting, 'DiceTable'), 'Table').$from_i18n(\"Nechronica.table.NME\", locale)})\n          }, $translate_tables$14.$$arity = 1), nil) && 'translate_tables';\n        })(Opal.get_singleton_class(self), $nesting);\n        Opal.const_set($nesting[0], 'TABLES', self.$translate_tables(\"ja_jp\"));\n        return self.$register_prefix(\"\\\\d+NC\", \"\\\\d+NA\", \"\\\\d+R10\", $$($nesting, 'TABLES').$keys());\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n})(Opal);\n"],"sourceRoot":"webpack:///"}