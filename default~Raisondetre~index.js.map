{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/Raisondetre.js"],"names":["require","Opal","$rb_times","lhs","rhs","$rb_gt","$rb_plus","$rb_lt","$rb_le","$rb_minus","$rb_ge","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$send2","send2","$truthy","truthy","$send","send","$base","$parent_nesting","concat","$super","$Raisondetre_initialize$1","$Raisondetre_eval_game_system_specific_command$2","$Raisondetre_checkRoll$3","$Raisondetre_checkDamage$7","$$prototype","randomizer","const_set","def","$$initialize","command","$iter","$$p","$yield","find_super_dispatcher","sort_add_dice","$$arity","$register_prefix","$$eval_game_system_specific_command","diceCount","$ret_or_1","choiceCount","$ret_or_2","target","$ret_or_3","$ret_or_4","armor","$ret_or_5","$ret_or_6","$last_match","$to_i","$checkRoll","$checkDamage","$$checkRoll","$$4","$$5","$$6","correction","rollCount","diceArray","diceText","diceText2","funbleArray","isFunble","dice","success","criticalCount","critical","choiceArray","choiceText","result","$roll_barabara","$sort","$join","x","$$s","i","$size","$count","$reverse","$delete","$slice","Range","$new","$inject","$$checkDamage","$$8","$$9","$$10","dice_list","resultArray","resultText","$push"],"mappings":"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","file":"default~Raisondetre~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send2 = Opal.send2, $truthy = Opal.truthy, $send = Opal.send;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Raisondetre');\n\n        var $nesting = [self].concat($parent_nesting), $Raisondetre_initialize$1, $Raisondetre_eval_game_system_specific_command$2, $Raisondetre_checkRoll$3, $Raisondetre_checkDamage$7;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"Raisondetre\");\n        Opal.const_set($nesting[0], 'NAME', \"叛逆レゾンデートル\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"はんきやくれそんてとおる\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"判定：[判定値]RD[技能][@目標値]\\n\" + \"ダメージロール：[ダイス数]DD[装甲]\\n\" + \"\\n\" + \"[]内のコマンドは省略可能。\\n\" + \"「判定値」で判定に使用するダイス数を指定。省略時は「1」。0以下も指定可。\\n\" + \"「技能」で有効なダイス数を指定。省略時は「1」。\\n\" + \"達成値はクリティカルを含めて、「最も高くなる」ように計算します。\\n\" + \"「@目標値」指定で、判定の成否を追加表示します。\\n\" + \"\\n\" + \"ダメージロールは[装甲]指定で、有効なダイス数と0の出目の数を表示します。\\n\" + \"[装甲]省略時は、ダイス結果のみ表示します。（複数の対象への攻撃時用）\\n\" + \"\\n\" + \"【書式例】\\n\" + \"・RD → 1Dで達成値を表示。\\n\" + \"・2RD1@8 → 2D（1個選択）で目標値8の判定。\\n\" + \"・-3RD → 1Dでダイスペナルティ-4の判定。\\n\" + \"・4DD2 → 4Dで装甲2のダメージロール。\\n\");\n        \n        Opal.def(self, '$initialize', $Raisondetre_initialize$1 = function $$initialize(command) {\n          var $iter = $Raisondetre_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $Raisondetre_initialize$1.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $Raisondetre_initialize$1, false, true), 'initialize', [command], null);\n          return (self.sort_add_dice = true);\n        }, $Raisondetre_initialize$1.$$arity = 1);\n        self.$register_prefix(\"(-)?(\\\\d+)?RD\", \"(-)?(\\\\d+)?DD\");\n        \n        Opal.def(self, '$eval_game_system_specific_command', $Raisondetre_eval_game_system_specific_command$2 = function $$eval_game_system_specific_command(command) {\n          var self = this, diceCount = nil, $ret_or_1 = nil, choiceCount = nil, $ret_or_2 = nil, target = nil, $ret_or_3 = nil, $ret_or_4 = nil, armor = nil, $ret_or_5 = nil, $ret_or_6 = nil;\n\n          \n          if ($truthy(command['$=~'](/(-)?(\\d+)?RD(\\d+)?(@(\\d+))?$/i))) {\n            \n            diceCount = (function() {if ($truthy(($ret_or_1 = $$($nesting, 'Regexp').$last_match(2)))) {\n              return $ret_or_1\n            } else {\n              return 1\n            }; return nil; })().$to_i();\n            if ($truthy($$($nesting, 'Regexp').$last_match(1)['$nil?']())) {\n            } else {\n              diceCount = $rb_times(diceCount, -1)\n            };\n            choiceCount = (function() {if ($truthy(($ret_or_2 = $$($nesting, 'Regexp').$last_match(3)))) {\n              return $ret_or_2\n            } else {\n              return 1\n            }; return nil; })().$to_i();\n            target = (function() {if ($truthy(($ret_or_3 = $$($nesting, 'Regexp').$last_match(5)))) {\n              return $ret_or_3\n            } else {\n              return 0\n            }; return nil; })().$to_i();\n            return self.$checkRoll(diceCount, choiceCount, target);\n          } else if ($truthy(command['$=~'](/(-)?(\\d+)?DD([1-9])?([+\\-]\\d+)?$/i))) {\n            \n            diceCount = (function() {if ($truthy(($ret_or_4 = $$($nesting, 'Regexp').$last_match(2)))) {\n              return $ret_or_4\n            } else {\n              return 1\n            }; return nil; })().$to_i();\n            if ($truthy($$($nesting, 'Regexp').$last_match(1)['$nil?']())) {\n            } else {\n              diceCount = $rb_times(diceCount, -1)\n            };\n            armor = (function() {if ($truthy(($ret_or_5 = $$($nesting, 'Regexp').$last_match(3)))) {\n              return $ret_or_5\n            } else {\n              return 0\n            }; return nil; })().$to_i();\n            if ($truthy($rb_gt(armor, 0))) {\n              \n              armor = $rb_plus(armor, (function() {if ($truthy(($ret_or_6 = $$($nesting, 'Regexp').$last_match(4)))) {\n                return $ret_or_6\n              } else {\n                return 0\n              }; return nil; })().$to_i());\n              if ($truthy($rb_lt(armor, 1))) {\n                armor = 1};\n              if ($truthy($rb_gt(armor, 9))) {\n                armor = 9};};\n            return self.$checkDamage(diceCount, armor);};\n          return nil;\n        }, $Raisondetre_eval_game_system_specific_command$2.$$arity = 1);\n        \n        Opal.def(self, '$checkRoll', $Raisondetre_checkRoll$3 = function $$checkRoll(diceCount, choiceCount, target) {\n          var $$4, $$5, $$6, self = this, correction = nil, rollCount = nil, diceArray = nil, diceText = nil, diceText2 = nil, funbleArray = nil, isFunble = nil, dice = nil, success = nil, criticalCount = nil, critical = nil, choiceArray = nil, choiceText = nil, result = nil;\n\n          \n          if ($truthy($rb_le(diceCount, 0))) {\n            \n            correction = $rb_plus(1, $rb_times(diceCount, -1));\n            rollCount = 1;\n          } else {\n            \n            correction = 0;\n            rollCount = diceCount;\n          };\n          diceArray = self.randomizer.$roll_barabara(rollCount, 10).$sort();\n          diceText = diceArray.$join(\",\");\n          $send(diceArray, 'map!', [], ($$4 = function(x){var self = $$4.$$s == null ? this : $$4.$$s;\n\n          \n            \n            if (x == null) {\n              x = nil;\n            };\n            if (x['$=='](10)) {\n              return 0\n            } else {\n              return x\n            };}, $$4.$$s = self, $$4.$$arity = 1, $$4));\n          $send(diceArray, 'map!', [], ($$5 = function(i){var self = $$5.$$s == null ? this : $$5.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return $rb_minus(i, correction);}, $$5.$$s = self, $$5.$$arity = 1, $$5));\n          diceText2 = diceArray.$sort().$join(\",\");\n          funbleArray = $send(diceArray, 'select', [], ($$6 = function(i){var self = $$6.$$s == null ? this : $$6.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return $rb_le(i, 1);}, $$6.$$s = self, $$6.$$arity = 1, $$6));\n          isFunble = $rb_ge(funbleArray.$size(), rollCount);\n          dice = 0;\n          success = 0;\n          if ($truthy(isFunble)) {\n          } else {\n            \n            criticalCount = diceArray.$count(0);\n            critical = $rb_times(criticalCount, 10);\n            choiceArray = diceArray.$reverse();\n            choiceArray.$delete(0);\n            choiceArray = choiceArray.$slice(Opal.Range.$new(0, $rb_minus(choiceCount, 1), false));\n            choiceText = choiceArray.$join(\",\");\n            dice = choiceArray.$inject(\"+\");\n            success = $rb_plus(dice, critical);\n          };\n          result = \"\" + (rollCount) + \"D10\";\n          if ($truthy($rb_gt(correction, 0))) {\n            result = $rb_plus(result, \"\" + \"-\" + (correction))};\n          result = $rb_plus(result, \"\" + \" ＞ [\" + (diceText) + \"] ＞ [\" + (diceText2) + \"] ＞ \");\n          if ($truthy(isFunble)) {\n            result = $rb_plus(result, \"達成値：0 (Funble)\")\n          } else {\n            \n            result = $rb_plus(result, \"\" + (dice) + \"[\" + (choiceText) + \"]\");\n            if ($truthy($rb_gt(critical, 0))) {\n              result = $rb_plus(result, \"\" + \"+\" + (critical))};\n            result = $rb_plus(result, \"\" + \"=達成値：\" + (success));\n            if ($truthy($rb_gt(critical, 0))) {\n              result = $rb_plus(result, \"\" + \" (\" + (criticalCount) + \"Critical)\")};\n          };\n          if ($truthy($rb_gt(target, 0))) {\n            \n            result = $rb_plus(result, \"\" + \">=\" + (target) + \" \");\n            if ($truthy($rb_ge(success, target))) {\n              result = $rb_plus(result, \"【成功】\")};\n            if ($truthy($rb_lt(success, target))) {\n              result = $rb_plus(result, \"【失敗】\")};};\n          return result;\n        }, $Raisondetre_checkRoll$3.$$arity = 3);\n        return (Opal.def(self, '$checkDamage', $Raisondetre_checkDamage$7 = function $$checkDamage(diceCount, armor) {\n          var $$8, $$9, $$10, self = this, correction = nil, rollCount = nil, dice_list = nil, diceText = nil, diceArray = nil, criticalCount = nil, diceText2 = nil, result = nil, resultArray = nil, success = nil, resultText = nil;\n\n          \n          if ($truthy($rb_le(diceCount, 0))) {\n            \n            correction = $rb_plus(1, $rb_times(diceCount, -1));\n            rollCount = 1;\n          } else {\n            \n            correction = 0;\n            rollCount = diceCount;\n          };\n          dice_list = self.randomizer.$roll_barabara(rollCount, 10).$sort();\n          diceText = dice_list.$join(\",\");\n          diceArray = $send(dice_list, 'map', [], ($$8 = function(x){var self = $$8.$$s == null ? this : $$8.$$s;\n\n          \n            \n            if (x == null) {\n              x = nil;\n            };\n            if (x['$=='](10)) {\n              return 0\n            } else {\n              return x\n            };}, $$8.$$s = self, $$8.$$arity = 1, $$8)).$sort();\n          criticalCount = diceArray.$count(0);\n          $send(diceArray, 'map!', [], ($$9 = function(i){var self = $$9.$$s == null ? this : $$9.$$s;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return $rb_minus(i, correction);}, $$9.$$s = self, $$9.$$arity = 1, $$9));\n          diceText2 = diceArray.$join(\",\");\n          result = \"\" + (rollCount) + \"D10\";\n          if ($truthy($rb_gt(correction, 0))) {\n            result = $rb_plus(result, \"\" + \"-\" + (correction))};\n          result = $rb_plus(result, \"\" + \" ＞ [\" + (diceText) + \"] ＞ [\" + (diceText2) + \"]\");\n          if ($truthy($rb_gt(armor, 0))) {\n            \n            resultArray = [];\n            success = 0;\n            $send(diceArray, 'each', [], ($$10 = function(i){var self = $$10.$$s == null ? this : $$10.$$s;\n\n            \n              \n              if (i == null) {\n                i = nil;\n              };\n              if ($truthy($rb_ge(i, armor))) {\n                \n                resultArray.$push(i);\n                return (success = $rb_plus(success, 1));\n              } else {\n                return resultArray.$push(\"×\")\n              };}, $$10.$$s = self, $$10.$$arity = 1, $$10));\n            resultText = resultArray.$join(\",\");\n            result = $rb_plus(result, \"\" + \" ＞ [\" + (resultText) + \"]>=\" + (armor) + \" 有効数：\" + (success));};\n          result = $rb_plus(result, \"\" + \"　0=\" + (criticalCount) + \"個\");\n          return result;\n        }, $Raisondetre_checkDamage$7.$$arity = 2), nil) && 'checkDamage';\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n})(Opal);\n"],"sourceRoot":"webpack:///"}