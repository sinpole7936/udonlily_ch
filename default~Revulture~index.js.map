{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/Revulture.js"],"names":["require","Opal","$rb_le","lhs","rhs","$rb_plus","$rb_gt","$rb_minus","$rb_ge","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$truthy","truthy","$hash2","hash2","$send","send","$base","$parent_nesting","concat","$super","$Revulture_eval_game_system_specific_command$1","$Revulture_roll_attack$2","$Revulture_make_command_text$5","$Revulture_calc_damage$6","$Revulture_parse_additional_damage_rules$8","$Revulture_make_additional_damage_condition$10","$$prototype","randomizer","const_set","$freeze","$register_prefix","def","$$eval_game_system_specific_command","command","m","$match","$roll_attack","$$arity","$private","$$roll_attack","dice_count_expression","border_expression","additional_damage_rules","$$3","$$4","dice_count","border","$ret_or_1","dices","critical_hit_count","hit_count","damage","message_elements","$eval","$clamp","$make_command_text","$roll_barabara","$sort","$count","dice","$$s","$calc_damage","$join","$new","r","$writer","to_a","$$make_command_text","$$calc_damage","$$7","$parse_additional_damage_rules","rule","$call","$$parse_additional_damage_rules","source","$$9","$scan","matched","$make_additional_damage_condition","$to_i","$$make_additional_damage_condition","comparer","comparing_target","$case","$$11","$$12"],"mappings":"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","file":"default~Revulture~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2, $send = Opal.send;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Revulture');\n\n        var $nesting = [self].concat($parent_nesting), $Revulture_eval_game_system_specific_command$1, $Revulture_roll_attack$2, $Revulture_make_command_text$5, $Revulture_calc_damage$6, $Revulture_parse_additional_damage_rules$8, $Revulture_make_additional_damage_condition$10;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"Revulture\");\n        Opal.const_set($nesting[0], 'NAME', \"光砕のリヴァルチャー\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"こうさいのりうあるちやあ\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"■アタック判定（ xAT, xATK, xATTACK ）\\n\" + \"x: ダイス数（加算 + と除算 / を使用可能）\\n\" + \"例） 3AT, 4ATK, 5+6ATTACK, 15/2AT\\n\" + \"\\n\" + \"□アタック判定　目標値つき（ xAT<=y, xATK<=y, xATTACK<=y ）\\n\" + \"x: ダイス数（加算 + と除算 / を使用可能）\\n\" + \"y: 目標値（ 1 以上 6 以下。加算 + を使用可能）\\n\" + \"例） 3AT<=4, 3AT<=2+1\\n\" + \"\\n\" + \"□アタック判定　目標値＆追加ダメージつき（ xAT<=y[>=a:+b], xATK<=y[>=a:+b], xATTACK<=y[z] ）\\n\" + \"x: ダイス数（加算 + と除算 / を使用可能）\\n\" + \"y: 目標値（ 1 以上 6 以下。加算 + を使用可能）\\n\" + \"z: 追加ダメージの規則（詳細は後述）（※複数同時に指定可能）\\n\" + \"\\n\" + \"▽追加ダメージの規則 [a:+b]\\n\" + \"a: ヒット数が a なら\\n\" + \"　=a　（ヒット数が a に等しい）\\n\" + \"　>=a　（ヒット数が a 以上）\\n\" + \"b: ダメージを b 点追加\\n\" + \"\\n\" + \"例） 3AT<=4[>=2:+3] #ルールブックp056「グレングラントAR」\\n\" + \"例） 2AT<=4[=1:+5][>=2:+8] #ルールブックp067「ファーボル・ドラゴンブレス」\\n\");\n        Opal.const_set($nesting[0], 'ATTACK_ROLL_REG', /^(\\d+([+\\/]\\d+)*)?AT(TACK|K)?(<=([1-6](\\+\\d)*))?((\\[>?=\\d+:\\+\\d+\\])+)?/i.$freeze());\n        self.$register_prefix(\"\\\\d+([+\\\\/]\\\\d+)*AT\");\n        \n        Opal.def(self, '$eval_game_system_specific_command', $Revulture_eval_game_system_specific_command$1 = function $$eval_game_system_specific_command(command) {\n          var self = this, m = nil;\n\n          if ($truthy((m = $$($nesting, 'ATTACK_ROLL_REG').$match(command)))) {\n            return self.$roll_attack(m['$[]'](1), m['$[]'](5), m['$[]'](7))\n          } else {\n            return nil\n          }\n        }, $Revulture_eval_game_system_specific_command$1.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$roll_attack', $Revulture_roll_attack$2 = function $$roll_attack(dice_count_expression, border_expression, additional_damage_rules) {\n          var $$3, $$4, self = this, dice_count = nil, border = nil, command = nil, $ret_or_1 = nil, dices = nil, critical_hit_count = nil, hit_count = nil, damage = nil, message_elements = nil;\n\n          \n          dice_count = $$($nesting, 'Arithmetic').$eval(dice_count_expression, $hash2([\"round_type\"], {\"round_type\": $$$($$($nesting, 'RoundType'), 'FLOOR')}));\n          if ($truthy(border_expression)) {\n            border = $$($nesting, 'Arithmetic').$eval(border_expression, $hash2([\"round_type\"], {\"round_type\": $$$($$($nesting, 'RoundType'), 'FLOOR')})).$clamp(1, 6)};\n          command = self.$make_command_text(dice_count, border, additional_damage_rules);\n          if ($truthy($rb_le(dice_count, 0))) {\n            return \"\" + (command) + \" ＞ ダイス数が 0 です\"\n          } else if ($truthy((function() {if ($truthy(($ret_or_1 = border['$nil?']()))) {\n            return additional_damage_rules\n          } else {\n            return $ret_or_1\n          }; return nil; })())) {\n            return \"\" + (command) + \" ＞ 目標値が指定されていないため、追加ダメージを算出できません\"};\n          dices = self.randomizer.$roll_barabara(dice_count, 6).$sort();\n          critical_hit_count = dices.$count(1);\n          if ($truthy(border)) {\n            hit_count = $rb_plus($send(dices, 'count', [], ($$3 = function(dice){var self = $$3.$$s == null ? this : $$3.$$s;\n\n            \n              \n              if (dice == null) {\n                dice = nil;\n              };\n              return $rb_le(dice, border);}, $$3.$$s = self, $$3.$$arity = 1, $$3)), critical_hit_count)};\n          damage = self.$calc_damage(hit_count, additional_damage_rules);\n          message_elements = [];\n          message_elements['$<<'](command);\n          message_elements['$<<'](dices.$join(\",\"));\n          if ($truthy($rb_gt(critical_hit_count, 0))) {\n            message_elements['$<<'](\"\" + \"クリティカル \" + (critical_hit_count))};\n          if ($truthy(hit_count)) {\n            message_elements['$<<'](\"\" + \"ヒット数 \" + (hit_count))};\n          if ($truthy(damage)) {\n            message_elements['$<<'](\"\" + \"ダメージ \" + (damage))};\n          return $send($$($nesting, 'Result').$new(message_elements.$join(\" ＞ \")), 'tap', [], ($$4 = function(r){var self = $$4.$$s == null ? this : $$4.$$s, $writer = nil;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            if ($truthy(hit_count)) {\n              \n              $writer = [$rb_gt(hit_count, 0)];\n              $send(r, 'condition=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            \n            $writer = [$rb_gt(critical_hit_count, 0)];\n            $send(r, 'critical=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;}, $$4.$$s = self, $$4.$$arity = 1, $$4));\n        }, $Revulture_roll_attack$2.$$arity = 3);\n        \n        Opal.def(self, '$make_command_text', $Revulture_make_command_text$5 = function $$make_command_text(dice_count, border, additional_damage_rules) {\n          var self = this, command = nil;\n\n          \n          command = \"\" + (dice_count) + \"attack\";\n          if ($truthy(border)) {\n            command = $rb_plus(command, \"\" + \"<=\" + (border))};\n          if ($truthy(additional_damage_rules)) {\n            command = $rb_plus(command, additional_damage_rules)};\n          return \"\" + \"(\" + (command) + \")\";\n        }, $Revulture_make_command_text$5.$$arity = 3);\n        \n        Opal.def(self, '$calc_damage', $Revulture_calc_damage$6 = function $$calc_damage(hit_count, additional_damage_rules) {\n          var $$7, self = this, damage = nil;\n\n          \n          if ($truthy(additional_damage_rules)) {\n          } else {\n            return nil\n          };\n          damage = hit_count;\n          $send(self.$parse_additional_damage_rules(additional_damage_rules), 'each', [], ($$7 = function(rule){var self = $$7.$$s == null ? this : $$7.$$s;\n\n          \n            \n            if (rule == null) {\n              rule = nil;\n            };\n            if ($truthy(rule['$[]'](\"condition\").$call(hit_count))) {\n              return (damage = $rb_plus(damage, rule['$[]'](\"additinal_damage\")))\n            } else {\n              return nil\n            };}, $$7.$$s = self, $$7.$$arity = 1, $$7));\n          return damage;\n        }, $Revulture_calc_damage$6.$$arity = 2);\n        \n        Opal.def(self, '$parse_additional_damage_rules', $Revulture_parse_additional_damage_rules$8 = function $$parse_additional_damage_rules(source) {\n          var $$9, self = this;\n\n          return $send(source.$scan(/\\[(>?=)(\\d+):\\+(\\d+)\\]/), 'map', [], ($$9 = function(matched){var self = $$9.$$s == null ? this : $$9.$$s;\n\n          \n            \n            if (matched == null) {\n              matched = nil;\n            };\n            return $hash2([\"condition\", \"additinal_damage\"], {\"condition\": self.$make_additional_damage_condition(matched['$[]'](0), matched['$[]'](1).$to_i()), \"additinal_damage\": matched['$[]'](2).$to_i()});}, $$9.$$s = self, $$9.$$arity = 1, $$9))\n        }, $Revulture_parse_additional_damage_rules$8.$$arity = 1);\n        return (Opal.def(self, '$make_additional_damage_condition', $Revulture_make_additional_damage_condition$10 = function $$make_additional_damage_condition(comparer, comparing_target) {\n          var self = this, $case = nil;\n\n          return (function() {$case = comparer;\n          if (\"=\"['$===']($case)) {return $send(self, 'lambda', [], ($$11 = function(hit_count){var self = $$11.$$s == null ? this : $$11.$$s;\n\n          \n            \n            if (hit_count == null) {\n              hit_count = nil;\n            };\n            return hit_count['$=='](comparing_target);}, $$11.$$s = self, $$11.$$arity = 1, $$11))}\n          else if (\">=\"['$===']($case)) {return $send(self, 'lambda', [], ($$12 = function(hit_count){var self = $$12.$$s == null ? this : $$12.$$s;\n\n          \n            \n            if (hit_count == null) {\n              hit_count = nil;\n            };\n            return $rb_ge(hit_count, comparing_target);}, $$12.$$s = self, $$12.$$arity = 1, $$12))}\n          else { return nil }})()\n        }, $Revulture_make_additional_damage_condition$10.$$arity = 2), nil) && 'make_additional_damage_condition';\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n})(Opal);\n"],"sourceRoot":"webpack:///"}