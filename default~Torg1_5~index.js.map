{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/Torg1_5.js"],"names":["require","Opal","modules","$rb_gt","lhs","rhs","$rb_plus","$rb_lt","$rb_minus","$rb_le","$rb_divide","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$send","send","$truthy","truthy","$base","$parent_nesting","concat","$super","$Torg_replace_text$1","$Torg_torg_check$3","$Torg_torg_dice$4","$Torg_eval_game_system_specific_command$5","$Torg_get_torg_success_level$6","$Torg_get_torg_interaction_result_intimidate_test$7","$Torg_get_torg_interaction_result_taunt_trick$8","$Torg_get_torg_interaction_result_maneuver$9","$Torg_get_torg_table_result$10","$Torg_get_torg_damage_ords$12","$Torg_get_torg_damage_posibility$13","$Torg_get_torg_damage$14","$Torg_get_torg_bonus_text$15","$Torg_getTorgBonusOutputTextWhenModDefined$16","$Torg_get_torg_bonus$17","$$prototype","randomizer","const_set","$register_prefix","def","$$replace_text","string","$$2","$gsub","$$s","$last_match","$$arity","$$torg_check","$a","$b","mod","skilled","unskilled","dice_str","sk_bonus","output","$debug","$eval","$to_i","$torg_dice","to_ary","$get_torg_bonus","$to_s","$$torg_dice","isSkilledCritical","isCritical","dice_n","$roll_once","$$eval_game_system_specific_command","command","result","ttype","value","type","num","$case","$upcase","$replace_text","$torg_check","$get_torg_success_level","$get_torg_interaction_result_intimidate_test","$get_torg_interaction_result_taunt_trick","$get_torg_interaction_result_maneuver","$get_torg_damage_ords","$get_torg_damage_posibility","$get_torg_bonus_text","$$get_torg_success_level","success_table","$get_torg_table_result","$$get_torg_interaction_result_intimidate_test","interaction_results_table","$$get_torg_interaction_result_taunt_trick","$$get_torg_interaction_result_maneuver","$$get_torg_table_result","table","$$11","$brk","new_brk","item","item_index","brk","$$brk","err","$v","$$get_torg_damage_ords","damage_table_ords","$get_torg_damage","$$get_torg_damage_posibility","damage_table_posibility","$$get_torg_damage","maxDamage","maxDamageString","damage_table","table_max_value","over_kill_damage","$length","$$get_torg_bonus_text","val_arr","resultValue","$split","$shift","$join","$getTorgBonusOutputTextWhenModDefined","$$getTorgBonusOutputTextWhenModDefined","$$get_torg_bonus","bonus_table","bonus","over_value_bonus","$rb_times","$require","$Torg1_5_get_torg_success_level$1","$Torg1_5_get_torg_interaction_result_intimidate_test$2","$Torg1_5_get_torg_interaction_result_taunt_trick$3","$Torg1_5_get_torg_interaction_result_maneuver$4","$Torg1_5_get_torg_damage_ords$5","$Torg1_5_get_torg_damage_posibility$6","$Torg1_5_get_torg_damage$7","$prefixes","max_damage","max_shock","over_kill_value","over_kill_shock"],"mappings":"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","file":"default~Torg1_5~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\nOpal.modules[\"bcdice/game_system/Torg\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Torg');\n\n        var $nesting = [self].concat($parent_nesting), $Torg_replace_text$1, $Torg_torg_check$3, $Torg_torg_dice$4, $Torg_eval_game_system_specific_command$5, $Torg_get_torg_success_level$6, $Torg_get_torg_interaction_result_intimidate_test$7, $Torg_get_torg_interaction_result_taunt_trick$8, $Torg_get_torg_interaction_result_maneuver$9, $Torg_get_torg_table_result$10, $Torg_get_torg_damage_ords$12, $Torg_get_torg_damage_posibility$13, $Torg_get_torg_damage$14, $Torg_get_torg_bonus_text$15, $Torg_getTorgBonusOutputTextWhenModDefined$16, $Torg_get_torg_bonus$17;\n\n        self.$$prototype.randomizer = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"Torg\");\n        Opal.const_set($nesting[0], 'NAME', \"トーグ\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"とおく\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・判定　(TGm)\\n\" + \"　TORG専用の判定コマンドです。\\n\" + \"　\\\"TG(技能基本値)\\\"でロールします。Rコマンドに読替されます。\\n\" + \"　振り足しを自動で行い、20の出目が出たときには技能無し値も並記します。\\n\" + \"・各種表　\\\"(表コマンド)(数値)\\\"で振ります。\\n\" + \"　・一般結果表 成功度出力「RTx or RESULTx」\\n\" + \"　・威圧/威嚇 対人行為結果表「ITx or INTIMIDATEx or TESTx」\\n\" + \"　・挑発/トリック 対人行為結果表「TTx or TAUNTx or TRICKx or CTx」\\n\" + \"　・間合い 対人行為結果表「MTx or MANEUVERx」\\n\" + \"　・オーズ（一般人）ダメージ　「ODTx or ORDSx or ODAMAGEx」\\n\" + \"　・ポシビリティー能力者ダメージ「DTx or DAMAGEx」\\n\" + \"　・ボーナス表「BTx+y or BONUSx+y or TOTALx+y」 xは数値, yは技能基本値\\n\");\n        self.$register_prefix(\"TG\", \"1R20\", \"RT\", \"Result\", \"IT\", \"Intimidate\", \"Test\", \"TT\", \"Taunt\", \"Trick\", \"CT\", \"MT\", \"Maneuver\", \"ODT\", \"ords\", \"odamage\", \"DT\", \"damage\", \"BT\", \"bonus\", \"total\");\n        \n        Opal.def(self, '$replace_text', $Torg_replace_text$1 = function $$replace_text(string) {\n          var $$2, self = this;\n\n          \n          string = string.$gsub(/Result/i, \"RT\");\n          string = string.$gsub(/(Intimidate|Test)/i, \"IT\");\n          string = string.$gsub(/(Taunt|Trick|CT)/i, \"TT\");\n          string = string.$gsub(/Maneuver/i, \"MT\");\n          string = string.$gsub(/(ords|odamage)/i, \"ODT\");\n          string = string.$gsub(/damage/i, \"DT\");\n          string = string.$gsub(/(bonus|total)/i, \"BT\");\n          string = $send(string, 'gsub', [/TG(\\d+)/i], ($$2 = function(){var self = $$2.$$s == null ? this : $$2.$$s;\n\n          return \"\" + \"1R20+\" + ($$($nesting, 'Regexp').$last_match(1))}, $$2.$$s = self, $$2.$$arity = 0, $$2));\n          string = string.$gsub(/TG/i, \"1R20\");\n          return string;\n        }, $Torg_replace_text$1.$$arity = 1);\n        \n        Opal.def(self, '$torg_check', $Torg_torg_check$3 = function $$torg_check(string) {\n          var $a, $b, self = this, mod = nil, skilled = nil, unskilled = nil, dice_str = nil, sk_bonus = nil, output = nil;\n\n          \n          if ($truthy(/(^|\\s)S?(1R20([+-]\\d+)*)(\\s|$)/i['$=~'](string))) {\n          } else {\n            return nil\n          };\n          string = $$($nesting, 'Regexp').$last_match(2);\n          mod = $$($nesting, 'Regexp').$last_match(3);\n          self.$debug(mod);\n          if ($truthy(mod)) {\n            mod = $$($nesting, 'ArithmeticEvaluator').$eval(mod)};\n          self.$debug(mod);\n          mod = mod.$to_i();\n          $b = self.$torg_dice(), $a = Opal.to_ary($b), (skilled = ($a[0] == null ? nil : $a[0])), (unskilled = ($a[1] == null ? nil : $a[1])), (dice_str = ($a[2] == null ? nil : $a[2])), $b;\n          sk_bonus = self.$get_torg_bonus(skilled);\n          if ($truthy(mod)) {\n            if ($truthy($rb_gt(mod, 0))) {\n              output = \"\" + (sk_bonus) + \"[\" + (dice_str) + \"]+\" + (mod)\n            } else {\n              output = \"\" + (sk_bonus) + \"[\" + (dice_str) + \"]\" + (mod)\n            }\n          } else {\n            output = \"\" + (sk_bonus) + \"[\" + (dice_str) + \"]\"\n          };\n          output = $rb_plus(output, $rb_plus(\" ＞ \", $rb_plus(sk_bonus, mod).$to_s()));\n          if ($truthy(skilled['$!='](unskilled))) {\n            output = $rb_plus(output, $rb_plus($rb_plus(\"(技能無\", $rb_plus(self.$get_torg_bonus(unskilled), mod).$to_s()), \")\"))};\n          output = \"\" + \"(\" + (string) + \") ＞ \" + (output);\n          return output;\n        }, $Torg_torg_check$3.$$arity = 1);\n        \n        Opal.def(self, '$torg_dice', $Torg_torg_dice$4 = function $$torg_dice() {\n          var $a, self = this, isSkilledCritical = nil, isCritical = nil, skilled = nil, unskilled = nil, dice_str = nil, dice_n = nil;\n\n          \n          isSkilledCritical = true;\n          isCritical = true;\n          skilled = 0;\n          unskilled = 0;\n          dice_str = \"\";\n          while ($truthy(isSkilledCritical)) {\n            \n            dice_n = self.randomizer.$roll_once(20);\n            skilled = $rb_plus(skilled, dice_n);\n            if ($truthy(isCritical)) {\n              unskilled = $rb_plus(unskilled, dice_n)};\n            if ($truthy(dice_str['$empty?']())) {\n            } else {\n              dice_str = $rb_plus(dice_str, \",\")\n            };\n            dice_str = $rb_plus(dice_str, dice_n.$to_s());\n            if (dice_n['$=='](20)) {\n              isCritical = false\n            } else if ($truthy(dice_n['$!='](10))) {\n              \n              isSkilledCritical = false;\n              isCritical = false;};\n          };\n          return [skilled, unskilled, dice_str];\n        }, $Torg_torg_dice$4.$$arity = 0);\n        \n        Opal.def(self, '$eval_game_system_specific_command', $Torg_eval_game_system_specific_command$5 = function $$eval_game_system_specific_command(command) {\n          var $a, $b, self = this, string = nil, result = nil, output = nil, ttype = nil, value = nil, type = nil, num = nil, $case = nil;\n\n          \n          string = command.$upcase();\n          string = self.$replace_text(string);\n          if ($truthy((result = self.$torg_check(string)))) {\n            return result};\n          output = \"1\";\n          ttype = \"\";\n          value = 0;\n          if ($truthy(/([RITMDB]T)(\\d+([+\\-]\\d+)*)/i['$=~'](string))) {\n          } else {\n            return nil\n          };\n          type = $$($nesting, 'Regexp').$last_match(1);\n          num = $$($nesting, 'Regexp').$last_match(2);\n          $case = type;\n          if (\"RT\"['$===']($case)) {\n          value = $$($nesting, 'ArithmeticEvaluator').$eval(num);\n          output = self.$get_torg_success_level(value);\n          ttype = \"一般結果\";}\n          else if (\"IT\"['$===']($case)) {\n          value = $$($nesting, 'ArithmeticEvaluator').$eval(num);\n          output = self.$get_torg_interaction_result_intimidate_test(value);\n          ttype = \"威圧/威嚇\";}\n          else if (\"TT\"['$===']($case)) {\n          value = $$($nesting, 'ArithmeticEvaluator').$eval(num);\n          output = self.$get_torg_interaction_result_taunt_trick(value);\n          ttype = \"挑発/トリック\";}\n          else if (\"MT\"['$===']($case)) {\n          value = $$($nesting, 'ArithmeticEvaluator').$eval(num);\n          output = self.$get_torg_interaction_result_maneuver(value);\n          ttype = \"間合い\";}\n          else if (\"DT\"['$===']($case)) {\n          value = $$($nesting, 'ArithmeticEvaluator').$eval(num);\n          if ($truthy(string['$=~'](/ODT/i))) {\n            \n            output = self.$get_torg_damage_ords(value);\n            ttype = \"オーズダメージ\";\n          } else {\n            \n            output = self.$get_torg_damage_posibility(value);\n            ttype = \"ポシビリティ能力者ダメージ\";\n          };}\n          else if (\"BT\"['$===']($case)) {\n          $b = self.$get_torg_bonus_text(num), $a = Opal.to_ary($b), (output = ($a[0] == null ? nil : $a[0])), (value = ($a[1] == null ? nil : $a[1])), $b;\n          ttype = \"ボーナス\";};\n          if ($truthy(ttype['$!='](\"\"))) {\n            output = \"\" + (ttype) + \"表[\" + (value) + \"] ＞ \" + (output)};\n          return output;\n        }, $Torg_eval_game_system_specific_command$5.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_success_level', $Torg_get_torg_success_level$6 = function $$get_torg_success_level(value) {\n          var self = this, success_table = nil;\n\n          \n          success_table = [[0, \"ぎりぎり\"], [1, \"ふつう\"], [3, \"まあよい\"], [7, \"かなりよい\"], [12, \"すごい\"]];\n          return self.$get_torg_table_result(value, success_table);\n        }, $Torg_get_torg_success_level$6.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_interaction_result_intimidate_test', $Torg_get_torg_interaction_result_intimidate_test$7 = function $$get_torg_interaction_result_intimidate_test(value) {\n          var self = this, interaction_results_table = nil;\n\n          \n          interaction_results_table = [[0, \"技能なし\"], [5, \"萎縮\"], [10, \"逆転負け\"], [15, \"モラル崩壊\"], [17, \"プレイヤーズコール\"]];\n          return self.$get_torg_table_result(value, interaction_results_table);\n        }, $Torg_get_torg_interaction_result_intimidate_test$7.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_interaction_result_taunt_trick', $Torg_get_torg_interaction_result_taunt_trick$8 = function $$get_torg_interaction_result_taunt_trick(value) {\n          var self = this, interaction_results_table = nil;\n\n          \n          interaction_results_table = [[0, \"技能なし\"], [5, \"萎縮\"], [10, \"逆転負け\"], [15, \"高揚／逆転負け\"], [17, \"プレイヤーズコール\"]];\n          return self.$get_torg_table_result(value, interaction_results_table);\n        }, $Torg_get_torg_interaction_result_taunt_trick$8.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_interaction_result_maneuver', $Torg_get_torg_interaction_result_maneuver$9 = function $$get_torg_interaction_result_maneuver(value) {\n          var self = this, interaction_results_table = nil;\n\n          \n          interaction_results_table = [[0, \"技能なし\"], [5, \"疲労\"], [10, \"萎縮／疲労\"], [15, \"逆転負け／疲労\"], [17, \"プレイヤーズコール\"]];\n          return self.$get_torg_table_result(value, interaction_results_table);\n        }, $Torg_get_torg_interaction_result_maneuver$9.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_table_result', $Torg_get_torg_table_result$10 = function $$get_torg_table_result(value, table) {\n          var $$11, self = this, output = nil;\n\n          \n          output = \"1\";\n          (function(){var $brk = Opal.new_brk(); try {return $send(table, 'each', [], ($$11 = function(item){var self = $$11.$$s == null ? this : $$11.$$s, item_index = nil;\n\n          \n            \n            if (item == null) {\n              item = nil;\n            };\n            item_index = item['$[]'](0);\n            if ($truthy($rb_gt(item_index, value))) {\n              \n              Opal.brk(nil, $brk)};\n            return (output = item['$[]'](1));}, $$11.$$s = self, $$11.$$brk = $brk, $$11.$$arity = 1, $$11))\n          } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n          return output;\n        }, $Torg_get_torg_table_result$10.$$arity = 2);\n        \n        Opal.def(self, '$get_torg_damage_ords', $Torg_get_torg_damage_ords$12 = function $$get_torg_damage_ords(value) {\n          var self = this, damage_table_ords = nil;\n\n          \n          damage_table_ords = [[0, \"1\"], [1, \"O1\"], [2, \"K1\"], [3, \"O2\"], [4, \"O3\"], [5, \"K3\"], [6, \"転倒 K／O4\"], [7, \"転倒 K／O5\"], [8, \"1レベル負傷  K／O7\"], [9, \"1レベル負傷  K／O9\"], [10, \"1レベル負傷  K／O10\"], [11, \"2レベル負傷  K／O11\"], [12, \"2レベル負傷  KO12\"], [13, \"3レベル負傷  KO13\"], [14, \"3レベル負傷  KO14\"], [15, \"4レベル負傷  KO15\"]];\n          return self.$get_torg_damage(value, 4, \"レベル負傷  KO15\", damage_table_ords);\n        }, $Torg_get_torg_damage_ords$12.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_damage_posibility', $Torg_get_torg_damage_posibility$13 = function $$get_torg_damage_posibility(value) {\n          var self = this, damage_table_posibility = nil;\n\n          \n          damage_table_posibility = [[0, \"1\"], [1, \"1\"], [2, \"O1\"], [3, \"K2\"], [4, \"2\"], [5, \"O2\"], [6, \"転倒 O2\"], [7, \"転倒 K2\"], [8, \"転倒 K2\"], [9, \"1レベル負傷  K3\"], [10, \"1レベル負傷  K4\"], [11, \"1レベル負傷  O4\"], [12, \"1レベル負傷  K5\"], [13, \"2レベル負傷  O4\"], [14, \"2レベル負傷  KO5\"], [15, \"3レベル負傷  KO5\"]];\n          return self.$get_torg_damage(value, 3, \"レベル負傷  KO5\", damage_table_posibility);\n        }, $Torg_get_torg_damage_posibility$13.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_damage', $Torg_get_torg_damage$14 = function $$get_torg_damage(value, maxDamage, maxDamageString, damage_table) {\n          var self = this, table_max_value = nil, over_kill_damage = nil;\n\n          \n          if ($truthy($rb_lt(value, 0))) {\n            return \"1\"};\n          table_max_value = $rb_minus(damage_table.$length(), 1);\n          if ($truthy($rb_le(value, table_max_value))) {\n            return self.$get_torg_table_result(value, damage_table)};\n          over_kill_damage = $rb_divide($rb_minus(value, table_max_value), 2).$to_i();\n          return $rb_plus($rb_plus(\"\", $rb_plus(over_kill_damage, maxDamage).$to_s()), maxDamageString);\n        }, $Torg_get_torg_damage$14.$$arity = 4);\n        \n        Opal.def(self, '$get_torg_bonus_text', $Torg_get_torg_bonus_text$15 = function $$get_torg_bonus_text(num) {\n          var self = this, val_arr = nil, value = nil, mod = nil, resultValue = nil, output = nil;\n\n          \n          val_arr = num.$split(/\\+/);\n          value = val_arr.$shift().$to_i();\n          mod = $$($nesting, 'ArithmeticEvaluator').$eval(val_arr.$join(\"+\"));\n          resultValue = self.$get_torg_bonus(value);\n          self.$debug(\"TORG BT resultValue\", resultValue);\n          self.$debug(\"TORG BT mod\", mod);\n          if (mod['$=='](0)) {\n            output = resultValue.$to_s()\n          } else {\n            \n            output = self.$getTorgBonusOutputTextWhenModDefined(value, resultValue, mod);\n            value = \"\" + (value) + \"+\" + (mod);\n          };\n          return [output, value];\n        }, $Torg_get_torg_bonus_text$15.$$arity = 1);\n        \n        Opal.def(self, '$getTorgBonusOutputTextWhenModDefined', $Torg_getTorgBonusOutputTextWhenModDefined$16 = function $$getTorgBonusOutputTextWhenModDefined(value, resultValue, mod) {\n          var self = this;\n\n          \n          self.$debug(\"getTorgBonusOutputTextWhenModDefined value, mod\", value, mod);\n          if ($truthy($rb_gt(mod, 0))) {\n            return \"\" + (resultValue) + \"[\" + (value) + \"]+\" + (mod) + \" ＞ \" + ($rb_plus(resultValue, mod))\n          } else {\n            \n            self.$debug(\"resultValue\", resultValue);\n            self.$debug(\"mod\", mod);\n            return \"\" + (resultValue) + \"[\" + (value) + \"]\" + (mod) + \" ＞ \" + ($rb_plus(resultValue, mod));\n          };\n        }, $Torg_getTorgBonusOutputTextWhenModDefined$16.$$arity = 3);\n        return (Opal.def(self, '$get_torg_bonus', $Torg_get_torg_bonus$17 = function $$get_torg_bonus(value) {\n          var self = this, bonus_table = nil, bonus = nil, over_value_bonus = nil;\n\n          \n          bonus_table = [[1, -12], [2, -10], [3, -8], [5, -5], [7, -2], [9, -1], [11, 0], [13, 1], [15, 2], [16, 3], [17, 4], [18, 5], [19, 6], [20, 7]];\n          bonus = self.$get_torg_table_result(value, bonus_table);\n          if ($truthy($rb_gt(value, 20))) {\n            \n            over_value_bonus = $rb_plus($rb_divide($rb_minus(value, 21), 5).$to_i(), 1);\n            bonus = $rb_plus(bonus, over_value_bonus);};\n          return bonus;\n        }, $Torg_get_torg_bonus$17.$$arity = 1), nil) && 'get_torg_bonus';\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  \n  self.$require(\"bcdice/game_system/Torg\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Torg1_5');\n\n        var $nesting = [self].concat($parent_nesting), $Torg1_5_get_torg_success_level$1, $Torg1_5_get_torg_interaction_result_intimidate_test$2, $Torg1_5_get_torg_interaction_result_taunt_trick$3, $Torg1_5_get_torg_interaction_result_maneuver$4, $Torg1_5_get_torg_damage_ords$5, $Torg1_5_get_torg_damage_posibility$6, $Torg1_5_get_torg_damage$7;\n\n        \n        Opal.const_set($nesting[0], 'ID', \"Torg1.5\");\n        Opal.const_set($nesting[0], 'NAME', \"トーグ1.5版\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"とおく1.5\");\n        self.$register_prefix($$($nesting, 'Torg').$prefixes());\n        \n        Opal.def(self, '$get_torg_success_level', $Torg1_5_get_torg_success_level$1 = function $$get_torg_success_level(value) {\n          var self = this, success_table = nil;\n\n          \n          success_table = [[0, \"ぎりぎり\"], [1, \"ふつう\"], [3, \"まあよい\"], [7, \"かなりよい\"], [12, \"すごい\"]];\n          return self.$get_torg_table_result(value, success_table);\n        }, $Torg1_5_get_torg_success_level$1.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_interaction_result_intimidate_test', $Torg1_5_get_torg_interaction_result_intimidate_test$2 = function $$get_torg_interaction_result_intimidate_test(value) {\n          var self = this, interaction_results_table = nil;\n\n          \n          interaction_results_table = [[0, \"萎縮\"], [5, \"技能なし\"], [10, \"逆転負け\"], [15, \"モラル崩壊\"], [17, \"プレイヤーズコール\"]];\n          return self.$get_torg_table_result(value, interaction_results_table);\n        }, $Torg1_5_get_torg_interaction_result_intimidate_test$2.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_interaction_result_taunt_trick', $Torg1_5_get_torg_interaction_result_taunt_trick$3 = function $$get_torg_interaction_result_taunt_trick(value) {\n          var self = this, interaction_results_table = nil;\n\n          \n          interaction_results_table = [[0, \"萎縮\"], [5, \"技能なし\"], [10, \"逆転負け\"], [15, \"高揚／逆転負け\"], [17, \"プレイヤーズコール\"]];\n          return self.$get_torg_table_result(value, interaction_results_table);\n        }, $Torg1_5_get_torg_interaction_result_taunt_trick$3.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_interaction_result_maneuver', $Torg1_5_get_torg_interaction_result_maneuver$4 = function $$get_torg_interaction_result_maneuver(value) {\n          var self = this, interaction_results_table = nil;\n\n          \n          interaction_results_table = [[0, \"疲労\"], [5, \"萎縮\"], [10, \"技能なし\"], [15, \"逆転負け／疲労\"], [17, \"プレイヤーズコール\"]];\n          return self.$get_torg_table_result(value, interaction_results_table);\n        }, $Torg1_5_get_torg_interaction_result_maneuver$4.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_damage_ords', $Torg1_5_get_torg_damage_ords$5 = function $$get_torg_damage_ords(value) {\n          var self = this, damage_table_ords = nil;\n\n          \n          damage_table_ords = [[0, \"1\"], [1, \"O1\"], [2, \"K1\"], [3, \"O2\"], [4, \"K2\"], [5, \"転倒 O3\"], [6, \"転倒 K3\"], [7, \"転倒 K／O4\"], [8, \"1レベル負傷  KO4\"], [9, \"1レベル負傷  K／O5\"], [10, \"1レベル負傷  KO5\"], [11, \"2レベル負傷  K／O6\"], [12, \"2レベル負傷  KO6\"], [13, \"3レベル負傷  K／O7\"], [14, \"3レベル負傷  KO7\"], [15, \"4レベル負傷  KO8\"]];\n          return self.$get_torg_damage(value, 4, 8, damage_table_ords);\n        }, $Torg1_5_get_torg_damage_ords$5.$$arity = 1);\n        \n        Opal.def(self, '$get_torg_damage_posibility', $Torg1_5_get_torg_damage_posibility$6 = function $$get_torg_damage_posibility(value) {\n          var self = this, damage_table_posibility = nil;\n\n          \n          damage_table_posibility = [[0, \"1\"], [1, \"1\"], [2, \"O1\"], [3, \"K1\"], [4, \"2\"], [5, \"O2\"], [6, \"転倒 K2\"], [7, \"転倒 O3\"], [8, \"転倒 K3\"], [9, \"転倒 K／O3\"], [10, \"1レベル負傷  K／O4\"], [11, \"1レベル負傷  K／O4\"], [12, \"1レベル負傷  KO4\"], [13, \"2レベル負傷  K／O5\"], [14, \"2レベル負傷  KO5\"], [15, \"3レベル負傷  KO5\"]];\n          return self.$get_torg_damage(value, 3, 5, damage_table_posibility);\n        }, $Torg1_5_get_torg_damage_posibility$6.$$arity = 1);\n        return (Opal.def(self, '$get_torg_damage', $Torg1_5_get_torg_damage$7 = function $$get_torg_damage(value, max_damage, max_shock, damage_table) {\n          var self = this, table_max_value = nil, over_kill_value = nil, over_kill_damage = nil, over_kill_shock = nil;\n\n          \n          if ($truthy($rb_lt(value, 0))) {\n            return \"1\"};\n          table_max_value = $rb_minus(damage_table.$length(), 1);\n          if ($truthy($rb_le(value, table_max_value))) {\n            return self.$get_torg_table_result(value, damage_table)};\n          over_kill_value = $rb_divide($rb_minus(value, table_max_value), 2).$to_i();\n          over_kill_damage = $rb_plus(max_damage, $rb_times(over_kill_value, 1));\n          over_kill_shock = $rb_plus(max_shock, $rb_times(over_kill_value, 1));\n          return \"\" + (over_kill_damage) + \"レベル負傷  KO\" + (over_kill_shock);\n        }, $Torg1_5_get_torg_damage$7.$$arity = 4), nil) && 'get_torg_damage';\n      })($nesting[0], $$($nesting, 'Torg'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n})(Opal);\n"],"sourceRoot":"webpack:///"}