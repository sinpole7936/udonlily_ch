{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/TunnelsAndTrolls.js"],"names":["require","Opal","$rb_ge","lhs","rhs","$rb_minus","$rb_plus","$rb_gt","$rb_lt","$rb_times","$rb_divide","$rb_le","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$send2","send2","$truthy","truthy","$send","send","$hash2","hash2","$base","$parent_nesting","concat","$super","$TunnelsAndTrolls_initialize$1","$TunnelsAndTrolls_replace_text$2","$TunnelsAndTrolls_eval_game_system_specific_command$7","$TunnelsAndTrolls_roll_action$13","$TunnelsAndTrolls_roll_action_dice$15","$TunnelsAndTrolls_same_all_dice$ques$16","$TunnelsAndTrolls_interim_expr$17","$TunnelsAndTrolls_action_result$19","$TunnelsAndTrolls_success_level$20","$TunnelsAndTrolls_experience_point$21","$TunnelsAndTrolls_int$ques$22","$TunnelsAndTrolls_additional_result$23","$$prototype","dice_total","count_6","randomizer","dice_list","const_set","$register_prefix","def","$$initialize","command","$iter","$$p","$yield","find_super_dispatcher","sort_add_dice","$$arity","$private","$$replace_text","string","$$3","$$4","$$5","$$6","$$s","$last_match","$$eval_game_system_specific_command","$$8","output","m","dice_c","bonus","isHyperBerserk","$ret_or_1","dice_arr","dice_now","dice_str","isFirstLoop","n_max","bonus2","total_n","$roll_action","$replace_text","$debug","$match","$to_i","$eval","$push","$brk","new_brk","$$9","$$10","$$11","$$12","dice_wk","rollTotal","rollDiceMaxCount","dice_num","diceType","dice_face","$ret_or_2","min1","min2","$shift","$roll_barabara","$sort","$sum","$count","_i","dice_o","$writer","to_a","i","index","$join","brk","$$brk","err","$v","$to_s","$$roll_action","$$14","parser","cmd","times","total","target","sequence","level","$new","$round_type","$restrict_cmp_op_to","$enable_question_target","$parse","$command","$roll_action_dice","$modify_number","$target_number","$interim_expr","$action_result","$additional_result","$compact","$$roll_action_dice","$a","dice_list_flatten","$flatten","$ret_or_3","$size","$uniq","$$interim_expr","$$18","$ret_or_4","modifier","ds","$modifier","$$action_result","target_number","$success_level","$experience_point","$$success_level","$$experience_point","ep","$format","v","$$additional_result"],"mappings":"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","file":"default~TunnelsAndTrolls~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send2 = Opal.send2, $truthy = Opal.truthy, $send = Opal.send, $hash2 = Opal.hash2;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'TunnelsAndTrolls');\n\n        var $nesting = [self].concat($parent_nesting), $TunnelsAndTrolls_initialize$1, $TunnelsAndTrolls_replace_text$2, $TunnelsAndTrolls_eval_game_system_specific_command$7, $TunnelsAndTrolls_roll_action$13, $TunnelsAndTrolls_roll_action_dice$15, $TunnelsAndTrolls_same_all_dice$ques$16, $TunnelsAndTrolls_interim_expr$17, $TunnelsAndTrolls_action_result$19, $TunnelsAndTrolls_success_level$20, $TunnelsAndTrolls_experience_point$21, $TunnelsAndTrolls_int$ques$22, $TunnelsAndTrolls_additional_result$23;\n\n        self.$$prototype.dice_total = self.$$prototype.count_6 = self.$$prototype.randomizer = self.$$prototype.dice_list = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"TunnelsAndTrolls\");\n        Opal.const_set($nesting[0], 'NAME', \"トンネルズ＆トロールズ\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"とんねるすあんととろおるす\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・行為判定　(nD6+x>=nLV)\\n\" + \"失敗、成功、自動失敗の自動判定とゾロ目の振り足し経験値の自動計算を行います。\\n\" + \"SAVEの難易度を「レベル」で表記することが出来ます。\\n\" + \"例えば「2Lv」と書くと「25」に置換されます。\\n\" + \"判定時以外は悪意ダメージを表示します。\\n\" + \"バーサークとハイパーバーサーク用に専用コマンドが使えます。\\n\" + \"例）2D6+1>=1Lv\\n\" + \"　 (2D6+1>=20) ＞ 7[2,5]+1 ＞ 8 ＞ 失敗\\n\" + \"　判定時にはゾロ目を自動で振り足します。\\n\" + \"\\n\" + \"・バーサークとハイパーバーサーク　(nBS+x or nHBS+x)\\n\" + \"　\\\"(ダイス数)BS(修正値)\\\"でバーサーク、\\\"(ダイス数)HBS(修正値)\\\"でハイパーバーサークでロールできます。\\n\" + \"　最初のダイスの読替は、個別の出目はそのままで表示。\\n\" + \"　下から２番目の出目をずらした分だけ合計にマイナス修正を追加して表示します。\\n\");\n        self.$register_prefix(\"\\\\d+H?BS\", \"\\\\d+R6\", \"\\\\d+D\\\\d+\");\n        \n        Opal.def(self, '$initialize', $TunnelsAndTrolls_initialize$1 = function $$initialize(command) {\n          var $iter = $TunnelsAndTrolls_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $TunnelsAndTrolls_initialize$1.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $TunnelsAndTrolls_initialize$1, false, true), 'initialize', [command], null);\n          return (self.sort_add_dice = true);\n        }, $TunnelsAndTrolls_initialize$1.$$arity = 1);\n        self.$private();\n        \n        Opal.def(self, '$replace_text', $TunnelsAndTrolls_replace_text$2 = function $$replace_text(string) {\n          var $$3, $$4, $$5, $$6, self = this;\n\n          \n          if ($truthy(/BS/i['$=~'](string))) {\n            \n            string = $send(string, 'gsub', [/(\\d+)HBS([^\\d\\s][+\\-\\d]+)/i], ($$3 = function(){var self = $$3.$$s == null ? this : $$3.$$s;\n\n            return \"\" + ($$($nesting, 'Regexp').$last_match(1)) + \"R6\" + ($$($nesting, 'Regexp').$last_match(2)) + \"[H]\"}, $$3.$$s = self, $$3.$$arity = 0, $$3));\n            string = $send(string, 'gsub', [/(\\d+)HBS/i], ($$4 = function(){var self = $$4.$$s == null ? this : $$4.$$s;\n\n            return \"\" + ($$($nesting, 'Regexp').$last_match(1)) + \"R6[H]\"}, $$4.$$s = self, $$4.$$arity = 0, $$4));\n            string = $send(string, 'gsub', [/(\\d+)BS([^\\d\\s][+\\-\\d]+)/i], ($$5 = function(){var self = $$5.$$s == null ? this : $$5.$$s;\n\n            return \"\" + ($$($nesting, 'Regexp').$last_match(1)) + \"R6\" + ($$($nesting, 'Regexp').$last_match(2))}, $$5.$$s = self, $$5.$$arity = 0, $$5));\n            string = $send(string, 'gsub', [/(\\d+)BS/i], ($$6 = function(){var self = $$6.$$s == null ? this : $$6.$$s;\n\n            return \"\" + ($$($nesting, 'Regexp').$last_match(1)) + \"R6\"}, $$6.$$s = self, $$6.$$arity = 0, $$6));};\n          return string;\n        }, $TunnelsAndTrolls_replace_text$2.$$arity = 1);\n        \n        Opal.def(self, '$eval_game_system_specific_command', $TunnelsAndTrolls_eval_game_system_specific_command$7 = function $$eval_game_system_specific_command(string) {\n          var $$8, self = this, output = nil, m = nil, dice_c = nil, bonus = nil, isHyperBerserk = nil, $ret_or_1 = nil, dice_arr = nil, dice_now = nil, dice_str = nil, isFirstLoop = nil, n_max = nil, bonus2 = nil, total_n = nil;\n\n          \n          if ($truthy(/^\\d+D\\d+/i['$match?'](string))) {\n            return self.$roll_action(string)};\n          string = self.$replace_text(string);\n          self.$debug(\"tandt_berserk string\", string);\n          output = \"1\";\n          if ($truthy((m = /(^|\\s)S?((\\d+)[rR]6([+\\-\\d]*)(\\[(\\w+)\\])?)(\\s|$)/i.$match(string)))) {\n          } else {\n            return output\n          };\n          self.$debug(\"tandt_berserk matched\");\n          string = m['$[]'](2);\n          dice_c = m['$[]'](3).$to_i();\n          bonus = 0;\n          if ($truthy(m['$[]'](4))) {\n            bonus = $$($nesting, 'ArithmeticEvaluator').$eval(m['$[]'](4))};\n          isHyperBerserk = false;\n          if ($truthy((function() {if ($truthy(($ret_or_1 = m['$[]'](5)))) {\n            \n            return m['$[]'](6)['$=~'](/[Hh]/);\n          } else {\n            return $ret_or_1\n          }; return nil; })())) {\n            isHyperBerserk = true};\n          dice_arr = [];\n          dice_now = 0;\n          dice_str = \"\";\n          isFirstLoop = true;\n          n_max = 0;\n          bonus2 = 0;\n          self.$debug(\"isHyperBerserk\", isHyperBerserk);\n          dice_arr.$push(dice_c);\n          (function(){var $brk = Opal.new_brk(); try {return $send(self, 'loop', [], ($$8 = function(){var self = $$8.$$s == null ? this : $$8.$$s, $$9, $$10, $$11, $$12, dice_wk = nil, dice_list = nil, rollTotal = nil, rollDiceMaxCount = nil, dice_num = nil, diceType = nil, dice_face = nil, $ret_or_2 = nil, min1 = nil, min2 = nil;\n            if (self.randomizer == null) self.randomizer = nil;\n\n          \n            self.$debug(\"loop dice_arr\", dice_arr);\n            dice_wk = dice_arr.$shift();\n            self.$debug(\"roll dice_wk d6\", dice_wk);\n            dice_list = self.randomizer.$roll_barabara(dice_wk, 6).$sort();\n            rollTotal = dice_list.$sum();\n            rollDiceMaxCount = dice_list.$count(6);\n            if ($truthy($rb_ge(dice_wk, 2))) {\n              \n              dice_num = dice_list;\n              diceType = 6;\n              dice_face = [];\n              $send(diceType, 'times', [], ($$9 = function(_i){var self = $$9.$$s == null ? this : $$9.$$s;\n\n              \n                \n                if (_i == null) {\n                  _i = nil;\n                };\n                return dice_face.$push(0);}, $$9.$$s = self, $$9.$$arity = 1, $$9));\n              $send(dice_num, 'each', [], ($$10 = function(dice_o){var self = $$10.$$s == null ? this : $$10.$$s, $writer = nil;\n\n              \n                \n                if (dice_o == null) {\n                  dice_o = nil;\n                };\n                $writer = [$rb_minus(dice_o, 1), $rb_plus(dice_face['$[]']($rb_minus(dice_o, 1)), 1)];\n                $send(dice_face, '[]=', Opal.to_a($writer));\n                return $writer[$rb_minus($writer[\"length\"], 1)];}, $$10.$$s = self, $$10.$$arity = 1, $$10));\n              $send(dice_face, 'each', [], ($$11 = function(dice_o){var self = $$11.$$s == null ? this : $$11.$$s;\n\n              \n                \n                if (dice_o == null) {\n                  dice_o = nil;\n                };\n                if ($truthy($rb_ge(dice_o, 2))) {\n                  \n                  if ($truthy(isHyperBerserk)) {\n                    dice_o = $rb_plus(dice_o, 1)};\n                  return dice_arr.$push(dice_o);\n                } else {\n                  return nil\n                };}, $$11.$$s = self, $$11.$$arity = 1, $$11));\n              if ($truthy((function() {if ($truthy(($ret_or_2 = isFirstLoop))) {\n                return dice_arr['$empty?']()\n              } else {\n                return $ret_or_2\n              }; return nil; })())) {\n                \n                min1 = 0;\n                min2 = 0;\n                $send(diceType, 'times', [], ($$12 = function(i){var self = $$12.$$s == null ? this : $$12.$$s, index = nil;\n\n                \n                  \n                  if (i == null) {\n                    i = nil;\n                  };\n                  index = $rb_minus($rb_minus(diceType, i), 1);\n                  self.$debug(\"diceType index\", index);\n                  if ($truthy($rb_gt(dice_face['$[]'](index), 0))) {\n                    \n                    min2 = min1;\n                    return (min1 = index);\n                  } else {\n                    return nil\n                  };}, $$12.$$s = self, $$12.$$arity = 1, $$12));\n                self.$debug(\"min1, min2\", min1, min2);\n                bonus2 = $rb_minus(min2, min1)['$-@']();\n                if (min2['$=='](5)) {\n                  rollDiceMaxCount = $rb_minus(rollDiceMaxCount, 1)};\n                if ($truthy(isHyperBerserk)) {\n                  dice_arr.$push(3)\n                } else {\n                  dice_arr.$push(2)\n                };};};\n            dice_now = $rb_plus(dice_now, rollTotal);\n            if ($truthy(dice_str['$!='](\"\"))) {\n              dice_str = $rb_plus(dice_str, \"][\")};\n            dice_str = $rb_plus(dice_str, dice_list.$join(\",\"));\n            n_max = $rb_plus(n_max, rollDiceMaxCount);\n            isFirstLoop = false;\n            self.$debug(\"loop last chek dice_arr\", dice_arr);\n            if ($truthy(dice_arr['$empty?']())) {\n              \n              Opal.brk(nil, $brk)\n            } else {\n              return nil\n            };}, $$8.$$s = self, $$8.$$brk = $brk, $$8.$$arity = 0, $$8))\n          } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n          self.$debug(\"loop breaked\");\n          self.$debug(\"dice_now, bonus, bonus2\", dice_now, bonus, bonus2);\n          total_n = $rb_plus($rb_plus(dice_now, bonus), bonus2);\n          dice_str = \"\" + \"[\" + (dice_str) + \"]\";\n          output = \"\" + (dice_now) + (dice_str);\n          if ($truthy($rb_lt(bonus2, 0))) {\n            \n            self.$debug(\"bonus2\", bonus2);\n            output = $rb_plus(output, bonus2.$to_s());};\n          self.$debug(\"bonus\", bonus);\n          if ($truthy($rb_gt(bonus, 0))) {\n            output = $rb_plus(output, \"\" + \"+\" + (bonus))\n          } else if ($truthy($rb_lt(bonus, 0))) {\n            output = $rb_plus(output, bonus.$to_s())};\n          if ($truthy(output['$=~'](/[^\\d\\[\\]]+/))) {\n            output = \"\" + \"(\" + (string) + \") ＞ \" + (output) + \" ＞ \" + (total_n)\n          } else {\n            output = \"\" + \"(\" + (string) + \") ＞ \" + (total_n)\n          };\n          if ($truthy($rb_gt(n_max, 0))) {\n            output = $rb_plus(output, \"\" + \" ＞ 悪意\" + (n_max))};\n          return output;\n        }, $TunnelsAndTrolls_eval_game_system_specific_command$7.$$arity = 1);\n        \n        Opal.def(self, '$roll_action', $TunnelsAndTrolls_roll_action$13 = function $$roll_action(command) {\n          var $$14, self = this, parser = nil, cmd = nil, times = nil, total = nil, target = nil, sequence = nil;\n\n          \n          command = $send(command, 'sub', [/\\d+LV$/i], ($$14 = function(level){var self = $$14.$$s == null ? this : $$14.$$s;\n\n          \n            \n            if (level == null) {\n              level = nil;\n            };\n            return $rb_plus($rb_times(level.$to_i(), 5), 15);}, $$14.$$s = self, $$14.$$arity = 1, $$14));\n          parser = $$$($$($nesting, 'Command'), 'Parser').$new(/\\d+D6/, $hash2([\"round_type\"], {\"round_type\": self.$round_type()})).$restrict_cmp_op_to(nil, \">=\").$enable_question_target();\n          cmd = parser.$parse(command);\n          if ($truthy(cmd)) {\n          } else {\n            return nil\n          };\n          times = cmd.$command().$to_i();\n          self.$roll_action_dice(times);\n          total = $rb_plus(self.dice_total, cmd.$modify_number());\n          target = (function() {if ($truthy(cmd['$question_target?']())) {\n            return \"?\"\n          } else {\n            return cmd.$target_number()\n          }; return nil; })();\n          sequence = [\"\" + \"(\" + (cmd) + \")\", self.$interim_expr(cmd, self.dice_total), total.$to_s(), self.$action_result(total, self.dice_total, target), self.$additional_result(self.count_6)].$compact();\n          return sequence.$join(\" ＞ \");\n        }, $TunnelsAndTrolls_roll_action$13.$$arity = 1);\n        \n        Opal.def(self, '$roll_action_dice', $TunnelsAndTrolls_roll_action_dice$15 = function $$roll_action_dice(times) {\n          var $a, self = this, dice_list = nil, dice_list_flatten = nil;\n\n          \n          dice_list = self.randomizer.$roll_barabara(times, 6).$sort();\n          self.dice_list = [dice_list];\n          while ($truthy(self['$same_all_dice?'](dice_list))) {\n            \n            dice_list = self.randomizer.$roll_barabara(times, 6).$sort();\n            self.dice_list.$push(dice_list);\n          };\n          dice_list_flatten = self.dice_list.$flatten();\n          self.dice_total = dice_list_flatten.$sum();\n          return (self.count_6 = dice_list_flatten.$count(6));\n        }, $TunnelsAndTrolls_roll_action_dice$15.$$arity = 1);\n        \n        Opal.def(self, '$same_all_dice?', $TunnelsAndTrolls_same_all_dice$ques$16 = function(dice_list) {\n          var self = this, $ret_or_3 = nil;\n\n          if ($truthy(($ret_or_3 = $rb_gt(dice_list.$size(), 1)))) {\n            return dice_list.$uniq().$size()['$=='](1)\n          } else {\n            return $ret_or_3\n          }\n        }, $TunnelsAndTrolls_same_all_dice$ques$16.$$arity = 1);\n        \n        Opal.def(self, '$interim_expr', $TunnelsAndTrolls_interim_expr$17 = function $$interim_expr(cmd, dice_total) {\n          var $$18, self = this, $ret_or_4 = nil, dice_list = nil, modifier = nil;\n\n          \n          if ($truthy((function() {if ($truthy(($ret_or_4 = self.dice_list.$flatten().$size()['$=='](1)))) {\n            return cmd.$modify_number()['$=='](0)\n          } else {\n            return $ret_or_4\n          }; return nil; })())) {\n            return nil};\n          dice_list = $send(self.dice_list, 'map', [], ($$18 = function(ds){var self = $$18.$$s == null ? this : $$18.$$s;\n\n          \n            \n            if (ds == null) {\n              ds = nil;\n            };\n            return \"\" + \"[\" + (ds.$join(\",\")) + \"]\";}, $$18.$$s = self, $$18.$$arity = 1, $$18)).$join(\"\");\n          modifier = $$($nesting, 'Format').$modifier(cmd.$modify_number());\n          return [dice_total.$to_s(), dice_list, modifier].$join(\"\");\n        }, $TunnelsAndTrolls_interim_expr$17.$$arity = 2);\n        \n        Opal.def(self, '$action_result', $TunnelsAndTrolls_action_result$19 = function $$action_result(total, dice_total, target_number) {\n          var self = this;\n\n          if (dice_total['$=='](3)) {\n            return \"自動失敗\"\n          } else if ($truthy(target_number['$nil?']())) {\n            return nil\n          } else if (target_number['$=='](\"?\")) {\n            return self.$success_level(total, dice_total)\n          } else if ($truthy($rb_ge(total, target_number))) {\n            return \"\" + \"成功 ＞ 経験値\" + (self.$experience_point(target_number, dice_total))\n          } else {\n            return \"失敗\"\n          }\n        }, $TunnelsAndTrolls_action_result$19.$$arity = 3);\n        \n        Opal.def(self, '$success_level', $TunnelsAndTrolls_success_level$20 = function $$success_level(total, dice_total) {\n          var self = this, level = nil;\n\n          \n          level = $rb_divide($rb_minus(total, 15), 5).$to_i();\n          if ($truthy($rb_le(level, 0))) {\n            return \"\" + \"失敗 ＞ 経験値\" + (dice_total)\n          } else {\n            return \"\" + (level) + \"Lv成功 ＞ 経験値\" + (dice_total)\n          };\n        }, $TunnelsAndTrolls_success_level$20.$$arity = 2);\n        \n        Opal.def(self, '$experience_point', $TunnelsAndTrolls_experience_point$21 = function $$experience_point(target_number, dice_total) {\n          var self = this, ep = nil;\n\n          \n          ep = $rb_times($rb_divide($rb_times(1.0, $rb_minus(target_number, 15)), 5), dice_total);\n          if ($truthy($rb_le(ep, 0))) {\n            return \"0\"\n          } else if ($truthy(self['$int?'](ep))) {\n            return ep.$to_i().$to_s()\n          } else {\n            return self.$format(\"%.1f\", ep)\n          };\n        }, $TunnelsAndTrolls_experience_point$21.$$arity = 2);\n        \n        Opal.def(self, '$int?', $TunnelsAndTrolls_int$ques$22 = function(v) {\n          var self = this;\n\n          return v['$=='](v.$to_i())\n        }, $TunnelsAndTrolls_int$ques$22.$$arity = 1);\n        return (Opal.def(self, '$additional_result', $TunnelsAndTrolls_additional_result$23 = function $$additional_result(count_6) {\n          var self = this;\n\n          if ($truthy($rb_gt(count_6, 0))) {\n            return \"\" + \"悪意\" + (count_6)\n          } else {\n            return nil\n          }\n        }, $TunnelsAndTrolls_additional_result$23.$$arity = 1), nil) && 'additional_result';\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n})(Opal);\n"],"sourceRoot":"webpack:///"}