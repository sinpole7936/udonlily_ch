{"version":3,"sources":["./node_modules/bcdice/lib/bcdice/game_system/Utakaze.js"],"names":["require","Opal","$rb_lt","lhs","rhs","$rb_gt","$rb_plus","$rb_ge","$rb_le","$rb_times","self","top","$nesting","nil","$$$","$$","$module","module","$klass","klass","$send2","send2","$truthy","truthy","$send","send","$base","$parent_nesting","concat","$super","$Utakaze_initialize$1","$Utakaze_eval_game_system_specific_command$2","$Utakaze_checkRoll$3","$Utakaze_getRollResultString$4","$Utakaze_getSuccessInfo$5","$Utakaze_getDiceCountHash$7","$Utakaze_isNomalDice$9","$Utakaze_isDragonDice$10","$Utakaze_getValue$11","$$prototype","randomizer","arrayDragonDiceName","const_set","$register_prefix","def","$$initialize","command","$iter","$$p","$yield","find_super_dispatcher","enabled_upcase_input","$$arity","$$eval_game_system_specific_command","result","$case","base","$ret_or_1","crit","diff","$debug","$last_match","$to_i","$checkRoll","$$checkRoll","diceList","$getValue","$roll_barabara","$sort","$join","$getRollResultString","$$getRollResultString","$a","$b","success","maxnum","setCount","diffSuccess","$getSuccessInfo","to_ary","$isDragonDice","$$getSuccessInfo","_diff","$$6","diceCountHash","successDiceList","countThreshold","$getDiceCountHash","dice","count","$$s","$size","$$getDiceCountHash","dice_list","critical","$$8","$ret_or_2","$isNomalDice","$to_proc","$$isNomalDice","$$isDragonDice","$$getValue","number"],"mappings":";;;;;;;;;AAAAA,mBAAO,CAAC,uBAAD,CAAP;AAEA;;;AACA,CAAC,UAASC,IAAT,EAAe;AACd,WAASC,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASC,MAAT,CAAgBF,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASE,QAAT,CAAkBH,GAAlB,EAAuBC,GAAvB,EAA4B;AAC1B,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,WAASG,MAAT,CAAgBJ,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,IAAIC,GAAhE,GAAsED,GAAG,CAAC,KAAD,CAAH,CAAWC,GAAX,CAA7E;AACD;;AACD,WAASI,MAAT,CAAgBL,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,IAAIC,GAAhE,GAAsED,GAAG,CAAC,KAAD,CAAH,CAAWC,GAAX,CAA7E;AACD;;AACD,WAASK,SAAT,CAAmBN,GAAnB,EAAwBC,GAAxB,EAA6B;AAC3B,WAAQ,OAAOD,GAAP,KAAgB,QAAhB,IAA4B,OAAOC,GAAP,KAAgB,QAA7C,GAAyDD,GAAG,GAAGC,GAA/D,GAAqED,GAAG,CAAC,IAAD,CAAH,CAAUC,GAAV,CAA5E;AACD;;AACD,MAAIM,IAAI,GAAGT,IAAI,CAACU,GAAhB;AAAA,MAAqBC,QAAQ,GAAG,EAAhC;AAAA,MAAoCC,GAAG,GAAGZ,IAAI,CAACY,GAA/C;AAAA,MAAoDC,GAAG,GAAGb,IAAI,CAACa,GAA/D;AAAA,MAAoEC,EAAE,GAAGd,IAAI,CAACc,EAA9E;AAAA,MAAkFC,OAAO,GAAGf,IAAI,CAACgB,MAAjG;AAAA,MAAyGC,MAAM,GAAGjB,IAAI,CAACkB,KAAvH;AAAA,MAA8HC,MAAM,GAAGnB,IAAI,CAACoB,KAA5I;AAAA,MAAmJC,OAAO,GAAGrB,IAAI,CAACsB,MAAlK;AAAA,MAA0KC,KAAK,GAAGvB,IAAI,CAACwB,IAAvL;AAEA,SAAQ,UAASC,KAAT,EAAgBC,eAAhB,EAAiC;AACvC,QAAIjB,IAAI,GAAGM,OAAO,CAACU,KAAD,EAAQ,QAAR,CAAlB;AAEA,QAAId,QAAQ,GAAG,CAACF,IAAD,EAAOkB,MAAP,CAAcD,eAAd,CAAf;;AAEA,KAAC,UAASD,KAAT,EAAgBC,eAAhB,EAAiC;AAChC,UAAIjB,IAAI,GAAGM,OAAO,CAACU,KAAD,EAAQ,YAAR,CAAlB;AAEA,UAAId,QAAQ,GAAG,CAACF,IAAD,EAAOkB,MAAP,CAAcD,eAAd,CAAf;;AAEA,OAAC,UAASD,KAAT,EAAgBG,MAAhB,EAAwBF,eAAxB,EAAyC;AACxC,YAAIjB,IAAI,GAAGQ,MAAM,CAACQ,KAAD,EAAQG,MAAR,EAAgB,SAAhB,CAAjB;AAEA,YAAIjB,QAAQ,GAAG,CAACF,IAAD,EAAOkB,MAAP,CAAcD,eAAd,CAAf;AAAA,YAA+CG,qBAA/C;AAAA,YAAsEC,4CAAtE;AAAA,YAAoHC,oBAApH;AAAA,YAA0IC,8BAA1I;AAAA,YAA0KC,yBAA1K;AAAA,YAAqMC,2BAArM;AAAA,YAAkOC,sBAAlO;AAAA,YAA0PC,wBAA1P;AAAA,YAAoRC,oBAApR;AAEA5B,YAAI,CAAC6B,WAAL,CAAiBC,UAAjB,GAA8B9B,IAAI,CAAC6B,WAAL,CAAiBE,mBAAjB,GAAuC5B,GAArE;AAEAZ,YAAI,CAACyC,SAAL,CAAe9B,QAAQ,CAAC,CAAD,CAAvB,EAA4B,IAA5B,EAAkC,SAAlC;AACAX,YAAI,CAACyC,SAAL,CAAe9B,QAAQ,CAAC,CAAD,CAAvB,EAA4B,MAA5B,EAAoC,MAApC;AACAX,YAAI,CAACyC,SAAL,CAAe9B,QAAQ,CAAC,CAAD,CAAvB,EAA4B,UAA5B,EAAwC,MAAxC;AACAX,YAAI,CAACyC,SAAL,CAAe9B,QAAQ,CAAC,CAAD,CAAvB,EAA4B,cAA5B,EAA4C,KAAK,iBAAL,GAAyB,uDAAzB,GAAmF,wBAAnF,GAA8G,wBAA9G,GAAyI,8BAAzI,GAA0K,sCAA1K,GAAmN,4BAAnN,GAAkP,qCAAlP,GAA0R,gDAAtU;AACAF,YAAI,CAACiC,gBAAL,CAAsB,QAAtB;AAEA1C,YAAI,CAAC2C,GAAL,CAASlC,IAAT,EAAe,aAAf,EAA8BoB,qBAAqB,GAAG,SAASe,YAAT,CAAsBC,OAAtB,EAA+B;AACnF,cAAIC,KAAK,GAAGjB,qBAAqB,CAACkB,GAAlC;AAAA,cAAuCC,MAAM,GAAGF,KAAK,IAAIlC,GAAzD;AAAA,cAA8DH,IAAI,GAAG,IAArE;AAEA,cAAIqC,KAAJ,EAAWjB,qBAAqB,CAACkB,GAAtB,GAA4B,IAA5B;AAEX5B,gBAAM,CAACV,IAAD,EAAOT,IAAI,CAACiD,qBAAL,CAA2BxC,IAA3B,EAAiC,YAAjC,EAA+CoB,qBAA/C,EAAsE,KAAtE,EAA6E,IAA7E,CAAP,EAA2F,YAA3F,EAAyG,CAACgB,OAAD,CAAzG,EAAoH,IAApH,CAAN;AACApC,cAAI,CAAC+B,mBAAL,GAA2B,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,GAA9B,CAA3B;AACA,iBAAQ/B,IAAI,CAACyC,oBAAL,GAA4B,KAApC;AACD,SARD,EAQGrB,qBAAqB,CAACsB,OAAtB,GAAgC,CARnC;AAUAnD,YAAI,CAAC2C,GAAL,CAASlC,IAAT,EAAe,oCAAf,EAAqDqB,4CAA4C,GAAG,SAASsB,mCAAT,CAA6CP,OAA7C,EAAsD;AACxJ,cAAIpC,IAAI,GAAG,IAAX;AAAA,cAAiB4C,MAAM,GAAGzC,GAA1B;AAAA,cAA+B0C,KAAK,GAAG1C,GAAvC;AAAA,cAA4C2C,IAAI,GAAG3C,GAAnD;AAAA,cAAwD4C,SAAS,GAAG5C,GAApE;AAAA,cAAyE6C,IAAI,GAAG7C,GAAhF;AAAA,cAAqF8C,IAAI,GAAG9C,GAA5F;AAGAH,cAAI,CAACkD,MAAL,CAAY,2CAAZ,EAAyDd,OAAzD;AACAQ,gBAAM,GAAG,EAAT;AACAC,eAAK,GAAGT,OAAR;;AACA,cAAI,+BAA+B,MAA/B,EAAuCS,KAAvC,CAAJ,EAAmD;AACnDC,gBAAI,GAAI,YAAW;AAAC,kBAAIlC,OAAO,CAAEmC,SAAS,GAAG1C,EAAE,CAACH,QAAD,EAAW,QAAX,CAAF,CAAuBiD,WAAvB,CAAmC,CAAnC,CAAd,CAAX,EAAkE;AACpF,uBAAOJ,SAAP;AACD,eAFmB,MAEb;AACL,uBAAO,CAAP;AACD;;AAAA;AAAE,qBAAO5C,GAAP;AAAa,aAJT,GAIaiD,KAJb,EAAP;;AAKAJ,gBAAI,GAAG3C,EAAE,CAACH,QAAD,EAAW,QAAX,CAAF,CAAuBiD,WAAvB,CAAmC,CAAnC,EAAsCC,KAAtC,EAAP;AACAH,gBAAI,GAAG5C,EAAE,CAACH,QAAD,EAAW,QAAX,CAAF,CAAuBiD,WAAvB,CAAmC,CAAnC,EAAsCC,KAAtC,EAAP;AACAR,kBAAM,GAAG5C,IAAI,CAACqD,UAAL,CAAgBP,IAAhB,EAAsBE,IAAtB,EAA4BC,IAA5B,CAAT;AAA4C;;AAAA;;AAC5C,cAAIrC,OAAO,CAACgC,MAAM,CAAC,SAAD,CAAN,EAAD,CAAX,EAAkC;AAChC,mBAAOzC,GAAP;AAAW;;AAAA;AACb,iBAAO,KAAMiC,OAAN,GAAiB,KAAjB,GAA0BQ,MAAjC;AACD,SAnBD,EAmBGvB,4CAA4C,CAACqB,OAA7C,GAAuD,CAnB1D;AAqBAnD,YAAI,CAAC2C,GAAL,CAASlC,IAAT,EAAe,YAAf,EAA6BsB,oBAAoB,GAAG,SAASgC,WAAT,CAAqBR,IAArB,EAA2BE,IAA3B,EAAiCC,IAAjC,EAAuC;AACzF,cAAIjD,IAAI,GAAG,IAAX;AAAA,cAAiB4C,MAAM,GAAGzC,GAA1B;AAAA,cAA+BoD,QAAQ,GAAGpD,GAA1C;;AAIA,cAAI8C,IAAI,IAAI,IAAZ,EAAkB;AAChBA,gBAAI,GAAG,CAAP;AACD;;AAAA;AACDL,gBAAM,GAAG,EAAT;AACAE,cAAI,GAAG9C,IAAI,CAACwD,SAAL,CAAeV,IAAf,CAAP;AACAE,cAAI,GAAGhD,IAAI,CAACwD,SAAL,CAAeR,IAAf,CAAP;;AACA,cAAIpC,OAAO,CAACpB,MAAM,CAACsD,IAAD,EAAO,CAAP,CAAP,CAAX,EAA8B;AAC5B,mBAAOF,MAAP;AAAc;;AAAA;;AAChB,cAAIhC,OAAO,CAACjB,MAAM,CAACqD,IAAD,EAAO,CAAP,CAAP,CAAX,EAA8B;AAC5BA,gBAAI,GAAG,CAAP;AAAS;;AAAA;AACXJ,gBAAM,GAAGhD,QAAQ,CAACgD,MAAD,EAAS,KAAK,GAAL,GAAYE,IAAZ,GAAoB,KAA7B,CAAjB;AACAS,kBAAQ,GAAGvD,IAAI,CAAC8B,UAAL,CAAgB2B,cAAhB,CAA+BX,IAA/B,EAAqC,CAArC,EAAwCY,KAAxC,EAAX;AACAd,gBAAM,GAAGhD,QAAQ,CAACgD,MAAD,EAAS,KAAK,MAAL,GAAeW,QAAQ,CAACI,KAAT,CAAe,GAAf,CAAf,GAAsC,MAA/C,CAAjB;AACAf,gBAAM,GAAGhD,QAAQ,CAACgD,MAAD,EAAS5C,IAAI,CAAC4D,oBAAL,CAA0BL,QAA1B,EAAoCP,IAApC,EAA0CC,IAA1C,CAAT,CAAjB;AACA,iBAAOL,MAAP;AACD,SApBD,EAoBGtB,oBAAoB,CAACoB,OAArB,GAA+B,CAAC,CApBnC;AAsBAnD,YAAI,CAAC2C,GAAL,CAASlC,IAAT,EAAe,sBAAf,EAAuCuB,8BAA8B,GAAG,SAASsC,qBAAT,CAA+BN,QAA/B,EAAyCP,IAAzC,EAA+CC,IAA/C,EAAqD;AAC3H,cAAIa,EAAJ;AAAA,cAAQC,EAAR;AAAA,cAAY/D,IAAI,GAAG,IAAnB;AAAA,cAAyBgE,OAAO,GAAG7D,GAAnC;AAAA,cAAwC8D,MAAM,GAAG9D,GAAjD;AAAA,cAAsD+D,QAAQ,GAAG/D,GAAjE;AAAA,cAAsEyC,MAAM,GAAGzC,GAA/E;AAAA,cAAoFgE,WAAW,GAAGhE,GAAlG;AAGA4D,YAAE,GAAG/D,IAAI,CAACoE,eAAL,CAAqBb,QAArB,EAA+BP,IAA/B,EAAqCC,IAArC,CAAL,EAAiDa,EAAE,GAAGvE,IAAI,CAAC8E,MAAL,CAAYN,EAAZ,CAAtD,EAAwEC,OAAO,GAAIF,EAAE,CAAC,CAAD,CAAF,IAAS,IAAT,GAAgB3D,GAAhB,GAAsB2D,EAAE,CAAC,CAAD,CAA3G,EAAmHG,MAAM,GAAIH,EAAE,CAAC,CAAD,CAAF,IAAS,IAAT,GAAgB3D,GAAhB,GAAsB2D,EAAE,CAAC,CAAD,CAArJ,EAA6JI,QAAQ,GAAIJ,EAAE,CAAC,CAAD,CAAF,IAAS,IAAT,GAAgB3D,GAAhB,GAAsB2D,EAAE,CAAC,CAAD,CAAjM,EAAwMC,EAAxM;AACAnB,gBAAM,GAAG,EAAT;;AACA,cAAIhC,OAAO,CAACZ,IAAI,CAACsE,aAAL,CAAmBtB,IAAnB,CAAD,CAAX,EAAuC;AACrCJ,kBAAM,GAAGhD,QAAQ,CAACgD,MAAD,EAAS,KAAK,QAAL,GAAiB5C,IAAI,CAAC+B,mBAAL,CAAyB,KAAzB,EAAgCiB,IAAhC,CAAjB,GAA0D,IAA1D,GAAkEA,IAAlE,GAA0E,SAAnF,CAAjB;AAA+G;;AAAA;;AACjH,cAAIpC,OAAO,CAACoD,OAAD,CAAX,EAAsB;AAEpBpB,kBAAM,GAAGhD,QAAQ,CAACgD,MAAD,EAAS,KAAK,QAAL,GAAiBqB,MAAjB,GAA2B,IAA3B,GAAmCC,QAAnC,GAA+C,MAAxD,CAAjB;;AACA,gBAAItD,OAAO,CAACqC,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,CAAD,CAAX,EAA6B;AAE3BkB,yBAAW,GAAGtE,MAAM,CAACoE,MAAD,EAAShB,IAAT,CAApB;;AACA,kBAAIrC,OAAO,CAACuD,WAAD,CAAX,EAA0B;AACxBvB,sBAAM,GAAGhD,QAAQ,CAACgD,MAAD,EAAS,OAAT,CAAjB;AACD,eAFD,MAEO;AACLA,sBAAM,GAAGhD,QAAQ,CAACgD,MAAD,EAAS,OAAT,CAAjB;AACD;;AAAA;AAAE;;AAAA;AACN,WAXD,MAWO;AACLA,kBAAM,GAAGhD,QAAQ,CAACgD,MAAD,EAAS,IAAT,CAAjB;AACD;;AAAA;AACD,iBAAOA,MAAP;AACD,SAvBD,EAuBGrB,8BAA8B,CAACmB,OAA/B,GAAyC,CAvB5C;AAyBAnD,YAAI,CAAC2C,GAAL,CAASlC,IAAT,EAAe,iBAAf,EAAkCwB,yBAAyB,GAAG,SAAS+C,gBAAT,CAA0BhB,QAA1B,EAAoCP,IAApC,EAA0CwB,KAA1C,EAAiD;AAC7G,cAAIC,GAAJ;AAAA,cAASzE,IAAI,GAAG,IAAhB;AAAA,cAAsB0E,aAAa,GAAGvE,GAAtC;AAAA,cAA2C8D,MAAM,GAAG9D,GAApD;AAAA,cAAyDwE,eAAe,GAAGxE,GAA3E;AAAA,cAAgFyE,cAAc,GAAGzE,GAAjG;;AAGAH,cAAI,CAACkD,MAAL,CAAY,6BAAZ,EAA2CK,QAA3C,EAAqDP,IAArD;AACA0B,uBAAa,GAAG1E,IAAI,CAAC6E,iBAAL,CAAuBtB,QAAvB,EAAiCP,IAAjC,CAAhB;AACAhD,cAAI,CAACkD,MAAL,CAAY,eAAZ,EAA6BwB,aAA7B;AACAT,gBAAM,GAAG,CAAT;AACAU,yBAAe,GAAG,EAAlB;;AACAC,wBAAc,GAAI,YAAW;AAAC,gBAAIhE,OAAO,CAACZ,IAAI,CAACsE,aAAL,CAAmBtB,IAAnB,CAAD,CAAX,EAAuC;AACnE,qBAAO,CAAP;AACD,aAF6B,MAEvB;AACL,qBAAO,CAAP;AACD;;AAAA;AAAE,mBAAO7C,GAAP;AAAa,WAJC,EAAjB;;AAKAW,eAAK,CAAC4D,aAAD,EAAgB,MAAhB,EAAwB,EAAxB,GAA6BD,GAAG,GAAG,aAASK,IAAT,EAAeC,KAAf,EAAqB;AAAC,gBAAI/E,IAAI,GAAGyE,GAAG,CAACO,GAAJ,IAAW,IAAX,GAAkB,IAAlB,GAAyBP,GAAG,CAACO,GAAxC;;AAI5D,gBAAIF,IAAI,IAAI,IAAZ,EAAkB;AAChBA,kBAAI,GAAG3E,GAAP;AACD;;AAAA;;AAED,gBAAI4E,KAAK,IAAI,IAAb,EAAmB;AACjBA,mBAAK,GAAG5E,GAAR;AACD;;AAAA;;AACD,gBAAIS,OAAO,CAACjB,MAAM,CAACoF,KAAD,EAAQd,MAAR,CAAP,CAAX,EAAoC;AAClCA,oBAAM,GAAGc,KAAT;AAAe;;AAAA;;AACjB,gBAAInE,OAAO,CAACf,MAAM,CAACkF,KAAD,EAAQH,cAAR,CAAP,CAAX,EAA4C;AAC1C,qBAAOD,eAAe,CAAC,KAAD,CAAf,CAAuBG,IAAvB,CAAP;AACD,aAFD,MAEO;AACL,qBAAO3E,GAAP;AACD;;AAAA;AAAE,WAjB6B,EAiB3BsE,GAAG,CAACO,GAAJ,GAAUhF,IAjBiB,EAiBXyE,GAAG,CAAC/B,OAAJ,GAAc,CAjBH,EAiBM+B,GAjBnC,EAAL;AAkBAzE,cAAI,CAACkD,MAAL,CAAY,iBAAZ,EAA+ByB,eAA/B;;AACA,cAAI/D,OAAO,CAACd,MAAM,CAAC6E,eAAe,CAACM,KAAhB,EAAD,EAA0B,CAA1B,CAAP,CAAX,EAAiD;AAC/C,mBAAO,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAP;AAAqB;;AAAA;;AACvB,cAAIrE,OAAO,CAACZ,IAAI,CAACsE,aAAL,CAAmBtB,IAAnB,CAAD,CAAX,EAAuC;AACrCiB,kBAAM,GAAGlE,SAAS,CAACkE,MAAD,EAAS,CAAT,CAAlB;AAA8B;;AAAA;AAChC,iBAAO,CAAC,IAAD,EAAOA,MAAP,EAAeU,eAAe,CAACM,KAAhB,EAAf,CAAP;AACD,SAtCD,EAsCGzD,yBAAyB,CAACkB,OAA1B,GAAoC,CAtCvC;AAwCAnD,YAAI,CAAC2C,GAAL,CAASlC,IAAT,EAAe,mBAAf,EAAoCyB,2BAA2B,GAAG,SAASyD,kBAAT,CAA4BC,SAA5B,EAAuCC,QAAvC,EAAiD;AACjH,cAAIC,IAAJ;AAAA,cAASrF,IAAI,GAAG,IAAhB;;AAEA,iBAAOc,KAAK,CAACA,KAAK,CAACA,KAAK,CAACqE,SAAD,EAAY,QAAZ,EAAsB,EAAtB,GAA2BE,IAAG,GAAG,aAASP,IAAT,EAAc;AAAC,gBAAI9E,IAAI,GAAGqF,IAAG,CAACL,GAAJ,IAAW,IAAX,GAAkB,IAAlB,GAAyBK,IAAG,CAACL,GAAxC;AAAA,gBAA6CM,SAAS,GAAGnF,GAAzD;;AAItE,gBAAI2E,IAAI,IAAI,IAAZ,EAAkB;AAChBA,kBAAI,GAAG3E,GAAP;AACD;;AAAA;;AACD,gBAAIS,OAAO,CAAE0E,SAAS,GAAGtF,IAAI,CAACuF,YAAL,CAAkBH,QAAlB,CAAd,CAAX,EAAwD;AACtD,qBAAOE,SAAP;AACD,aAFD,MAEO;AACL,qBAAOR,IAAI,CAAC,KAAD,CAAJ,CAAYM,QAAZ,CAAP;AACD;;AAAA;AAAE,WAX8C,EAW5CC,IAAG,CAACL,GAAJ,GAAUhF,IAXkC,EAW5BqF,IAAG,CAAC3C,OAAJ,GAAc,CAXc,EAWX2C,IAXhB,EAAN,EAW6B,UAX7B,EAWyC,EAXzC,EAW6C,SAASG,QAAT,EAX7C,CAAN,EAWyE,kBAXzE,EAW6F,EAX7F,EAWiG,OAAOA,QAAP,EAXjG,CAAZ;AAYD,SAfD,EAeG/D,2BAA2B,CAACiB,OAA5B,GAAsC,CAfzC;AAiBAnD,YAAI,CAAC2C,GAAL,CAASlC,IAAT,EAAe,cAAf,EAA+B0B,sBAAsB,GAAG,SAAS+D,aAAT,CAAuBzC,IAAvB,EAA6B;AACnF,cAAIhD,IAAI,GAAG,IAAX;AAEA,iBAAOA,IAAI,CAACsE,aAAL,CAAmBtB,IAAnB,EAAyB,IAAzB,GAAP;AACD,SAJD,EAIGtB,sBAAsB,CAACgB,OAAvB,GAAiC,CAJpC;AAMAnD,YAAI,CAAC2C,GAAL,CAASlC,IAAT,EAAe,eAAf,EAAgC2B,wBAAwB,GAAG,SAAS+D,cAAT,CAAwB1C,IAAxB,EAA8B;AACvF,cAAIhD,IAAI,GAAG,IAAX;AAEA,iBAAOgD,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,CAAP;AACD,SAJD,EAIGrB,wBAAwB,CAACe,OAAzB,GAAmC,CAJtC;AAKA,eAAO,CAACnD,IAAI,CAAC2C,GAAL,CAASlC,IAAT,EAAe,WAAf,EAA4B4B,oBAAoB,GAAG,SAAS+D,UAAT,CAAoBC,MAApB,EAA4B;AACrF,cAAI5F,IAAI,GAAG,IAAX;;AAGA,cAAIY,OAAO,CAACjB,MAAM,CAACiG,MAAD,EAAS,GAAT,CAAP,CAAX,EAAkC;AAChC,mBAAO,CAAP;AAAS;;AAAA;AACX,iBAAOA,MAAP;AACD,SAPO,EAOLhE,oBAAoB,CAACc,OAArB,GAA+B,CAP1B,GAO8BvC,GAP/B,KAOuC,UAP9C;AAQD,OAvKD,EAuKGD,QAAQ,CAAC,CAAD,CAvKX,EAuKgBG,EAAE,CAACH,QAAD,EAAW,MAAX,CAvKlB,EAuKsCA,QAvKtC;AAwKD,KA7KD,EA6KGA,QAAQ,CAAC,CAAD,CA7KX,EA6KgBA,QA7KhB;AA8KD,GAnLM,CAmLJA,QAAQ,CAAC,CAAD,CAnLJ,EAmLSA,QAnLT,CAAP;AAoLD,CAzMD,EAyMGX,IAzMH,E","file":"default~Utakaze~index.js","sourcesContent":["require('./../opal');\n\n/* Generated by Opal 1.1.1 */\n(function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send2 = Opal.send2, $truthy = Opal.truthy, $send = Opal.send;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'BCDice');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'GameSystem');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Utakaze');\n\n        var $nesting = [self].concat($parent_nesting), $Utakaze_initialize$1, $Utakaze_eval_game_system_specific_command$2, $Utakaze_checkRoll$3, $Utakaze_getRollResultString$4, $Utakaze_getSuccessInfo$5, $Utakaze_getDiceCountHash$7, $Utakaze_isNomalDice$9, $Utakaze_isDragonDice$10, $Utakaze_getValue$11;\n\n        self.$$prototype.randomizer = self.$$prototype.arrayDragonDiceName = nil;\n        \n        Opal.const_set($nesting[0], 'ID', \"Utakaze\");\n        Opal.const_set($nesting[0], 'NAME', \"ウタカゼ\");\n        Opal.const_set($nesting[0], 'SORT_KEY', \"うたかせ\");\n        Opal.const_set($nesting[0], 'HELP_MESSAGE', \"\" + \"・行為判定ロール（nUK）\\n\" + \"  n個のサイコロで行為判定ロール。ゾロ目の最大個数を成功レベルとして表示。nを省略すると2UK扱い。\\n\" + \"  例）3UK ：サイコロ3個で行為判定\\n\" + \"  例）UK  ：サイコロ2個で行為判定\\n\" + \"  不等号用いた成否判定は現時点では実装してません。\\n\" + \"・クリティカルコール付き行為判定ロール（nUK@c or nUKc）\\n\" + \"　cに「龍のダイス目」を指定した行為判定ロール。\\n\" + \"  ゾロ目ではなく、cと同じ値の出目数x2が成功レベルとなります。\\n\" + \"  例）3UK@5 ：龍のダイス「月」でクリティカルコール宣言したサイコロ3個の行為判定\\n\");\n        self.$register_prefix(\"\\\\d*UK\");\n        \n        Opal.def(self, '$initialize', $Utakaze_initialize$1 = function $$initialize(command) {\n          var $iter = $Utakaze_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $Utakaze_initialize$1.$$p = null;\n          \n          $send2(self, Opal.find_super_dispatcher(self, 'initialize', $Utakaze_initialize$1, false, true), 'initialize', [command], null);\n          self.arrayDragonDiceName = [\"\", \"風\", \"雨\", \"雲\", \"影\", \"月\", \"歌\"];\n          return (self.enabled_upcase_input = false);\n        }, $Utakaze_initialize$1.$$arity = 1);\n        \n        Opal.def(self, '$eval_game_system_specific_command', $Utakaze_eval_game_system_specific_command$2 = function $$eval_game_system_specific_command(command) {\n          var self = this, result = nil, $case = nil, base = nil, $ret_or_1 = nil, crit = nil, diff = nil;\n\n          \n          self.$debug(\"eval_game_system_specific_command command\", command);\n          result = \"\";\n          $case = command;\n          if (/(\\d+)?UK(@?(\\d))?(>=(\\d+))?/i['$===']($case)) {\n          base = (function() {if ($truthy(($ret_or_1 = $$($nesting, 'Regexp').$last_match(1)))) {\n            return $ret_or_1\n          } else {\n            return 2\n          }; return nil; })().$to_i();\n          crit = $$($nesting, 'Regexp').$last_match(3).$to_i();\n          diff = $$($nesting, 'Regexp').$last_match(5).$to_i();\n          result = self.$checkRoll(base, crit, diff);};\n          if ($truthy(result['$empty?']())) {\n            return nil};\n          return \"\" + (command) + \" ＞ \" + (result);\n        }, $Utakaze_eval_game_system_specific_command$2.$$arity = 1);\n        \n        Opal.def(self, '$checkRoll', $Utakaze_checkRoll$3 = function $$checkRoll(base, crit, diff) {\n          var self = this, result = nil, diceList = nil;\n\n          \n          \n          if (diff == null) {\n            diff = 0;\n          };\n          result = \"\";\n          base = self.$getValue(base);\n          crit = self.$getValue(crit);\n          if ($truthy($rb_lt(base, 1))) {\n            return result};\n          if ($truthy($rb_gt(crit, 6))) {\n            crit = 6};\n          result = $rb_plus(result, \"\" + \"(\" + (base) + \"d6)\");\n          diceList = self.randomizer.$roll_barabara(base, 6).$sort();\n          result = $rb_plus(result, \"\" + \" ＞ [\" + (diceList.$join(\",\")) + \"] ＞ \");\n          result = $rb_plus(result, self.$getRollResultString(diceList, crit, diff));\n          return result;\n        }, $Utakaze_checkRoll$3.$$arity = -3);\n        \n        Opal.def(self, '$getRollResultString', $Utakaze_getRollResultString$4 = function $$getRollResultString(diceList, crit, diff) {\n          var $a, $b, self = this, success = nil, maxnum = nil, setCount = nil, result = nil, diffSuccess = nil;\n\n          \n          $b = self.$getSuccessInfo(diceList, crit, diff), $a = Opal.to_ary($b), (success = ($a[0] == null ? nil : $a[0])), (maxnum = ($a[1] == null ? nil : $a[1])), (setCount = ($a[2] == null ? nil : $a[2])), $b;\n          result = \"\";\n          if ($truthy(self.$isDragonDice(crit))) {\n            result = $rb_plus(result, \"\" + \"龍のダイス「\" + (self.arrayDragonDiceName['$[]'](crit)) + \"」(\" + (crit) + \")を使用 ＞ \")};\n          if ($truthy(success)) {\n            \n            result = $rb_plus(result, \"\" + \"成功レベル:\" + (maxnum) + \" (\" + (setCount) + \"セット)\");\n            if ($truthy(diff['$!='](0))) {\n              \n              diffSuccess = $rb_ge(maxnum, diff);\n              if ($truthy(diffSuccess)) {\n                result = $rb_plus(result, \" ＞ 成功\")\n              } else {\n                result = $rb_plus(result, \" ＞ 失敗\")\n              };};\n          } else {\n            result = $rb_plus(result, \"失敗\")\n          };\n          return result;\n        }, $Utakaze_getRollResultString$4.$$arity = 3);\n        \n        Opal.def(self, '$getSuccessInfo', $Utakaze_getSuccessInfo$5 = function $$getSuccessInfo(diceList, crit, _diff) {\n          var $$6, self = this, diceCountHash = nil, maxnum = nil, successDiceList = nil, countThreshold = nil;\n\n          \n          self.$debug(\"checkSuccess diceList, crit\", diceList, crit);\n          diceCountHash = self.$getDiceCountHash(diceList, crit);\n          self.$debug(\"diceCountHash\", diceCountHash);\n          maxnum = 0;\n          successDiceList = [];\n          countThreshold = (function() {if ($truthy(self.$isDragonDice(crit))) {\n            return 1\n          } else {\n            return 2\n          }; return nil; })();\n          $send(diceCountHash, 'each', [], ($$6 = function(dice, count){var self = $$6.$$s == null ? this : $$6.$$s;\n\n          \n            \n            if (dice == null) {\n              dice = nil;\n            };\n            \n            if (count == null) {\n              count = nil;\n            };\n            if ($truthy($rb_gt(count, maxnum))) {\n              maxnum = count};\n            if ($truthy($rb_ge(count, countThreshold))) {\n              return successDiceList['$<<'](dice)\n            } else {\n              return nil\n            };}, $$6.$$s = self, $$6.$$arity = 2, $$6));\n          self.$debug(\"successDiceList\", successDiceList);\n          if ($truthy($rb_le(successDiceList.$size(), 0))) {\n            return [false, 0, 0]};\n          if ($truthy(self.$isDragonDice(crit))) {\n            maxnum = $rb_times(maxnum, 2)};\n          return [true, maxnum, successDiceList.$size()];\n        }, $Utakaze_getSuccessInfo$5.$$arity = 3);\n        \n        Opal.def(self, '$getDiceCountHash', $Utakaze_getDiceCountHash$7 = function $$getDiceCountHash(dice_list, critical) {\n          var $$8, self = this;\n\n          return $send($send($send(dice_list, 'select', [], ($$8 = function(dice){var self = $$8.$$s == null ? this : $$8.$$s, $ret_or_2 = nil;\n\n          \n            \n            if (dice == null) {\n              dice = nil;\n            };\n            if ($truthy(($ret_or_2 = self.$isNomalDice(critical)))) {\n              return $ret_or_2\n            } else {\n              return dice['$=='](critical)\n            };}, $$8.$$s = self, $$8.$$arity = 1, $$8)), 'group_by', [], \"itself\".$to_proc()), 'transform_values', [], \"size\".$to_proc())\n        }, $Utakaze_getDiceCountHash$7.$$arity = 2);\n        \n        Opal.def(self, '$isNomalDice', $Utakaze_isNomalDice$9 = function $$isNomalDice(crit) {\n          var self = this;\n\n          return self.$isDragonDice(crit)['$!']()\n        }, $Utakaze_isNomalDice$9.$$arity = 1);\n        \n        Opal.def(self, '$isDragonDice', $Utakaze_isDragonDice$10 = function $$isDragonDice(crit) {\n          var self = this;\n\n          return crit['$!='](0)\n        }, $Utakaze_isDragonDice$10.$$arity = 1);\n        return (Opal.def(self, '$getValue', $Utakaze_getValue$11 = function $$getValue(number) {\n          var self = this;\n\n          \n          if ($truthy($rb_gt(number, 100))) {\n            return 0};\n          return number;\n        }, $Utakaze_getValue$11.$$arity = 1), nil) && 'getValue';\n      })($nesting[0], $$($nesting, 'Base'), $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n})(Opal);\n"],"sourceRoot":"webpack:///"}